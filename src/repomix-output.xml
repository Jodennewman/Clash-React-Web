<repomix>This file is a merged representation of the entire codebase, combined into a single document by Repomix.
The content has been processed where content has been formatted for parsing in xml style, content has been compressed (code blocks are separated by ⋮---- delimiter).<file_summary>This section contains a summary of this file.<purpose>This file contains a packed representation of the entire repository&apos;s contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.</purpose><file_format>The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file</file_format><usage_guidelines>- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.</usage_guidelines><notes>- Some files may have been excluded based on .gitignore rules and Repomix&apos;s configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Content has been formatted for parsing in xml style
- Content has been compressed - code blocks are separated by ⋮---- delimiter
- Files are sorted by Git change count (files with more changes are at the bottom)</notes><additional_info></additional_info></file_summary><directory_structure>api/
  crm-integration.ts
app/
  globals.css
assets/
  main/
    LogoSVG/
      Title Elements.svg
    badge.svg
    Blue Ball.svg
    logo-white.svg
  react.svg
components/
  Calendly/
    CalendlyDemo.tsx
    CalendlyInlineWidget.tsx
    CalendlyPopupWidget.tsx
    embed-inline.html
    embed-popupwidget.html
    index.ts
  Course Stats/
    Thumbnail-Splay.tsx
  form/
    application-form-zod-schema.ts
    ApplicationFormWrapper.tsx
    form-shadcn-claude.tsx
    VSApplicationFormModal.tsx
  funModal/
    InputDesign.test.tsx
    InputDesign.tsx
    InputWithClearButton.test.tsx
    InputWithClearButton.tsx
  hero/
    IsometricPattern.tsx
    SimpleHero.tsx
  logos/
    AnimatedLogo.css
    AnimatedLogo.tsx
    catalog.tsx
    coreos.tsx
    discord.tsx
    easytax.tsx
    figma.tsx
    github.tsx
    gpxoverlay.tsx
    leapyear.tsx
    peregrin.tsx
    pictelai.tsx
    react.tsx
    shadcn-ui.tsx
    tailwind.tsx
    typescript.tsx
    x.tsx
  marble-buttons/
    AnimatedButton.test.tsx
    AnimatedButton.tsx
    AnimatedButtonsDemo.test.tsx
    AnimatedButtonsDemo.tsx
    ButtonCollection.test.tsx
    ButtonCollection.tsx
    tailwind.config.js
    useRippleEffect.test.tsx
  modals/
    index.ts
    ModalsImplementation.tsx
    ModalTest.tsx
    OrderDetailsModal.tsx
    README.md
    TimelineModal.tsx
    VSApplicationModal.tsx
    VSModalExamples.tsx
    VSQuizModal.tsx
    VSSubmoduleModal.tsx
  sections/
    bento-grid/
      3-rows-bottom.tsx
      3-rows-top.tsx
      vsBentoGrid.tsx
    carousel/
      large.tsx
      static.tsx
      VSCarousel.tsx
    navbar/
      default.tsx
      sticky.tsx
      vs-navbar.tsx
    social-proof/
      marquee-2-rows.tsx
    tabs/
      left.tsx
    BeforeAfterStats.tsx
    Case-Studies.tsx
    ConnectEverything.tsx
    course-stats.tsx
    course-viewer.tsx
    Customisation.tsx
    faq-raised.tsx
    faq-updated.tsx
    featured-modules.tsx
    founder-track.tsx
    index.ts
    module-breakdown-simplified.tsx
    module-breakdown.tsx
    ModuleHUDShowcase.tsx
    pricing-3-cols-subscription.tsx
    pricing-quiz-modal.tsx
    PricingSimple.tsx
    TeamSection.tsx
    VS-BigReveal.tsx
    VS-Interactive-Features.tsx
    VSCharts.tsx
    VSPainPoints.tsx
    VSPricingQuizModal.tsx
  seo/
    CanonicalUrl.tsx
    DynamicMeta.tsx
    SchemaScript.tsx
  ui/
    accordion-raised.tsx
    accordion.tsx
    alert.tsx
    avatar.tsx
    badge.tsx
    beam.tsx
    button.tsx
    card.tsx
    carousel.tsx
    chart.tsx
    checkbox.tsx
    dialog.tsx
    dropdown-menu.tsx
    footer.tsx
    form.tsx
    glow.tsx
    image.tsx
    input.tsx
    item.tsx
    label.tsx
    lead-capture-form.tsx
    link.tsx
    logo.tsx
    marquee.tsx
    mockup.tsx
    mode-toggle.tsx
    navbar.tsx
    navigation-menu.tsx
    navigation.tsx
    radio-group.tsx
    section.tsx
    select.tsx
    sheet.tsx
    slide.tsx
    social-proof-item.tsx
    social-stats.tsx
    switch.tsx
    tabs.tsx
    TeamPhotoDecoration.tsx
    testimonial-carousel.tsx
    textarea.tsx
    theme-index.ts
    theme-provider.tsx
    theme-toggle.tsx
    ThemeController.tsx
    ThemeScript.tsx
    tile.tsx
    tooltip.tsx
    video-embed.tsx
    vs-background.tsx
    vs-button.tsx
    vs-components.tsx
    vs-modal.tsx
    vs-text.tsx
    VSThemeWrapper.tsx
    WithTheme.tsx
  Word-Rollers/
    example.tsx
    style.css
    WordRoller.css
    WordRoller.tsx
    WordRollerWithPrefix.tsx
  Area-chart-shad.tsx.ts
  Color-theme-display.tsx
  ComingSoon.tsx
  ContentOverwhelmer.tsx
  CourseTimeline.tsx
  DirectClassTest.tsx
  DirectTest.tsx
  ImageDemo.jsx
  ImageTest.jsx
  layout.tsx
  Modules.tsx
  pricing.js
  pricingTable.js
  scroll-effect-component.tsx
  SectionsAndForms.tsx
  SimpleHero.tsx
  ThemeDemo.tsx
  ThemeStyleGuide.tsx
  ThemeTest.tsx
  VSExampleComponent.tsx
  VSModalShowcase.tsx
  WordRoller.tsx
data/
  before-after-examples.ts
  course-data.json
  extract-thumbnails-script.cjs
  fixed-course-editor.html
  pricing.ts
lib/
  course-utils.ts
  utils.ts
pages/
  DebugPage.tsx
  NotFoundPage.tsx
Qualification_components/
  modal-components/
    recommendation/
      FoundationRecommendation.tsx
      PremiumRecommendation.tsx
    AnalysisAnimation.tsx
    AnalysisBreakdown.tsx
    ContactStage.tsx
    index.ts
    IntroStage.tsx
    ModalContainer.tsx
    ModalFooter.tsx
    QuestionStage.tsx
    StageIcon.tsx
  integration-guide.md
  modal-implementation.tsx
  qualification-modal.tsx
  tia-booking-page.tsx
  tia-components-index.ts
  tia-contact-stage.tsx
  tia-content-vision-stage.tsx
  tia-future-sections-plan.md
  tia-intro-stage.tsx
  tia-learning-style-stage.tsx
  tia-loading-animation.tsx
  tia-modal-container.tsx
  tia-modal-implementation.tsx
  tia-preview.tsx
  tia-qualification-modal.tsx
  tia-qualification-summary.md
  tia-question-stage.tsx
  tia-recommendation-stage.tsx
  tia-team-size-stage.tsx
  tia-timeline-stage.tsx
scripts/
  output/
    instagram_links.md
  package.json
styles/
  modules/
    animations.css
    base-elements.css
    components.css
    dark-mode.css
    theme-utilities.css
    utilities.css
    variables.css
  custom-text.css
  direct-colors.css
  index.css
  modulehud.css
  README.md
  utils.css
  week-by-week.css
types/
  courseTypes.ts
  parallax.d.ts
utils/
  schema/
    generators.ts
    schema-validator.ts
    types.ts
  animation-utils.tsx
  assetUtils.js
  image-optimizer.ts
  imageMap.js
  importImages.js
  parallaxScroll.ts
  thumbnailMapper.js
  web-vitals-monitor.ts
App.tsx
index.css
main.jsx
main.tsx
router.tsx
ScrollSmootherTest.tsx
SimpleTest.tsx
video-peek.css
vite-env.d.ts</directory_structure><files>This section contains the contents of the repository&apos;s files.<file path="api/crm-integration.ts">import axios from &apos;axios&apos;;
⋮----
// Helper function to send data to Kajabi
const sendToKajabi = async (kajabiData: any) =&gt;
⋮----
// Add notes with detailed information
⋮----
// Helper function to send data to Kit (formerly ConvertKit)
const sendToKit = async (kitData: any) =&gt;
⋮----
// Create or update subscriber in Kit
⋮----
// Add each tag to the subscriber
⋮----
// First create tag if it doesn&apos;t exist
⋮----
// Then add subscriber to tag
⋮----
// API handler function
export const crmIntegrationHandler = async (req: Request) =&gt;
⋮----
// Parse the request body
⋮----
// Validate required data
⋮----
// Initialize results
⋮----
// Send data to Kajabi
⋮----
// Send data to Kit
⋮----
// Determine overall success
⋮----
// Return response
⋮----
// Default export for use with API routes</file><file path="app/globals.css">/* Define dark mode variant using Tailwind v4 custom variant approach */
⋮----
/* 
 * THEME-AWARE STYLING SYSTEM
 * 
 * This CSS implements a &quot;single source of truth&quot; approach for theme variables.
 * All theme-aware variables (prefixed with --theme-*) automatically change 
 * value based on the current theme, eliminating competing styles.
 */
⋮----
/* Chart variables */
:root {
⋮----
/* ==========================================
     BASE COLOR PALETTE DEFINITIONS - LIGHT MODE
     ========================================== */
⋮----
/* Background colors */
⋮----
/* Navy backgrounds - defined in light mode for reference */
⋮----
/* Primary palette */
⋮----
/* =================================================
   DARK MODE THEME OVERRIDES - ENHANCED VISUAL STYLE
   ================================================= */
⋮----
/* 
 * Dark mode overrides using the data-theme attribute selector
 * Only override the theme-aware variables that need to change
 */
.dark, [data-theme=&quot;dark&quot;] {
⋮----
/* Background colors for dark mode - rich navy colors */
⋮----
/* Enhanced HUD Colors */
⋮----
/* Theme-aware variables for dark mode */
⋮----
/* Theme text colors - dark mode */
⋮----
/* Theme background colors - dark mode */
⋮----
/* Module backgrounds with gradients for dark mode */
⋮----
/* Enhanced shadows for dark mode - more depth */
⋮----
/* Subtle glow effects for dark mode */
⋮----
/* Text colors for dark mode */
⋮----
/* Primary colors - brighter and more vibrant in dark mode */
⋮----
/* Secondary colors - brighter in dark mode */
⋮----
/* Button gradients */
.vs-btn-primary-gradient {
⋮----
.vs-btn-primary-gradient-hover {
⋮----
.vs-btn-secondary-gradient {
⋮----
.vs-btn-secondary-gradient-hover {
⋮----
.vs-btn-vibrant-gradient {
⋮----
.vs-btn-vibrant-gradient-hover {
⋮----
.vs-btn-destructive-gradient {
⋮----
.vs-btn-destructive-gradient-hover {
⋮----
/* =================================================
   BASE HTML ELEMENTS
   ================================================= */
⋮----
html {
⋮----
body {
⋮----
/* Typography */
h1, h2, h3, h4, h5, h6 {
⋮----
h1 {
⋮----
h2 {
⋮----
h3 {
⋮----
h4 {
⋮----
h5 {
⋮----
h6 {
⋮----
p {
⋮----
a {
⋮----
a:hover {
⋮----
/* Text utilities */
.text-accent {
⋮----
.text-accent-red {
⋮----
.text-primary {
⋮----
.text-secondary {
⋮----
/* Container and layout */
.container {
⋮----
.grid-bg {
⋮----
.dark .grid-bg, [data-theme=&quot;dark&quot;] .grid-bg {
⋮----
.dot-bg {
⋮----
.dark .dot-bg, [data-theme=&quot;dark&quot;] .dot-bg {
⋮----
.btn:hover {
⋮----
.btn-primary {
⋮----
.btn-primary:hover {
⋮----
.btn-accent {
⋮----
/* Enhanced Dark Mode Buttons */
.dark .btn, [data-theme=&quot;dark&quot;] .btn {
⋮----
/* Already using theme-shadow-btn variable which includes glow in dark mode */
⋮----
.dark .btn-primary, [data-theme=&quot;dark&quot;] .btn-primary {
⋮----
.dark .btn-primary:hover, [data-theme=&quot;dark&quot;] .btn-primary:hover {
⋮----
/* Already using theme-shadow-md variable in hover state which includes proper glow */
⋮----
.dark .btn-accent, [data-theme=&quot;dark&quot;] .btn-accent {
⋮----
.btn-ghost {
⋮----
.btn-ghost:hover {
⋮----
.dark .btn-ghost, [data-theme=&quot;dark&quot;] .btn-ghost {
⋮----
.dark .btn-ghost:hover, [data-theme=&quot;dark&quot;] .btn-ghost:hover {
⋮----
/* Cards and containers */
.card {
⋮----
.card:hover {
⋮----
/* Enhanced Dark Mode Cards */
.dark .card, [data-theme=&quot;dark&quot;] .card {
⋮----
/* Already using theme-shadow-card which includes proper glow */
⋮----
.dark .card:hover, [data-theme=&quot;dark&quot;] .card:hover {
⋮----
/* Already using theme-shadow-card-hover which includes proper glow */
⋮----
.card-header {
⋮----
.card-body {
⋮----
.card-footer {
⋮----
.dark .card-header, [data-theme=&quot;dark&quot;] .card-header {
⋮----
.dark .card-footer, [data-theme=&quot;dark&quot;] .card-footer {
⋮----
/* Navigation */
.nav {
⋮----
.nav-logo {
⋮----
.nav-links {
⋮----
.nav-link {
⋮----
.nav-link:hover {
⋮----
.nav-link.active {
⋮----
/* Enhanced Dark Mode Nav */
.dark .nav-link, [data-theme=&quot;dark&quot;] .nav-link {
⋮----
.dark .nav-link:hover, [data-theme=&quot;dark&quot;] .nav-link:hover {
⋮----
.dark .nav-link.active, [data-theme=&quot;dark&quot;] .nav-link.active {
⋮----
/* Module grid */
.module-grid {
⋮----
.module {
⋮----
.module:hover {
⋮----
/* Enhanced Dark Mode Modules */
.dark .module, [data-theme=&quot;dark&quot;] .module {
⋮----
/* Already using theme-shadow-sm which includes proper glow */
⋮----
.dark .module:hover, [data-theme=&quot;dark&quot;] .module:hover {
⋮----
/* Already using theme-shadow-md which includes proper glow */
⋮----
.module.teal {
⋮----
.module.orange {
⋮----
.module.coral {
⋮----
/* Enhanced Dark Mode Colored Modules */
.dark .module.teal, [data-theme=&quot;dark&quot;] .module.teal {
⋮----
.dark .module.orange, [data-theme=&quot;dark&quot;] .module.orange {
⋮----
.dark .module.coral, [data-theme=&quot;dark&quot;] .module.coral {
⋮----
/* Gradient text effects */
.gradient-text {
/* Enhanced Dark Mode Gradient Text */
.dark .gradient-text, [data-theme=&quot;dark&quot;] .gradient-text {
⋮----
/* Float animations for accent elements */
⋮----
.animate-float-slow {
⋮----
.animate-float-medium {
⋮----
/* Text shadow utilities for both light and dark mode */
.text-shadow-sm {
⋮----
.text-shadow-md {
⋮----
.text-shadow-lg {
⋮----
/* Dark mode variations might need different shadow colors */
.dark .text-shadow-sm, [data-theme=&quot;dark&quot;] .text-shadow-sm {
⋮----
.dark .text-shadow-md, [data-theme=&quot;dark&quot;] .text-shadow-md {
⋮----
.dark .text-shadow-lg, [data-theme=&quot;dark&quot;] .text-shadow-lg {
⋮----
/* Text over images - white with shadow for both modes */
.text-over-image {
⋮----
.text-over-image-light {
⋮----
.text-over-image-secondary {
⋮----
/* VS Bubbly hover utilities */
.hover-bubbly {
.hover-bubbly:hover {
⋮----
.hover-bubbly-sm {
.hover-bubbly-sm:hover {
⋮----
.hover-bubbly-lg {
.hover-bubbly-lg:hover {
⋮----
/* Floating elements for visual interest */
.vs-float-element-light-1 {
⋮----
.vs-float-element-light-2 {
⋮----
/* Dark mode floating elements */
.dark .vs-float-element-light-1,
⋮----
.dark .vs-float-element-dark-1,
⋮----
/* Card and UI element styles */
.vs-card-shadow {
⋮----
.vs-card-shadow:hover {
⋮----
.dark .vs-card-shadow, [data-theme=&quot;dark&quot;] .vs-card-shadow {
⋮----
.dark .vs-card-shadow:hover, [data-theme=&quot;dark&quot;] .vs-card-shadow:hover {
⋮----
/* Carousel styles */
.vs-carousel-container {
⋮----
.dark .vs-carousel-container, [data-theme=&quot;dark&quot;] .vs-carousel-container {
⋮----
.vs-carousel-slide {
⋮----
.dark .vs-carousel-slide, [data-theme=&quot;dark&quot;] .vs-carousel-slide {
⋮----
.vs-carousel-slide:hover {
⋮----
.dark .vs-carousel-slide:hover, [data-theme=&quot;dark&quot;] .vs-carousel-slide:hover {
⋮----
/* Image gradient overlays */
.vs-fade-overlay-light {
⋮----
.vs-fade-overlay-dark {
⋮----
/* Depth-enhanced backgrounds for dark mode */
.vs-depth-bg-dark {
⋮----
/* Accent Badge */
.vs-accent-badge {
⋮----
.dark .vs-accent-badge, [data-theme=&quot;dark&quot;] .vs-accent-badge {
⋮----
/* Carousel Navigation Buttons */
.vs-carousel-btn {
⋮----
.vs-carousel-btn:hover {
⋮----
.dark .vs-carousel-btn, [data-theme=&quot;dark&quot;] .vs-carousel-btn {
⋮----
.dark .vs-carousel-btn:hover, [data-theme=&quot;dark&quot;] .vs-carousel-btn:hover {
⋮----
/* Section Backgrounds */
.vs-section-light {
⋮----
.dark .vs-section-light, [data-theme=&quot;dark&quot;] .vs-section-light {
⋮----
.vs-section-dark {
⋮----
.dark .vs-section-dark, [data-theme=&quot;dark&quot;] .vs-section-dark {
⋮----
/* Carousel Slide Button */
.vs-slide-btn {
⋮----
.vs-slide-btn:hover {
⋮----
.dark .vs-slide-btn, [data-theme=&quot;dark&quot;] .vs-slide-btn {
⋮----
.dark .vs-slide-btn:hover, [data-theme=&quot;dark&quot;] .vs-slide-btn:hover {
⋮----
/* Enhanced Pro Tip Component */
.pro-tip {
⋮----
.dark .pro-tip, [data-theme=&quot;dark&quot;] .pro-tip {
⋮----
/* Enhanced Feature Item */
.feature-item {
⋮----
.dark .feature-item, [data-theme=&quot;dark&quot;] .feature-item {
⋮----
/* Testimonial container */
.vs-testimonial-container {
⋮----
.dark .vs-testimonial-container, [data-theme=&quot;dark&quot;] .vs-testimonial-container {
⋮----
/* Testimonial accent elements */
.vs-testimonial-accent {
⋮----
.dark .vs-testimonial-accent, [data-theme=&quot;dark&quot;] .vs-testimonial-accent {
⋮----
/* Testimonial pagination dots */
.vs-testimonial-dot {
⋮----
.vs-testimonial-dot:hover {
⋮----
.vs-testimonial-dot-active {
⋮----
.dark .vs-testimonial-dot-active, [data-theme=&quot;dark&quot;] .vs-testimonial-dot-active {
⋮----
/* Navbar styles */
.vs-navbar {
⋮----
.dark .vs-navbar, [data-theme=&quot;dark&quot;] .vs-navbar {
⋮----
.vs-navbar-glass {
⋮----
.dark .vs-navbar-glass, [data-theme=&quot;dark&quot;] .vs-navbar-glass {
⋮----
/* Fade effect for bottom of navbar */
.fade-bottom::after {
⋮----
.dark .fade-bottom::after, [data-theme=&quot;dark&quot;] .fade-bottom::after {
⋮----
/* VS Logo */
.vs-logo {
⋮----
.vs-logo-primary {
⋮----
.dark .vs-logo-primary, [data-theme=&quot;dark&quot;] .vs-logo-primary {
⋮----
.vs-logo:hover {
⋮----
.dark .vs-logo:hover, [data-theme=&quot;dark&quot;] .vs-logo:hover {
⋮----
/* Stats Badge */
.stats-badge {
⋮----
.stats-badge-number {
⋮----
.stats-badge-label {
⋮----
/* Enhanced Dark Mode Stats Badge */
.dark .stats-badge, [data-theme=&quot;dark&quot;] .stats-badge {
⋮----
.dark .stats-badge-number, [data-theme=&quot;dark&quot;] .stats-badge-number {
⋮----
.dark .stats-badge-label, [data-theme=&quot;dark&quot;] .stats-badge-label {
⋮----
/* =================================================
   THEME-AWARE UTILITY CLASSES
   ================================================= */
⋮----
/* Theme-aware text colors */
.text-theme-primary {
⋮----
.text-theme-secondary {
⋮----
.text-theme-tertiary {
⋮----
.text-theme-subtle {
⋮----
.text-theme-accent {
⋮----
.text-theme-error {
⋮----
.text-theme-bg {
⋮----
.text-theme-gradient {
⋮----
.text-theme-custom {
⋮----
/* Custom text color with dynamic theming - specific per instance */
⋮----
.text-theme-primary-light {
⋮----
.text-theme-on-primary {
⋮----
.text-theme-accent-tertiary {
⋮----
.text-theme-accent-secondary {
⋮----
.text-theme-accent-quaternary {
⋮----
.bg-theme-secondary {
⋮----
.bg-theme-surface {
⋮----
.bg-theme-card {
⋮----
.bg-theme-accent {
⋮----
.bg-theme-error {
⋮----
.bg-theme-bg {
⋮----
.bg-theme-border {
⋮----
.bg-theme-custom {
⋮----
/* Custom background with dynamic theming - specific per instance */
⋮----
.bg-theme-glow {
⋮----
.bg-theme-content {
⋮----
.bg-theme-on {
⋮----
.bg-theme-accent-secondary {
⋮----
.bg-theme-accent-tertiary {
⋮----
.bg-theme-accent-quaternary {
⋮----
.bg-theme-bg-primary {
⋮----
.bg-theme-primary-light {
⋮----
.bg-theme-accent-secondary-light {
⋮----
.bg-theme-primary-hover {
⋮----
.bg-theme-bg-light {
⋮----
.bg-theme-border-light {
⋮----
/* Theme-aware pattern colors */
.bg-theme-pattern {
⋮----
.bg-theme-pattern-light {
⋮----
.bg-theme-pattern-dense {
⋮----
/* Theme-aware gradients */
.bg-theme-gradient {
⋮----
.bg-theme-gradient-card {
⋮----
.bg-theme-gradient-primary {
⋮----
.dark .bg-theme-gradient-primary, [data-theme=&quot;dark&quot;] .bg-theme-gradient-primary {
⋮----
.bg-theme-gradient-secondary {
⋮----
.dark .bg-theme-gradient-secondary, [data-theme=&quot;dark&quot;] .bg-theme-gradient-secondary {
⋮----
.bg-theme-gradient-accent {
⋮----
.dark .bg-theme-gradient-accent, [data-theme=&quot;dark&quot;] .bg-theme-gradient-accent {
⋮----
.bg-theme-gradient-text {
⋮----
/* Theme-aware borders */
.border-theme-light {
⋮----
/* Theme-aware backgrounds */
⋮----
.bg-theme-gradient-overlay-light {
⋮----
.dark .bg-theme-gradient-text, [data-theme=&quot;dark&quot;] .bg-theme-gradient-text {
⋮----
.bg-theme-primary {
⋮----
.border-theme-primary {
⋮----
.border-theme-border {
⋮----
.border-theme-accent {
⋮----
.border-theme-destructive {
⋮----
.border-theme-error {
⋮----
.border-theme-on-primary {
⋮----
.border-theme-accent-secondary {
⋮----
.border-theme-border-medium {
⋮----
.border-theme-border-light {
⋮----
/* Theme-aware border radius utilities */
.rounded-theme-md {
⋮----
.rounded-theme-lg {
⋮----
.rounded-theme-full {
⋮----
.rounded-theme-sm {
⋮----
.rounded-theme-xl {
⋮----
.rounded-theme-2xl {
⋮----
/* Theme-aware shadows */
.shadow-theme-sm {
⋮----
.shadow-theme-md {
⋮----
.shadow-theme-lg {
⋮----
.shadow-theme-card {
⋮----
.shadow-theme-btn {
⋮----
.shadow-theme-input {
⋮----
.shadow-theme-glow {
⋮----
.shadow-theme-primary {
⋮----
.shadow-theme-secondary {
⋮----
.shadow-theme-tertiary {
⋮----
.shadow-theme-accent {
⋮----
.shadow-theme-btn-primary {
⋮----
.shadow-theme-btn-secondary {
⋮----
.shadow-theme-btn-tertiary {
⋮----
/* Enhanced dark mode shadows with glows */
.dark .shadow-theme-btn-primary, [data-theme=&quot;dark&quot;] .shadow-theme-btn-primary {
⋮----
.dark .shadow-theme-btn-accent, [data-theme=&quot;dark&quot;] .shadow-theme-btn-accent {
⋮----
.dark .shadow-theme-card, [data-theme=&quot;dark&quot;] .shadow-theme-card {
⋮----
.dark .shadow-theme-card:hover, [data-theme=&quot;dark&quot;] .shadow-theme-card:hover,
⋮----
/* Theme-aware transition utilities */
.transition-theme-fast {
⋮----
.transition-theme-normal {
⋮----
.transition-theme-bounce {
⋮----
.transition-theme-slow {
⋮----
/* Theme-aware enhanced cards */
.card-theme {
⋮----
.dark .card-theme, [data-theme=&quot;dark&quot;] .card-theme {
⋮----
/* Theme-aware glow utility classes */
.glow-theme-primary {
⋮----
.glow-theme-secondary {
⋮----
.glow-theme-tertiary {
⋮----
.glow-theme-accent {
⋮----
.glow-theme-blue {
⋮----
/* Light mode has no glows by default, they only appear in dark mode */
.light .glow-theme-primary,
⋮----
.card-theme:hover {
⋮----
.dark .card-theme:hover, [data-theme=&quot;dark&quot;] .card-theme:hover {
⋮----
/* Theme-aware buttons */
.btn-theme-primary {
⋮----
.dark .btn-theme-primary, [data-theme=&quot;dark&quot;] .btn-theme-primary {
⋮----
.btn-theme-primary:hover {
⋮----
.dark .btn-theme-primary:hover, [data-theme=&quot;dark&quot;] .btn-theme-primary:hover {
⋮----
.btn-theme-secondary {
⋮----
.dark .btn-theme-secondary, [data-theme=&quot;dark&quot;] .btn-theme-secondary {
⋮----
.btn-theme-secondary:hover {
⋮----
.dark .btn-theme-secondary:hover, [data-theme=&quot;dark&quot;] .btn-theme-secondary:hover {
⋮----
/* Enhanced Theme-Aware Pro Tip Component */
.pro-tip-theme {
⋮----
.dark .pro-tip-theme, [data-theme=&quot;dark&quot;] .pro-tip-theme {
⋮----
/* Theme-aware grid patterns */
.grid-theme-dot {
⋮----
.dark .grid-theme-dot, [data-theme=&quot;dark&quot;] .grid-theme-dot {
⋮----
.grid-theme-line {
⋮----
.dark .grid-theme-line, [data-theme=&quot;dark&quot;] .grid-theme-line {
⋮----
/* Theme-aware floating elements */
.float-theme-element-primary {
⋮----
.dark .float-theme-element-primary, [data-theme=&quot;dark&quot;] .float-theme-element-primary {
⋮----
.float-theme-element-secondary {
⋮----
.dark .float-theme-element-secondary, [data-theme=&quot;dark&quot;] .float-theme-element-secondary {
⋮----
/* Eyeball component styling */
.eyeball-theme {
⋮----
.eyeball-theme-iris {
⋮----
.eyeball-theme-pupil {
⋮----
.eyeball-theme-highlight {
⋮----
/* Chart theme utilities */
.chart-theme-grid {
⋮----
.dark .chart-theme-grid, [data-theme=&quot;dark&quot;] .chart-theme-grid {
⋮----
.chart-theme-line-views {
⋮----
.chart-theme-line-followers {
⋮----
.chart-theme-line-engagement {
⋮----
.chart-theme-line-revenue {
⋮----
.chart-theme-area-views {
⋮----
.chart-theme-area-followers {
⋮----
.chart-theme-area-engagement {
⋮----
.chart-theme-area-revenue {
⋮----
.chart-theme-tooltip {
⋮----
.dark .chart-theme-tooltip, [data-theme=&quot;dark&quot;] .chart-theme-tooltip {
⋮----
/* Fade overlays */
⋮----
/* Text highlight gradients */
.vs-text-gradient-orange {
⋮----
.vs-text-gradient-teal {
⋮----
/* Floating elements with gradients */
.vs-float-orange {
⋮----
.vs-float-teal {
⋮----
/* Additional common gradients */
.vs-gradient-orange {
⋮----
.vs-gradient-teal {
⋮----
.vs-gradient-coral-red {
⋮----
.vs-gradient-primary-accent {
⋮----
/* Direction variations */
.vs-gradient-orange-diagonal {
⋮----
.vs-gradient-teal-diagonal {
⋮----
.vs-gradient-coral-diagonal {
⋮----
/* Card and module backgrounds */
.vs-card-gradient-light {
⋮----
.vs-card-gradient-dark {
⋮----
.vs-module-gradient-light {
⋮----
.vs-module-gradient-dark {
⋮----
/* Richer dark mode gradients */
.vs-gradient-coral-orange {
⋮----
.vs-gradient-navy-deep {
⋮----
.vs-gradient-navy-ultra-deep {
⋮----
.vs-gradient-navy-black {
⋮----
.vs-gradient-fade-orange {
⋮----
/* Theme-aware background utility classes */
⋮----
/* Theme-aware gradient utility classes */
⋮----
/* Theme-aware text utility classes */
⋮----
/* Theme-aware border utility classes */
⋮----
/* Custom animations */
⋮----
.animate-fadeIn {
⋮----
/* Responsive adjustments */
⋮----
h1 { font-size: 5rem; }
h2 { font-size: 4rem; }
h3 { font-size: 2.25rem; }
h4 { font-size: 1.75rem; }
⋮----
.container { padding: 0 1.5rem; }
⋮----
h1 { font-size: 3.5rem; }
h2 { font-size: 2.5rem; }
h3 { font-size: 2rem; }
h4 { font-size: 1.5rem; }
⋮----
.container { padding: 0 1rem; }
⋮----
h1 { font-size: 3rem; }
h2 { font-size: 2.25rem; }
h3 { font-size: 1.75rem; }
h4 { font-size: 1.25rem; }
⋮----
.btn {
⋮----
/* Theme-aware marquee vignette overlays */
.bg-theme-gradient-overlay-left {
⋮----
.bg-theme-gradient-overlay-right {
⋮----
/* Module glow overlay for dark mode */
.dark-glow-overlay {
⋮----
.dark-glow-overlay::before {
⋮----
inset: -4px; /* Extend beyond the element&apos;s border */
⋮----
mix-blend-mode: screen; /* More visible effect than overlay */
⋮----
.dark .dark-glow-overlay::before, [data-theme=&quot;dark&quot;] .dark-glow-overlay::before {
⋮----
.dark-glow-overlay:hover::before {
⋮----
.dark .dark-glow-overlay:hover::before, [data-theme=&quot;dark&quot;] .dark-glow-overlay:hover::before {</file><file path="assets/main/LogoSVG/Title Elements.svg">&lt;svg width=&quot;670&quot; height=&quot;890&quot; viewBox=&quot;0 0 670 890&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
&lt;g opacity=&quot;0.61&quot; filter=&quot;url(#filter0_f_130_2207)&quot;&gt;
&lt;path d=&quot;M68.1099 725.193C68.1841 725.459 68.46 725.614 68.726 725.54L73.0612 724.33C73.3272 724.256 73.4827 723.98 73.4084 723.714C73.3342 723.448 73.0584 723.293 72.7924 723.367L68.9389 724.442L67.8639 720.59C67.7896 720.324 67.5138 720.169 67.2478 720.243C66.9818 720.318 66.8263 720.593 66.9005 720.859L68.1099 725.193ZM459.207 33.0228C459.133 32.7569 458.857 32.6015 458.591 32.6757L454.256 33.8856C453.99 33.9598 453.835 34.2356 453.909 34.5015C453.983 34.7675 454.259 34.9229 454.525 34.8486L458.378 33.7732L459.453 37.6252C459.528 37.8912 459.803 38.0466 460.069 37.9723C460.335 37.8981 460.491 37.6223 460.417 37.3564L459.207 33.0228ZM458.29 32.9118L457.305 34.659L458.176 35.1499L459.161 33.4026L458.29 32.9118ZM453.364 41.6479L451.394 45.1424L452.265 45.6332L454.235 42.1388L453.364 41.6479ZM447.453 52.1313L445.483 55.6257L446.354 56.1166L448.324 52.6221L447.453 52.1313ZM441.542 62.6146L439.571 66.1091L440.443 66.5999L442.413 63.1055L441.542 62.6146ZM435.631 73.098L433.66 76.5924L434.532 77.0833L436.502 73.5888L435.631 73.098ZM429.72 83.5813L427.749 87.0758L428.62 87.5666L430.591 84.0722L429.72 83.5813ZM423.808 94.0647L421.838 97.5591L422.709 98.05L424.68 94.5555L423.808 94.0647ZM417.897 104.548L415.927 108.042L416.798 108.533L418.769 105.039L417.897 104.548ZM411.986 115.031L410.016 118.526L410.887 119.017L412.857 115.522L411.986 115.031ZM406.075 125.515L404.105 129.009L404.976 129.5L406.946 126.006L406.075 125.515ZM400.164 135.998L398.194 139.493L399.065 139.983L401.035 136.489L400.164 135.998ZM394.253 146.481L392.282 149.976L393.154 150.467L395.124 146.972L394.253 146.481ZM388.342 156.965L386.371 160.459L387.243 160.95L389.213 157.456L388.342 156.965ZM382.431 167.448L380.46 170.943L381.331 171.433L383.302 167.939L382.431 167.448ZM376.519 177.931L374.549 181.426L375.42 181.917L377.391 178.422L376.519 177.931ZM370.608 188.415L368.638 191.909L369.509 192.4L371.48 188.906L370.608 188.415ZM364.697 198.898L362.727 202.393L363.598 202.883L365.568 199.389L364.697 198.898ZM358.786 209.382L356.816 212.876L357.687 213.367L359.657 209.872L358.786 209.382ZM352.875 219.865L350.905 223.359L351.776 223.85L353.746 220.356L352.875 219.865ZM346.964 230.348L344.993 233.843L345.865 234.334L347.835 230.839L346.964 230.348ZM341.053 240.832L339.082 244.326L339.954 244.817L341.924 241.322L341.053 240.832ZM335.142 251.315L333.171 254.809L334.042 255.3L336.013 251.806L335.142 251.315ZM329.23 261.798L327.26 265.293L328.131 265.784L330.102 262.289L329.23 261.798ZM323.319 272.282L321.349 275.776L322.22 276.267L324.191 272.773L323.319 272.282ZM317.408 282.765L315.438 286.26L316.309 286.75L318.279 283.256L317.408 282.765ZM311.497 293.248L309.527 296.743L310.398 297.234L312.368 293.739L311.497 293.248ZM305.586 303.732L303.616 307.226L304.487 307.717L306.457 304.223L305.586 303.732ZM299.675 314.215L297.704 317.71L298.576 318.2L300.546 314.706L299.675 314.215ZM293.764 324.698L291.793 328.193L292.665 328.684L294.635 325.189L293.764 324.698ZM287.853 335.182L285.882 338.676L286.753 339.167L288.724 335.673L287.853 335.182ZM281.942 345.665L279.971 349.16L280.842 349.65L282.813 346.156L281.942 345.665ZM276.03 356.148L274.06 359.643L274.931 360.134L276.902 356.639L276.03 356.148ZM270.119 366.632L268.149 370.126L269.02 370.617L270.991 367.123L270.119 366.632ZM264.208 377.115L263.223 378.862L264.094 379.353L265.079 377.606L264.208 377.115ZM263.223 378.862L262.238 380.61L263.109 381.1L264.094 379.353L263.223 378.862ZM258.297 387.599L256.327 391.093L257.198 391.584L259.168 388.089L258.297 387.599ZM252.386 398.082L250.416 401.576L251.287 402.067L253.257 398.573L252.386 398.082ZM246.475 408.565L244.504 412.06L245.376 412.551L247.346 409.056L246.475 408.565ZM240.564 419.049L238.593 422.543L239.465 423.034L241.435 419.539L240.564 419.049ZM234.653 429.532L232.682 433.026L233.553 433.517L235.524 430.023L234.653 429.532ZM228.741 440.015L226.771 443.51L227.642 444.001L229.613 440.506L228.741 440.015ZM222.83 450.499L220.86 453.993L221.731 454.484L223.702 450.989L222.83 450.499ZM216.919 460.982L214.949 464.476L215.82 464.967L217.79 461.473L216.919 460.982ZM211.008 471.465L209.038 474.96L209.909 475.451L211.879 471.956L211.008 471.465ZM205.097 481.949L203.127 485.443L203.998 485.934L205.968 482.44L205.097 481.949ZM199.186 492.432L197.215 495.926L198.087 496.417L200.057 492.923L199.186 492.432ZM193.275 502.915L191.304 506.41L192.176 506.901L194.146 503.406L193.275 502.915ZM187.364 513.399L185.393 516.893L186.264 517.384L188.235 513.89L187.364 513.399ZM181.452 523.882L179.482 527.377L180.353 527.867L182.324 524.373L181.452 523.882ZM175.541 534.365L173.571 537.86L174.442 538.351L176.413 534.856L175.541 534.365ZM169.63 544.849L167.66 548.343L168.531 548.834L170.501 545.34L169.63 544.849ZM163.719 555.332L161.749 558.827L162.62 559.317L164.59 555.823L163.719 555.332ZM157.808 565.815L155.838 569.31L156.709 569.801L158.679 566.306L157.808 565.815ZM151.897 576.299L149.926 579.793L150.798 580.284L152.768 576.79L151.897 576.299ZM145.986 586.782L144.015 590.277L144.887 590.768L146.857 587.273L145.986 586.782ZM140.075 597.266L138.104 600.76L138.976 601.251L140.946 597.756L140.075 597.266ZM134.163 607.749L132.193 611.243L133.064 611.734L135.035 608.24L134.163 607.749ZM128.252 618.232L126.282 621.727L127.153 622.218L129.124 618.723L128.252 618.232ZM122.341 628.716L120.371 632.21L121.242 632.701L123.212 629.206L122.341 628.716ZM116.43 639.199L114.46 642.693L115.331 643.184L117.301 639.69L116.43 639.199ZM110.519 649.682L108.549 653.177L109.42 653.668L111.39 650.173L110.519 649.682ZM104.608 660.166L102.637 663.66L103.509 664.151L105.479 660.657L104.608 660.166ZM98.6968 670.649L96.7264 674.144L97.5976 674.634L99.568 671.14L98.6968 670.649ZM92.7856 681.132L90.8152 684.627L91.6865 685.118L93.6569 681.623L92.7856 681.132ZM86.8745 691.616L84.9041 695.11L85.7754 695.601L87.7458 692.107L86.8745 691.616ZM80.9634 702.099L78.993 705.594L79.8643 706.084L81.8346 702.59L80.9634 702.099ZM75.0523 712.582L73.0819 716.077L73.9531 716.568L75.9235 713.073L75.0523 712.582ZM69.1412 723.066L68.156 724.813L69.0272 725.304L70.0124 723.557L69.1412 723.066Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.61&quot; filter=&quot;url(#filter1_f_130_2207)&quot;&gt;
&lt;path d=&quot;M216.918 120.271C217.113 120.076 217.113 119.759 216.918 119.564L213.736 116.382C213.541 116.187 213.224 116.187 213.029 116.382C212.834 116.577 212.834 116.894 213.029 117.089L215.857 119.917L213.029 122.746C212.834 122.941 212.834 123.258 213.029 123.453C213.224 123.648 213.541 123.648 213.736 123.453L216.918 120.271ZM216.564 119.417H214.575V120.417H216.564V119.417ZM206.618 119.417H202.639V120.417H206.618V119.417ZM194.682 119.417H190.703V120.417H194.682V119.417ZM182.746 119.417H178.767V120.417H182.746V119.417ZM170.81 119.417H166.831V120.417H170.81V119.417ZM158.874 119.417H154.896V120.417H158.874V119.417ZM146.938 119.417H142.96V120.417H146.938V119.417ZM135.002 119.417H131.024V120.417H135.002V119.417ZM123.066 119.417H119.088V120.417H123.066V119.417ZM111.13 119.417H107.152V120.417H111.13V119.417ZM99.1945 119.417H95.2159V120.417H99.1945V119.417ZM87.2586 119.417H83.2799V120.417H87.2586V119.417ZM75.3227 119.417H71.344V120.417H75.3227V119.417ZM63.3867 119.417H59.4081V120.417H63.3867V119.417ZM51.4508 119.417H47.4722V120.417H51.4508V119.417ZM39.5149 119.417H35.5362V120.417H39.5149V119.417ZM27.5789 119.417H23.6003V120.417H27.5789V119.417ZM15.643 119.417H11.6644V120.417H15.643V119.417ZM3.70709 119.417H-0.271548V120.417H3.70709V119.417ZM-8.22884 119.417H-10.2181V120.417H-8.22884V119.417ZM-10.2181 119.417H-12.2075V120.417H-10.2181V119.417ZM-20.1648 119.417H-24.1434V120.417H-20.1648V119.417ZM-32.1007 119.417H-36.0793V120.417H-32.1007V119.417ZM-44.0366 119.417H-48.0152V120.417H-44.0366V119.417ZM-55.9725 119.417H-59.9512V120.417H-55.9725V119.417ZM-67.9085 119.417H-71.8871V120.417H-67.9085V119.417ZM-79.8444 119.417H-83.823V120.417H-79.8444V119.417ZM-91.7803 119.417H-95.759V120.417H-91.7803V119.417ZM-103.716 119.417H-107.695V120.417H-103.716V119.417ZM-115.652 119.417H-119.631V120.417H-115.652V119.417ZM-127.588 119.417H-131.567V120.417H-127.588V119.417ZM-139.524 119.417H-143.503V120.417H-139.524V119.417ZM-151.46 119.417H-155.439V120.417H-151.46V119.417ZM-163.396 119.417H-167.375V120.417H-163.396V119.417ZM-175.332 119.417H-179.31V120.417H-175.332V119.417ZM-187.268 119.417H-191.246V120.417H-187.268V119.417ZM-199.204 119.417H-203.182V120.417H-199.204V119.417ZM-211.14 119.417H-215.118V120.417H-211.14V119.417ZM-223.076 119.417H-227.054V120.417H-223.076V119.417ZM-235.011 119.417H-237.001V120.417H-235.011V119.417Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.61&quot; filter=&quot;url(#filter2_f_130_2207)&quot;&gt;
&lt;path d=&quot;M112.906 73.1757C112.711 72.9805 112.394 72.9805 112.199 73.1757L109.017 76.3577C108.821 76.553 108.821 76.8696 109.017 77.0648C109.212 77.2601 109.529 77.2601 109.724 77.0648L112.552 74.2364L115.381 77.0648C115.576 77.2601 115.893 77.2601 116.088 77.0648C116.283 76.8696 116.283 76.553 116.088 76.3577L112.906 73.1757ZM112.052 73.5293L112.052 75.4706L113.052 75.4706L113.052 73.5293L112.052 73.5293ZM112.052 83.2356L112.052 87.1181L113.052 87.1181L113.052 83.2356L112.052 83.2356ZM112.052 94.8831L112.052 98.7656L113.052 98.7656L113.052 94.8831L112.052 94.8831ZM112.052 106.531L112.052 108.472L113.052 108.472L113.052 106.531L112.052 106.531ZM112.052 108.472L112.052 110.413L113.052 110.413L113.052 108.472L112.052 108.472ZM112.052 118.178L112.052 122.061L113.052 122.061L113.052 118.178L112.052 118.178ZM112.052 129.826L112.052 133.708L113.052 133.708L113.052 129.826L112.052 129.826ZM112.052 141.473L112.052 143.415L113.052 143.415L113.052 141.473L112.052 141.473Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g filter=&quot;url(#filter3_f_130_2207)&quot;&gt;
&lt;path d=&quot;M418.496 814.876V806.636H416.192V805.932C417.045 805.89 417.658 805.73 418.032 805.452C418.416 805.164 418.656 804.631 418.752 803.852H419.536V814.876H418.496ZM425.57 814.204C426.551 814.204 427.293 813.783 427.794 812.94C428.295 812.098 428.546 810.914 428.546 809.388C428.546 807.895 428.285 806.716 427.762 805.852C427.25 804.988 426.519 804.556 425.57 804.556C424.61 804.556 423.869 804.983 423.346 805.836C422.834 806.679 422.578 807.863 422.578 809.388C422.578 810.882 422.834 812.06 423.346 812.924C423.869 813.778 424.61 814.204 425.57 814.204ZM425.554 815.1C424.274 815.1 423.277 814.588 422.562 813.564C421.858 812.54 421.506 811.148 421.506 809.388C421.506 807.618 421.869 806.226 422.594 805.212C423.33 804.188 424.322 803.676 425.57 803.676C426.818 803.676 427.805 804.183 428.53 805.196C429.255 806.21 429.618 807.607 429.618 809.388C429.618 811.159 429.261 812.556 428.546 813.58C427.842 814.594 426.845 815.1 425.554 815.1ZM437.19 814.252C436.454 814.818 435.547 815.1 434.47 815.1C433.392 815.1 432.475 814.812 431.718 814.236C430.96 813.66 430.582 812.85 430.582 811.804C430.582 811.079 430.774 810.476 431.158 809.996C431.552 809.516 432.08 809.159 432.742 808.924V808.876C432.23 808.674 431.83 808.37 431.542 807.964C431.254 807.548 431.11 807.058 431.11 806.492C431.11 805.671 431.424 804.999 432.054 804.476C432.694 803.943 433.488 803.676 434.438 803.676C435.419 803.676 436.219 803.943 436.838 804.476C437.456 805.01 437.766 805.682 437.766 806.492C437.766 807.047 437.616 807.532 437.318 807.948C437.03 808.354 436.63 808.658 436.118 808.86V808.908C436.747 809.111 437.264 809.474 437.67 809.996C438.086 810.508 438.294 811.111 438.294 811.804C438.294 812.86 437.926 813.676 437.19 814.252ZM434.47 814.22C435.323 814.22 436 813.996 436.502 813.548C437.003 813.1 437.254 812.519 437.254 811.804C437.254 811.068 436.998 810.476 436.486 810.028C435.984 809.58 435.296 809.356 434.422 809.356C433.558 809.356 432.88 809.58 432.39 810.028C431.899 810.476 431.654 811.068 431.654 811.804C431.654 812.53 431.899 813.116 432.39 813.564C432.891 814.002 433.584 814.22 434.47 814.22ZM434.422 808.508C435.126 808.508 435.686 808.322 436.102 807.948C436.528 807.575 436.742 807.106 436.742 806.54C436.742 805.954 436.534 805.474 436.118 805.1C435.712 804.727 435.152 804.54 434.438 804.54C433.723 804.54 433.158 804.727 432.742 805.1C432.336 805.474 432.134 805.954 432.134 806.54C432.134 807.116 432.336 807.591 432.742 807.964C433.147 808.327 433.707 808.508 434.422 808.508ZM443.336 814.204C444.317 814.204 445.058 813.783 445.56 812.94C446.061 812.098 446.312 810.914 446.312 809.388C446.312 807.895 446.05 806.716 445.528 805.852C445.016 804.988 444.285 804.556 443.336 804.556C442.376 804.556 441.634 804.983 441.112 805.836C440.6 806.679 440.344 807.863 440.344 809.388C440.344 810.882 440.6 812.06 441.112 812.924C441.634 813.778 442.376 814.204 443.336 814.204ZM443.32 815.1C442.04 815.1 441.042 814.588 440.328 813.564C439.624 812.54 439.272 811.148 439.272 809.388C439.272 807.618 439.634 806.226 440.36 805.212C441.096 804.188 442.088 803.676 443.336 803.676C444.584 803.676 445.57 804.183 446.296 805.196C447.021 806.21 447.384 807.607 447.384 809.388C447.384 811.159 447.026 812.556 446.312 813.58C445.608 814.594 444.61 815.1 443.32 815.1ZM448.824 817.532V806.604H449.816V808.028H449.848C450.477 806.962 451.41 806.428 452.648 806.428C453.661 806.428 454.482 806.812 455.112 807.58C455.752 808.348 456.072 809.404 456.072 810.748C456.072 812.039 455.757 813.084 455.128 813.884C454.509 814.684 453.661 815.084 452.584 815.084C451.4 815.084 450.488 814.615 449.848 813.676H449.816V817.532H448.824ZM452.536 814.252C453.346 814.252 453.97 813.927 454.408 813.276C454.845 812.615 455.064 811.778 455.064 810.764C455.064 809.708 454.84 808.86 454.392 808.22C453.954 807.58 453.33 807.26 452.52 807.26C451.634 807.26 450.946 807.591 450.456 808.252C449.976 808.914 449.736 809.756 449.736 810.78C449.736 811.836 449.97 812.679 450.44 813.308C450.92 813.938 451.618 814.252 452.536 814.252ZM456.12 814.876L459.224 810.508L456.456 806.604H457.608L459.768 809.788H459.8L461.96 806.604H463.08L460.392 810.428L463.56 814.876H462.392L459.816 811.148H459.784L457.24 814.876H456.12Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g filter=&quot;url(#filter4_f_130_2207)&quot;&gt;
&lt;path d=&quot;M595.246 709.788C593.838 707.623 593.134 705.207 593.134 702.54C593.134 700.097 593.838 697.863 595.246 695.836H595.982C594.68 697.905 594.03 700.14 594.03 702.54C594.03 705.228 594.68 707.644 595.982 709.788H595.246ZM599.061 707.9V699.484H596.821V698.924C597.728 698.871 598.341 698.716 598.661 698.46C598.981 698.204 599.189 697.676 599.285 696.876H599.877V707.9H599.061ZM605.708 708.108C604.77 708.108 603.97 707.809 603.308 707.212C602.359 706.369 601.884 704.748 601.884 702.348C601.884 700.695 602.231 699.345 602.924 698.3C603.618 697.244 604.594 696.716 605.852 696.716C606.706 696.716 607.388 696.967 607.9 697.468C608.412 697.959 608.711 698.609 608.796 699.42H607.964C607.911 698.833 607.698 698.359 607.324 697.996C606.951 697.623 606.466 697.436 605.868 697.436C604.812 697.436 604.018 697.927 603.484 698.908C602.951 699.879 602.695 701.201 602.716 702.876H602.748C603.399 701.575 604.391 700.924 605.724 700.924C606.727 700.924 607.543 701.249 608.172 701.9C608.802 702.54 609.116 703.383 609.116 704.428C609.116 705.495 608.802 706.375 608.172 707.068C607.554 707.761 606.732 708.108 605.708 708.108ZM605.676 707.404C606.455 707.404 607.079 707.127 607.548 706.572C608.028 706.017 608.268 705.308 608.268 704.444C608.268 703.591 608.034 702.908 607.564 702.396C607.106 701.884 606.487 701.628 605.708 701.628C604.94 701.628 604.295 701.9 603.772 702.444C603.26 702.988 603.004 703.676 603.004 704.508C603.004 705.383 603.25 706.087 603.74 706.62C604.231 707.143 604.876 707.404 605.676 707.404ZM610.677 695.836C612.085 698.001 612.789 700.417 612.789 703.084C612.789 705.527 612.085 707.761 610.677 709.788H609.941C611.243 707.719 611.893 705.484 611.893 703.084C611.893 700.396 611.243 697.98 609.941 695.836H610.677Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g filter=&quot;url(#filter5_f_130_2207)&quot;&gt;
&lt;path d=&quot;M490.345 815.419C488.884 813.158 488.153 810.742 488.153 808.171C488.153 805.782 488.884 803.547 490.345 801.467H491.209C489.929 803.569 489.289 805.803 489.289 808.171C489.289 810.806 489.929 813.222 491.209 815.419H490.345ZM495.628 813.755C494.668 813.755 493.884 813.494 493.276 812.971C492.668 812.438 492.338 811.729 492.284 810.843H493.34C493.394 811.462 493.618 811.953 494.012 812.315C494.418 812.678 494.946 812.859 495.596 812.859C496.407 812.859 497.036 812.619 497.484 812.139C498.22 811.382 498.599 809.969 498.62 807.899H498.588C497.938 809.041 496.94 809.611 495.596 809.611C494.594 809.611 493.762 809.275 493.1 808.603C492.439 807.921 492.108 807.067 492.108 806.043C492.098 804.998 492.434 804.118 493.116 803.403C493.799 802.689 494.658 802.331 495.692 802.331C496.642 802.331 497.458 802.619 498.14 803.195C498.684 803.643 499.068 804.267 499.292 805.067C499.516 805.857 499.628 806.87 499.628 808.107C499.628 810.283 499.148 811.846 498.188 812.795C497.527 813.435 496.674 813.755 495.628 813.755ZM495.676 808.747C496.466 808.747 497.111 808.491 497.612 807.979C498.114 807.467 498.364 806.806 498.364 805.995C498.364 805.163 498.114 804.491 497.612 803.979C497.122 803.457 496.487 803.195 495.708 803.195C494.94 803.195 494.316 803.462 493.836 803.995C493.356 804.518 493.116 805.19 493.116 806.011C493.116 806.822 493.351 807.483 493.82 807.995C494.3 808.497 494.919 808.747 495.676 808.747ZM500.54 815.419C501.82 813.254 502.46 810.945 502.46 808.491C502.46 805.921 501.82 803.579 500.54 801.467H501.404C502.876 803.643 503.612 805.985 503.612 808.491C503.612 810.955 502.876 813.265 501.404 815.419H500.54Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.41&quot; filter=&quot;url(#filter6_f_130_2207)&quot;&gt;
&lt;mask id=&quot;path-7-outside-1_130_2207&quot; maskUnits=&quot;userSpaceOnUse&quot; x=&quot;28.1025&quot; y=&quot;-173.992&quot; width=&quot;549&quot; height=&quot;967&quot; fill=&quot;black&quot;&gt;
&lt;rect fill=&quot;white&quot; x=&quot;28.1025&quot; y=&quot;-173.992&quot; width=&quot;549&quot; height=&quot;967&quot;/&gt;
&lt;path d=&quot;M28.1025 -153.992C28.1025 -165.037 37.0568 -173.992 48.1025 -173.992H555.801C566.847 -173.992 575.801 -165.037 575.801 -153.992V771.806C575.801 782.852 566.847 791.806 555.801 791.806H48.1025C37.0568 791.806 28.1025 782.852 28.1025 771.806V-153.992Z&quot;/&gt;
&lt;/mask&gt;
&lt;path fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M28.1025 771.806C28.1025 774.506 28.6956 777.075 29.7648 779.402L29.5527 779.49C28.6166 777.11 28.1025 774.518 28.1025 771.806ZM49.1025 792.806H55.5687V792.306V791.306V790.806H48.1025C45.5168 790.806 43.0458 790.34 40.7773 789.491L40.6383 789.826L40.2552 790.75L40.2182 790.839C42.6316 791.968 45.295 792.651 48.1025 792.782C48.4339 792.798 48.7673 792.806 49.1025 792.806ZM70.501 790.806V791.306V792.306V792.806H85.4333V792.306V791.306V790.806H70.501ZM100.366 790.806V791.306V792.306V792.806H115.298V792.306V791.306V790.806H100.366ZM130.23 790.806V791.306V792.306V792.806H145.163V792.306V791.306V790.806H130.23ZM160.095 790.806V791.306V792.306V792.806H175.027V792.306V791.306V790.806H160.095ZM189.96 790.806V791.306V792.306V792.806H204.892V792.306V791.306V790.806H189.96ZM219.824 790.806V791.306V792.306V792.806H234.756V792.306V791.306V790.806H219.824ZM249.689 790.806V791.306V792.306V792.806H264.621V792.306V791.306V790.806H249.689ZM279.553 790.806V791.306V792.306V792.806H294.486V792.306V791.306V790.806H279.553ZM309.418 790.806V791.306V792.306V792.806H324.35V792.306V791.306V790.806H309.418ZM339.283 790.806V791.306V792.306V792.806H354.215V792.306V791.306V790.806H339.283ZM369.147 790.806V791.306V792.306V792.806H384.08V792.306V791.306V790.806H369.147ZM399.012 790.806V791.306V792.306V792.806H413.944V792.306V791.306V790.806H399.012ZM428.877 790.806V791.306V792.306V792.806H443.809V792.306V791.306V790.806H428.877ZM458.741 790.806V791.306V792.306V792.806H473.673V792.306V791.306V790.806H458.741ZM488.606 790.806V791.306V792.306V792.806H503.538V792.306V791.306V790.806H488.606ZM518.47 790.806V791.306V792.306V792.806H533.403V792.306V791.306V790.806H518.47ZM548.335 790.806V791.306V792.306V792.806H555.801C558.647 792.806 561.363 792.239 563.84 791.212L563.649 790.75L563.266 789.826L563.074 789.365C560.835 790.293 558.379 790.806 555.801 790.806H548.335ZM574.746 779.653L573.822 779.27L573.36 779.079C574.288 776.84 574.801 774.384 574.801 771.806V764.34H575.301H576.301H576.801V771.806C576.801 774.651 576.235 777.367 575.207 779.845L574.746 779.653ZM576.801 749.408V734.475H576.301H575.301H574.801V749.408H575.301H576.301H576.801ZM574.801 719.543H575.301H576.301H576.801V704.611H576.301H575.301H574.801V719.543ZM574.801 689.679H575.301H576.301H576.801V674.746H576.301H575.301H574.801V689.679ZM574.801 659.814H575.301H576.301H576.801V644.882H576.301H575.301H574.801V659.814ZM574.801 629.95H575.301H576.301H576.801V615.018H576.301H575.301H574.801V629.95ZM574.801 600.085H575.301H576.301H576.801V585.153H576.301H575.301H574.801V600.085ZM574.801 570.221H575.301H576.301H576.801V555.289H576.301H575.301H574.801V570.221ZM574.801 540.356H575.301H576.301H576.801V525.424H576.301H575.301H574.801V540.356ZM574.801 510.492H575.301H576.301H576.801V495.56H576.301H575.301H574.801V510.492ZM574.801 480.628H575.301H576.301H576.801V465.695H576.301H575.301H574.801V480.628ZM574.801 450.763H575.301H576.301H576.801V435.831H576.301H575.301H574.801V450.763ZM574.801 420.899H575.301H576.301H576.801V405.966H576.301H575.301H574.801V420.899ZM574.801 391.034H575.301H576.301H576.801V376.102H576.301H575.301H574.801V391.034ZM574.801 361.17H575.301H576.301H576.801V346.238H576.301H575.301H574.801V361.17ZM574.801 331.305H575.301H576.301H576.801V316.373H576.301H575.301H574.801V331.305ZM574.801 301.441H575.301H576.301H576.801V286.509H576.301H575.301H574.801V301.441ZM574.801 271.576H575.301H576.301H576.801V256.644H576.301H575.301H574.801V271.576ZM574.801 241.712H575.301H576.301H576.801V226.78H576.301H575.301H574.801V241.712ZM574.801 211.848H575.301H576.301H576.801V196.916H576.301H575.301H574.801V211.848ZM574.801 181.983H575.301H576.301H576.801V167.051H576.301H575.301H574.801V181.983ZM574.801 152.119H575.301H576.301H576.801V137.187H576.301H575.301H574.801V152.119ZM574.801 122.255H575.301H576.301H576.801V107.322H576.301H575.301H574.801V122.255ZM574.801 92.3902H575.301H576.301H576.801V77.458H576.301H575.301H574.801V92.3902ZM574.801 62.5258H575.301H576.301H576.801V47.5936H576.301H575.301H574.801V62.5258ZM574.801 32.6615H575.301H576.301H576.801V17.7293H576.301H575.301H574.801V32.6615ZM574.801 2.79706H575.301H576.301H576.801V-12.1351H576.301H575.301H574.801V2.79706ZM574.801 -27.0673H575.301H576.301H576.801V-41.9995H576.301H575.301H574.801V-27.0673ZM574.801 -56.9317H575.301H576.301H576.801V-71.8639H576.301H575.301H574.801V-56.9317ZM574.801 -86.7961H575.301H576.301H576.801V-101.728H576.301H575.301H574.801V-86.7961ZM574.801 -116.66H575.301H576.301H576.801V-131.593H576.301H575.301H574.801V-116.66ZM574.801 -146.525H575.301H576.301H576.801V-152.992C576.801 -153.327 576.794 -153.66 576.778 -153.992C576.646 -156.799 575.963 -159.463 574.835 -161.876L574.746 -161.839L573.822 -161.456L573.487 -161.317C574.335 -159.048 574.801 -156.577 574.801 -153.992V-146.525ZM563.397 -172.329L563.485 -172.542C561.105 -173.478 558.513 -173.992 555.801 -173.992C558.502 -173.992 561.071 -173.399 563.397 -172.329Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot; mask=&quot;url(#path-7-outside-1_130_2207)&quot;/&gt;
&lt;/g&gt;
&lt;g filter=&quot;url(#filter7_f_130_2207)&quot;&gt;
&lt;path d=&quot;M593.39 679.649L593.39 671.409H591.086L591.086 670.705C591.939 670.662 592.553 670.502 592.926 670.225C593.31 669.937 593.55 669.404 593.646 668.625H594.43L594.43 679.649H593.39ZM599.888 679.873C598.928 679.873 598.144 679.612 597.536 679.089C596.928 678.556 596.598 677.846 596.544 676.961H597.6C597.654 677.58 597.878 678.07 598.272 678.433C598.678 678.796 599.206 678.977 599.856 678.977C600.667 678.977 601.296 678.737 601.744 678.257C602.48 677.5 602.859 676.086 602.88 674.017H602.848C602.198 675.158 601.2 675.729 599.856 675.729C598.854 675.729 598.022 675.393 597.36 674.721C596.699 674.038 596.368 673.185 596.368 672.161C596.358 671.116 596.694 670.236 597.376 669.521C598.059 668.806 598.918 668.449 599.952 668.449C600.902 668.449 601.718 668.737 602.4 669.313C602.944 669.761 603.328 670.385 603.552 671.185C603.776 671.974 603.888 672.988 603.888 674.225C603.888 676.401 603.408 677.964 602.448 678.913C601.787 679.553 600.934 679.873 599.888 679.873ZM599.936 674.865C600.726 674.865 601.371 674.609 601.872 674.097C602.374 673.585 602.624 672.924 602.624 672.113C602.624 671.281 602.374 670.609 601.872 670.097C601.382 669.574 600.747 669.313 599.968 669.313C599.2 669.313 598.576 669.58 598.096 670.113C597.616 670.636 597.376 671.308 597.376 672.129C597.376 672.94 597.611 673.601 598.08 674.113C598.56 674.614 599.179 674.865 599.936 674.865ZM604.914 679.649C604.925 679.254 604.973 678.881 605.058 678.529C605.143 678.177 605.239 677.878 605.346 677.633C605.453 677.377 605.623 677.116 605.858 676.849C606.093 676.572 606.279 676.364 606.418 676.225C606.557 676.076 606.791 675.884 607.122 675.649C607.463 675.414 607.698 675.26 607.826 675.185C607.965 675.1 608.221 674.945 608.594 674.721C609.522 674.166 610.119 673.756 610.386 673.489C610.866 673.009 611.106 672.406 611.106 671.681C611.106 670.956 610.893 670.385 610.466 669.969C610.039 669.553 609.463 669.345 608.738 669.345C607.959 669.345 607.351 669.58 606.914 670.049C606.466 670.54 606.237 671.26 606.226 672.209H605.17C605.17 671.025 605.495 670.108 606.146 669.457C606.807 668.796 607.693 668.465 608.802 668.465C609.815 668.465 610.626 668.769 611.234 669.377C611.853 669.974 612.162 670.732 612.162 671.649C612.162 672.14 612.093 672.572 611.954 672.945C611.826 673.318 611.591 673.665 611.25 673.985C610.919 674.294 610.637 674.529 610.402 674.689C610.178 674.849 609.81 675.078 609.298 675.377C609.245 675.409 609.207 675.436 609.186 675.457C609.165 675.468 609.133 675.484 609.09 675.505C609.047 675.526 609.01 675.548 608.978 675.569C608.562 675.814 608.237 676.017 608.002 676.177C607.767 676.337 607.49 676.55 607.17 676.817C606.861 677.084 606.615 677.372 606.434 677.681C606.263 677.99 606.151 678.326 606.098 678.689H612.018L612.018 679.649H604.914ZM617.386 678.977C618.368 678.977 619.109 678.556 619.61 677.713C620.112 676.87 620.362 675.686 620.362 674.161C620.362 672.668 620.101 671.489 619.578 670.625C619.066 669.761 618.336 669.329 617.386 669.329C616.426 669.329 615.685 669.756 615.162 670.609C614.65 671.452 614.394 672.636 614.394 674.161C614.394 675.654 614.65 676.833 615.162 677.697C615.685 678.55 616.426 678.977 617.386 678.977ZM617.37 679.873C616.09 679.873 615.093 679.361 614.378 678.337C613.674 677.313 613.322 675.921 613.322 674.161C613.322 672.39 613.685 670.998 614.41 669.985C615.146 668.961 616.138 668.449 617.386 668.449C618.634 668.449 619.621 668.956 620.346 669.969C621.072 670.982 621.434 672.38 621.434 674.161C621.434 675.932 621.077 677.329 620.362 678.353C619.658 679.366 618.661 679.873 617.37 679.873ZM622.874 682.305L622.874 671.377H623.866L623.866 672.801H623.898C624.528 671.734 625.461 671.201 626.698 671.201C627.712 671.201 628.533 671.585 629.162 672.353C629.802 673.121 630.122 674.177 630.122 675.521C630.122 676.812 629.808 677.857 629.178 678.657C628.56 679.457 627.712 679.857 626.634 679.857C625.45 679.857 624.538 679.388 623.898 678.449H623.866L623.866 682.305H622.874ZM626.586 679.025C627.397 679.025 628.021 678.7 628.458 678.049C628.896 677.388 629.114 676.55 629.114 675.537C629.114 674.481 628.89 673.633 628.442 672.993C628.005 672.353 627.381 672.033 626.57 672.033C625.685 672.033 624.997 672.364 624.506 673.025C624.026 673.686 623.786 674.529 623.786 675.553C623.786 676.609 624.021 677.452 624.49 678.081C624.97 678.71 625.669 679.025 626.586 679.025ZM630.17 679.649L633.274 675.281L630.506 671.377H631.658L633.818 674.561H633.85L636.01 671.377H637.13L634.442 675.201L637.61 679.649H636.442L633.866 675.921H633.834L631.29 679.649H630.17Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.36&quot; filter=&quot;url(#filter8_f_130_2207)&quot;&gt;
&lt;path d=&quot;M540.516 712.655V729.829L320.119 635.649V617.922L540.516 523.742V540.916L337.072 626.785V627.339L540.516 712.655Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.61&quot; filter=&quot;url(#filter9_f_130_2207)&quot;&gt;
&lt;path d=&quot;M157.082 625.887C156.887 626.082 156.887 626.399 157.082 626.594L160.264 629.776C160.459 629.971 160.776 629.971 160.971 629.776C161.167 629.581 161.167 629.264 160.971 629.069L158.143 626.24L160.971 623.412C161.167 623.217 161.167 622.9 160.971 622.705C160.776 622.509 160.459 622.509 160.264 622.705L157.082 625.887ZM550.214 625.74H548.168V626.74H550.214V625.74ZM539.985 625.74H535.894V626.74H539.985V625.74ZM527.711 625.74H523.62V626.74H527.711V625.74ZM515.437 625.74H511.345V626.74H515.437V625.74ZM503.162 625.74H499.071V626.74H503.162V625.74ZM490.888 625.74H486.797V626.74H490.888V625.74ZM478.614 625.74H474.522V626.74H478.614V625.74ZM466.339 625.74H462.248V626.74H466.339V625.74ZM454.065 625.74H449.974V626.74H454.065V625.74ZM441.791 625.74H437.699V626.74H441.791V625.74ZM429.516 625.74H425.425V626.74H429.516V625.74ZM417.242 625.74H413.151V626.74H417.242V625.74ZM404.968 625.74H400.876V626.74H404.968V625.74ZM392.693 625.74H388.602V626.74H392.693V625.74ZM380.419 625.74H376.328V626.74H380.419V625.74ZM368.145 625.74H364.053V626.74H368.145V625.74ZM355.871 625.74H353.825V626.74H355.871V625.74ZM353.825 625.74H351.779V626.74H353.825V625.74ZM343.596 625.74H339.505V626.74H343.596V625.74ZM331.322 625.74H327.23V626.74H331.322V625.74ZM319.048 625.74H314.956V626.74H319.048V625.74ZM306.773 625.74H302.682V626.74H306.773V625.74ZM294.499 625.74H290.408V626.74H294.499V625.74ZM282.225 625.74H278.133V626.74H282.225V625.74ZM269.95 625.74H265.859V626.74H269.95V625.74ZM257.676 625.74H253.585V626.74H257.676V625.74ZM245.402 625.74H241.31V626.74H245.402V625.74ZM233.127 625.74H229.036V626.74H233.127V625.74ZM220.853 625.74H216.762V626.74H220.853V625.74ZM208.579 625.74H204.487V626.74H208.579V625.74ZM196.304 625.74H192.213V626.74H196.304V625.74ZM184.03 625.74H179.939V626.74H184.03V625.74ZM171.756 625.74H167.664V626.74H171.756V625.74ZM159.481 625.74H157.436V626.74H159.481V625.74Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.61&quot; filter=&quot;url(#filter10_f_130_2207)&quot;&gt;
&lt;path d=&quot;M121.401 143.415L154.636 231.936L138.756 231.936L113.852 159.161L113.504 159.161L88.5132 231.936L72.807 231.936L105.955 143.415L121.401 143.415Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;path d=&quot;M121.401 143.415L154.636 231.936L138.756 231.936L113.852 159.161L113.504 159.161L88.5132 231.936L72.807 231.936L105.955 143.415L121.401 143.415Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;path d=&quot;M153.28 574.277L161.155 572.075L158.96 564.223L151.084 566.426L153.28 574.277ZM392.914 150.134L382.96 156.016L393.03 161.665L392.914 150.134ZM156.992 569.739L275.389 360.181L273.645 359.203L155.248 568.761L156.992 569.739ZM275.389 360.181L389.359 158.459L387.615 157.481L273.645 359.203L275.389 360.181Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;g opacity=&quot;0.67&quot;&gt;
&lt;path d=&quot;M381.518 541.306C307.247 541.306 251.322 505.281 296.463 476.261L246.845 465.156H263.259L313.091 476.261C267.949 496.833 317.266 526.945 381.305 526.945C419.462 526.945 445.469 508.15 445.469 480.907V480.696C445.469 457.254 431.613 445.217 396.013 436.98L365.104 429.8C322.896 420.086 303.498 402.98 303.498 374.259V374.047C303.498 339.202 335.047 314.493 378.96 314.493C424.365 314.493 453.995 340.469 458.472 379.538L458.685 381.439H442.697L442.484 379.961C438.221 349.128 414.346 328.854 378.96 328.854C344.426 328.854 320.125 347.649 320.125 373.836V374.047C320.125 394.955 334.407 407.203 370.007 415.44L400.916 422.62C444.403 432.757 462.309 449.44 462.309 479.851V480.062C462.309 516.175 428.628 541.306 381.518 541.306Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;path d=&quot;M381.518 541.306C307.247 541.306 251.322 505.281 296.463 476.261L246.845 465.156H263.259L313.091 476.261C267.949 496.833 317.266 526.945 381.305 526.945C419.462 526.945 445.469 508.15 445.469 480.907V480.696C445.469 457.254 431.613 445.217 396.013 436.98L365.104 429.8C322.896 420.086 303.498 402.98 303.498 374.259V374.047C303.498 339.202 335.047 314.493 378.96 314.493C424.365 314.493 453.995 340.469 458.472 379.538L458.685 381.439H442.697L442.484 379.961C438.221 349.128 414.346 328.854 378.96 328.854C344.426 328.854 320.125 347.649 320.125 373.836V374.047C320.125 394.955 334.407 407.203 370.007 415.44L400.916 422.62C444.403 432.757 462.309 449.44 462.309 479.851V480.062C462.309 516.175 428.628 541.306 381.518 541.306Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;path d=&quot;M174.184 413.911L148.29 243.681L169.631 248.121L189.125 394.987L189.582 395.082L278.461 232.313L299.497 236.689L195.677 418.382L174.184 413.911Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;path d=&quot;M174.184 413.911L148.29 243.681L169.631 248.121L189.125 394.987L189.582 395.082L278.461 232.313L299.497 236.689L195.677 418.382L174.184 413.911Z&quot; fill=&quot;#2B6F7A&quot; style=&quot;fill:#2B6F7A;fill:color(display-p3 0.1686 0.4353 0.4784);fill-opacity:1;&quot;/&gt;
&lt;/g&gt;
&lt;path d=&quot;M285.875 437.104C285.875 428.366 293.235 421.327 302.371 421.327C311.507 421.327 318.867 428.366 318.867 437.104C318.867 450.833 307.87 464.998 302.371 476.113C296.873 466.483 285.875 450.833 285.875 437.104Z&quot; fill=&quot;#DE6B59&quot; style=&quot;fill:#DE6B59;fill:color(display-p3 0.8706 0.4196 0.3490);fill-opacity:1;&quot;/&gt;
&lt;path d=&quot;M294.124 437.763C294.124 433.211 297.803 429.545 302.371 429.545C306.939 429.545 310.619 433.211 310.619 437.763C310.619 442.314 306.939 445.981 302.371 445.981C297.803 445.981 294.124 442.314 294.124 437.763Z&quot; fill=&quot;#FDEBDD&quot; style=&quot;fill:#FDEBDD;fill:color(display-p3 0.9922 0.9216 0.8667);fill-opacity:1;&quot;/&gt;
&lt;path d=&quot;M294.124 437.763C294.124 433.211 297.803 429.545 302.371 429.545C306.939 429.545 310.619 433.211 310.619 437.763C310.619 442.314 306.939 445.981 302.371 445.981C297.803 445.981 294.124 442.314 294.124 437.763Z&quot; fill=&quot;#FDEBDD&quot; style=&quot;fill:#FDEBDD;fill:color(display-p3 0.9922 0.9216 0.8667);fill-opacity:1;&quot;/&gt;
&lt;defs&gt;
&lt;filter id=&quot;filter0_f_130_2207&quot; x=&quot;64.8818&quot; y=&quot;30.6572&quot; width=&quot;397.553&quot; height=&quot;696.901&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;1&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter1_f_130_2207&quot; x=&quot;-239.001&quot; y=&quot;114.235&quot; width=&quot;458.065&quot; height=&quot;11.3643&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;1&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter2_f_130_2207&quot; x=&quot;106.87&quot; y=&quot;71.0293&quot; width=&quot;11.3643&quot; height=&quot;74.3853&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;1&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter3_f_130_2207&quot; x=&quot;414.291&quot; y=&quot;801.776&quot; width=&quot;51.1682&quot; height=&quot;17.656&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;0.95&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter4_f_130_2207&quot; x=&quot;591.234&quot; y=&quot;693.936&quot; width=&quot;23.4553&quot; height=&quot;17.7521&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;0.95&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter5_f_130_2207&quot; x=&quot;486.253&quot; y=&quot;799.567&quot; width=&quot;19.2585&quot; height=&quot;17.7521&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;0.95&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter6_f_130_2207&quot; x=&quot;25.7025&quot; y=&quot;-176.392&quot; width=&quot;553.499&quot; height=&quot;971.597&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;1.2&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter7_f_130_2207&quot; x=&quot;589.186&quot; y=&quot;666.549&quot; width=&quot;50.3244&quot; height=&quot;17.656&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;0.95&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter8_f_130_2207&quot; x=&quot;311.719&quot; y=&quot;515.342&quot; width=&quot;237.197&quot; height=&quot;222.886&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;4.2&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter9_f_130_2207&quot; x=&quot;154.936&quot; y=&quot;620.558&quot; width=&quot;397.278&quot; height=&quot;11.3643&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;1&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;filter id=&quot;filter10_f_130_2207&quot; x=&quot;71.3071&quot; y=&quot;141.915&quot; width=&quot;84.8286&quot; height=&quot;91.5215&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;
&lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;/&gt;
&lt;feBlend mode=&quot;normal&quot; in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;/&gt;
&lt;feGaussianBlur stdDeviation=&quot;0.75&quot; result=&quot;effect1_foregroundBlur_130_2207&quot;/&gt;
&lt;/filter&gt;
&lt;/defs&gt;
&lt;/svg&gt;</file><file path="assets/main/badge.svg">&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools --&gt;
&lt;svg fill=&quot;#000000&quot; height=&quot;800px&quot; width=&quot;800px&quot; version=&quot;1.1&quot; id=&quot;Capa_1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; 
	 viewBox=&quot;0 0 370.04 370.04&quot; xml:space=&quot;preserve&quot;&gt;
&lt;g&gt;
	&lt;g id=&quot;Layer_5_21_&quot;&gt;
		&lt;g&gt;
			&lt;path d=&quot;M341.668,314.412c0,0-41.071-70.588-48.438-83.248c8.382-2.557,17.311-4.815,21.021-11.221
				c6.183-10.674-4.823-28.184-1.933-39.625c2.977-11.775,20.551-21.964,20.551-33.933c0-11.661-18.169-25.284-21.148-36.99
				c-2.91-11.439,8.063-28.968,1.86-39.629c-6.203-10.662-26.864-9.786-35.369-17.97c-8.751-8.422-8.724-29.028-19.279-34.672
				c-10.598-5.665-27.822,5.784-39.589,3.072C207.711,17.515,197.318,0,185.167,0c-12.331,0-31.944,19.868-35.02,20.583
				c-11.761,2.734-29.007-8.687-39.594-2.998c-10.545,5.663-10.48,26.271-19.215,34.707c-8.491,8.199-29.153,7.361-35.337,18.035
				c-6.183,10.672,4.823,28.178,1.934,39.625c-2.897,11.476-21.083,23.104-21.083,36.376c0,11.97,17.618,22.127,20.613,33.896
				c2.911,11.439-8.062,28.966-1.859,39.631c3.377,5.805,11.039,8.188,18.691,10.479c0.893,0.267,2.582,1.266,1.438,2.933
				c-5.235,9.036-47.37,81.755-47.37,81.755c-3.352,5.784-0.63,10.742,6.047,11.023l32.683,1.363
				c6.677,0.281,15.053,5.133,18.617,10.786l17.44,27.674c3.564,5.653,9.219,5.547,12.57-0.236c0,0,48.797-84.246,48.817-84.27
				c0.979-1.144,1.963-0.909,2.434-0.509c5.339,4.546,12.782,9.081,18.994,9.081c6.092,0,11.733-4.269,17.313-9.03
				c0.454-0.387,1.559-1.18,2.367,0.466c0.013,0.026,48.756,83.811,48.756,83.811c3.36,5.776,9.016,5.874,12.569,0.214
				l17.391-27.707c3.554-5.657,11.921-10.528,18.598-10.819l32.68-1.424C342.315,325.152,345.028,320.187,341.668,314.412z
				 M239.18,238.631c-36.136,21.023-79.511,18.77-112.641-2.127c-48.545-31.095-64.518-95.419-35.335-145.788
				c29.516-50.95,94.399-68.928,145.808-40.929c0.27,0.147,0.537,0.299,0.805,0.449c0.381,0.211,0.761,0.425,1.14,0.641
				c15.86,9.144,29.613,22.415,39.461,39.342C308.516,141.955,290.915,208.533,239.18,238.631z&quot;/&gt;
			&lt;path d=&quot;M230.916,66.103c-0.15-0.087-0.302-0.168-0.452-0.254C203.002,49.955,168,48.793,138.665,65.86
				c-43.532,25.326-58.345,81.345-33.019,124.876c7.728,13.284,18.318,23.888,30.536,31.498c1.039,0.658,2.09,1.305,3.164,1.927
				c43.579,25.247,99.568,10.333,124.814-33.244C289.405,147.338,274.495,91.35,230.916,66.103z M241.818,137.344l-15.259,14.873
				c-4.726,4.606-7.68,13.698-6.563,20.203l3.602,21.001c1.116,6.505-2.75,9.314-8.592,6.243l-18.861-9.916
				c-5.842-3.071-15.401-3.071-21.243,0l-18.86,9.916c-5.842,3.071-9.709,0.262-8.593-6.243l3.602-21.001
				c1.116-6.505-1.838-15.597-6.564-20.203l-15.258-14.873c-4.727-4.606-3.249-9.152,3.282-10.102l21.086-3.064
				c6.531-0.949,14.265-6.568,17.186-12.486l9.43-19.107c2.921-5.918,7.701-5.918,10.621,0l9.431,19.107
				c2.921,5.918,10.654,11.537,17.186,12.486l21.086,3.064C245.067,128.192,246.544,132.738,241.818,137.344z&quot;/&gt;
		&lt;/g&gt;
	&lt;/g&gt;
&lt;/g&gt;
&lt;/svg&gt;</file><file path="assets/main/Blue Ball.svg">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg id=&quot;uuid-8e5fa2c1-7c19-41a2-ba1a-735a798e61d5&quot; data-name=&quot;Layer 2&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;160.38&quot; height=&quot;160.38&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 0 160.38 160.38&quot;&gt;
  &lt;defs&gt;
    &lt;style&gt;
      .uuid-e1ba3481-e2d7-4923-a04f-8b8ea5bd915e {
        fill: url(#uuid-03cd2e3e-3025-4d1e-92f9-8061e2412233);
      }
    &lt;/style&gt;
    &lt;radialGradient id=&quot;uuid-03cd2e3e-3025-4d1e-92f9-8061e2412233&quot; cx=&quot;120.72&quot; cy=&quot;19.25&quot; fx=&quot;120.72&quot; fy=&quot;19.25&quot; r=&quot;153.56&quot; gradientUnits=&quot;userSpaceOnUse&quot;&gt;
      &lt;stop offset=&quot;.02&quot; stop-color=&quot;#6db9e7&quot;/&gt;
      &lt;stop offset=&quot;.14&quot; stop-color=&quot;#6ab2e2&quot;/&gt;
      &lt;stop offset=&quot;.3&quot; stop-color=&quot;#62a1d6&quot;/&gt;
      &lt;stop offset=&quot;.49&quot; stop-color=&quot;#5585c2&quot;/&gt;
      &lt;stop offset=&quot;.63&quot; stop-color=&quot;#4a6cb0&quot;/&gt;
      &lt;stop offset=&quot;.73&quot; stop-color=&quot;#3f659e&quot;/&gt;
      &lt;stop offset=&quot;.91&quot; stop-color=&quot;#245572&quot;/&gt;
      &lt;stop offset=&quot;.98&quot; stop-color=&quot;#194f61&quot;/&gt;
    &lt;/radialGradient&gt;
  &lt;/defs&gt;
  &lt;g id=&quot;uuid-0bfd2fd1-d801-4766-bada-f32419877edb&quot; data-name=&quot;Layer 1&quot;&gt;
    &lt;circle class=&quot;uuid-e1ba3481-e2d7-4923-a04f-8b8ea5bd915e&quot; cx=&quot;80.19&quot; cy=&quot;80.19&quot; r=&quot;80.19&quot;/&gt;
  &lt;/g&gt;
&lt;/svg&gt;</file><file path="assets/main/logo-white.svg">&lt;svg width=&quot;735&quot; height=&quot;289&quot; viewBox=&quot;0 0 735 289&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
&lt;g clip-path=&quot;url(#clip0_7_84)&quot;&gt;
&lt;path d=&quot;M304.17 288.01V89.99H244.97C244.77 89.99 244.56 89.99 244.34 90C233.7 90.37 225.15 99.12 225.05 109.76C225.05 109.82 225.05 109.88 225.05 109.93V268.4C225.05 268.73 225.07 269.1 225.1 269.51C226 279.71 234.54 287.53 244.77 287.97C245.2 287.99 245.61 288 245.99 288H304.17V288.01Z&quot; fill=&quot;#ffffff&quot;/&gt;
&lt;path d=&quot;M548.21 287.91C559.24 287.08 567.97 278 568.05 266.93C568.05 266.86 568.05 266.79 568.05 266.72V110.16C568.05 110.1 568.05 110.03 568.05 109.97C568 99.03 559.1 90.11 548.16 90C548.08 90 548 90 547.92 90H488.93V288.02H545.74C546.51 288.02 547.34 287.98 548.21 287.92V287.91Z&quot; fill=&quot;#ffffff&quot;/&gt;
&lt;path d=&quot;M293.07 90H355.07C361.15 90 369.75 94.92 374.29 101L505.76 277C510.3 283.08 509.05 288 502.98 288H440.98C434.9 288 426.3 283.08 421.76 277L290.28 101C285.74 94.93 286.99 90 293.06 90H293.07Z&quot; fill=&quot;#ffffff&quot;/&gt;
&lt;path d=&quot;M498.07 90H436.07C429.99 90 421.39 94.92 416.85 101L285.38 277C280.84 283.08 282.09 288 288.16 288H350.16C356.24 288 364.84 283.08 369.38 277L500.85 101C505.39 94.93 504.14 90 498.07 90Z&quot; fill=&quot;#ffffff&quot;/&gt;
&lt;path d=&quot;M529.07 0C550.05 0 567.07 17.01 567.07 38C567.07 58.99 550.06 76 529.07 76C508.08 76 491.07 58.99 491.07 38C491.07 17.01 508.08 0 529.07 0Z&quot; fill=&quot;#ffffff&quot;/&gt;
&lt;path d=&quot;M265.07 0C286.05 0 303.07 17.01 303.07 38C303.07 58.99 286.06 76 265.07 76C244.08 76 227.07 58.99 227.07 38C227.07 17.01 244.08 0 265.07 0Z&quot; fill=&quot;#ffffff&quot;/&gt;
&lt;path d=&quot;M695.07 0H635.07C613.53 0 596.07 17.46 596.07 39V99C596.07 120.54 613.53 138 635.07 138H695.07C716.61 138 734.07 120.54 734.07 99V39C734.07 17.46 716.61 0 695.07 0ZM655.44 39.34V79.84C655.44 85.3 654.35 90.04 652.17 94.05C649.99 98.06 646.88 101.17 642.84 103.38C638.8 105.59 634.01 106.7 628.48 106.7C623.78 106.7 619.72 105.85 616.29 104.16C612.86 102.47 609.98 100.1 607.63 97.06C607.63 97.06 601.08 89.99 607.08 85C613.21 79.9 618.52 86.58 618.52 86.58C619.76 88.31 621.23 89.61 622.93 90.47C624.62 91.34 626.54 91.77 628.69 91.77C630.69 91.77 632.46 91.36 633.98 90.53C635.5 89.7 636.71 88.46 637.61 86.8C638.51 85.14 638.96 83.1 638.96 80.68V39.35C638.96 39.35 638.8 31.01 647.08 31.01C655.36 31.01 655.45 39.35 655.45 39.35L655.44 39.34ZM714.35 98.38C709.82 102.86 703.15 105.56 694.35 106.48C688.3 107.12 683.02 106.7 678.52 105.23C674.02 103.76 669.81 101.21 665.88 97.59C665.88 97.59 659.8 92.35 664.7 85.77C668.38 80.82 675.3 85.96 675.3 85.96C677.92 88.4 680.73 90.2 683.74 91.38C686.75 92.56 690.14 92.95 693.93 92.55C697.3 92.2 699.86 91.28 701.62 89.81C703.38 88.34 704.14 86.5 703.91 84.3C703.71 82.38 702.94 80.86 701.61 79.75C700.28 78.64 698.53 77.75 696.37 77.07C694.21 76.39 691.89 75.79 689.4 75.25C686.91 74.71 684.39 74.02 681.83 73.18C679.27 72.34 676.9 71.23 674.7 69.86C672.5 68.49 670.66 66.64 669.16 64.29C667.66 61.94 666.72 58.95 666.34 55.31C665.86 50.77 666.54 46.77 668.36 43.31C670.19 39.85 672.97 37.07 676.71 34.97C680.45 32.87 684.8 31.56 689.75 31.04C694.91 30.5 699.68 30.9 704.06 32.24C708.44 33.59 712.17 35.63 715.24 38.36C715.24 38.36 719.54 41.97 716.05 48.18C713.34 53.01 705.73 50.11 705.73 50.11C703.29 48.07 700.89 46.62 698.55 45.76C696.2 44.9 693.65 44.61 690.9 44.9C688.08 45.2 685.9 45.97 684.36 47.2C682.82 48.44 682.16 50.06 682.37 52.05C682.56 53.84 683.33 55.23 684.69 56.24C686.05 57.24 687.78 58.05 689.9 58.66C692.01 59.27 694.34 59.86 696.86 60.43C699.39 61 701.93 61.69 704.48 62.5C707.03 63.31 709.4 64.47 711.57 65.98C713.74 67.49 715.6 69.45 717.14 71.86C718.68 74.27 719.65 77.4 720.06 81.25C720.79 88.2 718.89 93.91 714.35 98.38Z&quot; fill=&quot;#ffffff&quot;/&gt;
&lt;path d=&quot;M107.17 0.340088C47.98 0.340088 0 48.3201 0 107.51C0 108.67 0.02 109.82 0.06 110.97V213.96C0.06 213.96 0.06 213.97 0.06 213.98V224.45C0.06 224.45 0.06 224.45 0.07 224.44V250.33C0.07 250.53 0.06 250.72 0.06 250.92C0.06 251.12 0.07 251.32 0.08 251.52V252H0.09C0.66 271.89 16.95 287.84 36.98 287.84C57.01 287.84 73.47 271.89 74.04 252V213.98H104.66C105.49 214 106.33 214.01 107.16 214.01C166.35 214.01 214.33 166.7 214.33 107.51C214.33 48.3201 166.36 0.340088 107.17 0.340088ZM107.17 140.01C100.62 140.01 84.02 140.01 77.13 140.01H74.07V107.52C74.07 89.3101 88.96 74.5401 107.17 74.5401C125.38 74.5401 140.15 89.3101 140.15 107.52C140.15 125.73 125.38 140.02 107.17 140.02V140.01Z&quot; fill=&quot;#ffffff&quot;/&gt;
&lt;path opacity=&quot;0.15&quot; d=&quot;M36.05 214H73.99V252.01H73.82C73.25 271.9 56.96 287.85 36.93 287.85C16.9 287.85 0.6 271.9 0.03 252.01H0.02V251.53C0.02 251.33 0 251.13 0 250.93C0 250.73 0.01 250.54 0.01 250.34V247.66C1.15 229.87 17.94 214 36.04 214H36.05Z&quot; fill=&quot;#1D1D1B&quot;/&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M0.0599976 168.28V213.98C0.0599976 173.72 33.89 140.58 74.05 140.03V125.45C44.2 128.59 17.77 144.66 0.0599976 168.28Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M0.119995 248.37C8.84 241.97 19.42 238.2 30.84 238.2H74.06V213.98H37.03C17.47 213.98 1.48 229.15 0.119995 248.37Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M74.05 140.03V126.79C43.95 129.74 17.39 146.16 0.0599976 170.27V213.98C0.0599976 173.72 33.89 140.58 74.05 140.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M37.03 213.98C18 213.98 2.34001 228.35 0.26001 246.83C8.97001 240.03 19.73 236.01 31.4 236.01H74.05V213.99H37.02L37.03 213.98Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M74.05 140.03V128.12C43.68 130.87 16.95 147.69 0.0599976 172.34V213.97C0.0599976 173.71 33.89 140.57 74.05 140.02V140.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M37.03 213.98C18.53 213.98 3.22002 227.55 0.460022 245.28C9.12002 238.09 20.06 233.8 31.96 233.8H74.05V213.98H37.02H37.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M74.05 140.03V129.46C43.37 132 16.46 149.28 0.0599976 174.53V213.98C0.0599976 173.72 33.89 140.58 74.05 140.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M37.03 213.98C19.06 213.98 4.08998 226.79 0.72998 243.77C9.31998 236.18 20.41 231.6 32.53 231.6H74.06V213.98H37.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M74.05 140.03V130.81C43.01 133.11 15.89 150.93 0.0599976 176.84V213.98C0.0599976 173.72 33.89 140.58 74.05 140.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M37.03 213.98C19.6 213.98 5.00001 226.03 1.07001 242.24C9.54001 234.26 20.77 229.39 33.09 229.39H74.05V213.97H37.02L37.03 213.98Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M74.05 140.03V132.16C42.6 134.22 15.22 152.65 0.0599976 179.32V213.98C0.0599976 173.72 33.89 140.58 74.05 140.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M37.03 213.98C20.15 213.98 5.92998 225.28 1.47998 240.71C9.79998 232.34 21.14 227.19 33.66 227.19H74.06V213.98H37.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M74.05 140.03V133.52C42.12 135.31 14.43 154.48 0.0599976 182.01V213.98C0.0599976 173.72 33.89 140.58 74.05 140.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M37.03 213.98C20.72 213.98 6.88001 224.54 1.95001 239.19C10.08 230.44 21.53 224.99 34.21 224.99H74.05V213.98H37.02H37.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M74.05 140.03V134.89C41.53 136.39 13.47 156.46 0.0599976 185V213.98C0.0599976 173.72 33.89 140.58 74.05 140.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M37.03 213.98C21.28 213.98 7.83999 223.83 2.48999 237.7C10.4 228.56 21.92 222.79 34.78 222.79H74.06V213.98H37.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;g opacity=&quot;0.05&quot;&gt;
&lt;path opacity=&quot;0.5&quot; d=&quot;M74.05 140.03V136.29C40.78 137.48 12.24 158.68 0.0599976 188.47V213.98C0.0599976 173.72 33.89 140.58 74.05 140.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;path d=&quot;M37.03 213.98C21.85 213.98 8.80999 223.13 3.10999 236.21C10.74 226.68 22.34 220.59 35.35 220.59H74.06V213.98H37.03Z&quot; fill=&quot;black&quot;/&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;defs&gt;
&lt;clipPath id=&quot;clip0_7_84&quot;&gt;
&lt;rect width=&quot;734.07&quot; height=&quot;288.01&quot; fill=&quot;white&quot;/&gt;
&lt;/clipPath&gt;
&lt;/defs&gt;
&lt;/svg&gt;</file><file path="assets/react.svg">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; class=&quot;iconify iconify--logos&quot; width=&quot;35.93&quot; height=&quot;32&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; viewBox=&quot;0 0 256 228&quot;&gt;&lt;path fill=&quot;#00D8FF&quot; d=&quot;M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;</file><file path="components/Calendly/CalendlyDemo.tsx">import React from &apos;react&apos;;
import { CalendlyInlineWidget, CalendlyPopupWidget } from &apos;./index&apos;;
import { Button } from &apos;../ui/button&apos;;
⋮----
/**
 * Demonstration component that showcases both Calendly implementations
 * 
 * This component shows the popup widget button and how it can be used,
 * as well as a section showcasing the inline widget integration.
 */
⋮----
{/* Hero section with call to action */}
⋮----
{/* Floating elements using helper classes */}
⋮----
{/* Dark mode floating elements */}
⋮----
{/* Calendly Popup Widget Button */}
⋮----
{/* Regular button for contrast */}
⋮----
{/* Popup widget variations section */}
⋮----
{/* Inline widget variations */}
⋮----
{/* First variation - Default styling */}
⋮----
{/* Second variation - Elevated card */}
⋮----
primaryColor=&quot;FEA35D&quot; // Orange VS primary color (without #)
⋮----
{/* Third variation - Pattern background */}
⋮----
{/* Fourth variation - Borderless */}
⋮----
primaryColor=&quot;DE6B59&quot; // Coral accent color (without #)
⋮----
primaryColor=&quot;357380&quot; // VS teal color (without #)
⋮----
{/* Feature breakdown section */}
⋮----
{/* Popup widget features */}
⋮----
{/* Inline widget features */}
⋮----
{/* Implementation notes */}
⋮----
// Simple check icon component
⋮----
// Simple calendar icon component for reuse</file><file path="components/Calendly/CalendlyInlineWidget.tsx">import React, { useEffect, useRef } from &apos;react&apos;;
⋮----
interface CalendlyInlineWidgetProps {
  /**
   * URL to your Calendly scheduling page
   */
  url?: string;
  /**
   * Minimum width of the embedded widget (in px)
   */
  minWidth?: number | string;
  /**
   * Height of the embedded widget (in px)
   */
  height?: number | string;
  /**
   * Optional CSS classes to apply to container
   */
  className?: string;
  /**
   * Optional title for the scheduling section
   */
  title?: string;
  /**
   * Optional subtitle for the scheduling section
   */
  subtitle?: string;
  /**
   * Background style for the container
   */
  backgroundStyle?: &apos;gradient&apos; | &apos;solid&apos; | &apos;pattern&apos; | &apos;none&apos;;
  /**
   * Widget theme color (primary color) - applied to the Calendly widget when supported
   */
  primaryColor?: string;
  /**
   * Widget text color - applied to the Calendly widget when supported
   */
  textColor?: string;
  /**
   * Container width (CSS value, e.g., &apos;100%&apos;, &apos;800px&apos;)
   */
  containerWidth?: string;
  /**
   * Hide Calendly branding
   */
  hideEventTypeDetails?: boolean;
  /**
   * Hide GDPR banner
   */
  hideGdprBanner?: boolean;
  /**
   * Card style - controls shadow, border, etc.
   */
  cardStyle?: &apos;default&apos; | &apos;elevated&apos; | &apos;minimal&apos; | &apos;borderless&apos;;
}
⋮----
/**
   * URL to your Calendly scheduling page
   */
⋮----
/**
   * Minimum width of the embedded widget (in px)
   */
⋮----
/**
   * Height of the embedded widget (in px)
   */
⋮----
/**
   * Optional CSS classes to apply to container
   */
⋮----
/**
   * Optional title for the scheduling section
   */
⋮----
/**
   * Optional subtitle for the scheduling section
   */
⋮----
/**
   * Background style for the container
   */
⋮----
/**
   * Widget theme color (primary color) - applied to the Calendly widget when supported
   */
⋮----
/**
   * Widget text color - applied to the Calendly widget when supported
   */
⋮----
/**
   * Container width (CSS value, e.g., &apos;100%&apos;, &apos;800px&apos;)
   */
⋮----
/**
   * Hide Calendly branding
   */
⋮----
/**
   * Hide GDPR banner
   */
⋮----
/**
   * Card style - controls shadow, border, etc.
   */
⋮----
/**
 * Inline Calendly scheduling widget that integrates with VS design system
 * 
 * This component embeds a Calendly widget directly into a page using VS theme-aware styling
 */
⋮----
// Load Calendly script
⋮----
// Cleanup function
⋮----
// Build URL with parameters
const buildCalendlyUrl = () =&gt;
⋮----
// Get background style based on prop
const getBackgroundClass = () =&gt;
⋮----
// Define complex background patterns as variables
⋮----
{/* Floating elements */}
⋮----
{/* Floating elements - dark mode versions */}
⋮----
{/* Card with proper styling for BOTH modes */}
⋮----
{/* Header section */}
⋮----
{/* Calendly widget */}</file><file path="components/Calendly/CalendlyPopupWidget.tsx">import React, { useEffect } from &apos;react&apos;;
import { Button } from &apos;../ui/button&apos;;
⋮----
interface CalendlyPopupWidgetProps {
  /**
   * URL to your Calendly scheduling page
   */
  url?: string;
  /**
   * Text to display on the button
   */
  text?: string;
  /**
   * Button color - defaults to primary
   */
  color?: string;
  /**
   * Button text color
   */
  textColor?: string;
  /**
   * Shows Calendly branding
   */
  branding?: boolean;
  /**
   * Button variant from VS design system
   */
  variant?: &apos;default&apos; | &apos;secondary&apos; | &apos;vibrant&apos; | &apos;outline&apos; | &apos;subtle&apos; | &apos;ghost&apos; | &apos;destructive&apos;;
  /**
   * Button size from VS design system
   */
  size?: &apos;default&apos; | &apos;sm&apos; | &apos;lg&apos; | &apos;xl&apos; | &apos;xs&apos;;
  /**
   * Widget primary color for embedded form (hex code without #)
   */
  primaryColor?: string;
  /**
   * Popup widget position
   */
  position?: &apos;bottom-right&apos; | &apos;bottom-left&apos; | &apos;top-right&apos; | &apos;top-left&apos; | &apos;center&apos;;
  /**
   * Custom CSS classes for the button container
   */
  className?: string;
  /**
   * Hide GDPR banner
   */
  hideGdprBanner?: boolean;
  /**
   * Hide event type details
   */
  hideEventTypeDetails?: boolean;
  /**
   * Pass a React node to render as a button instead of the default
   */
  children?: React.ReactNode;
  /**
   * Show with icon
   */
  showIcon?: boolean;
  /**
   * Icon position (start or end of button)
   */
  iconPosition?: &apos;start&apos; | &apos;end&apos;;
}
⋮----
/**
   * URL to your Calendly scheduling page
   */
⋮----
/**
   * Text to display on the button
   */
⋮----
/**
   * Button color - defaults to primary
   */
⋮----
/**
   * Button text color
   */
⋮----
/**
   * Shows Calendly branding
   */
⋮----
/**
   * Button variant from VS design system
   */
⋮----
/**
   * Button size from VS design system
   */
⋮----
/**
   * Widget primary color for embedded form (hex code without #)
   */
⋮----
/**
   * Popup widget position
   */
⋮----
/**
   * Custom CSS classes for the button container
   */
⋮----
/**
   * Hide GDPR banner
   */
⋮----
/**
   * Hide event type details
   */
⋮----
/**
   * Pass a React node to render as a button instead of the default
   */
⋮----
/**
   * Show with icon
   */
⋮----
/**
   * Icon position (start or end of button)
   */
⋮----
/**
 * Popup widget that displays a floating button that opens a Calendly scheduling popup
 * 
 * Customize the appearance with `variant` and `size` props using VS design system styles
 */
const CalendlyPopupWidget: React.FC&lt;CalendlyPopupWidgetProps&gt; = ({
  url = &apos;https://calendly.com/jodenclashnewman/vertical-shortcut-discovery-call&apos;,
  text = &apos;Schedule a Call&apos;,
  color = &apos;#0069ff&apos;,
  textColor = &apos;#ffffff&apos;,
  branding = true,
  variant = &apos;vibrant&apos;,
  size = &apos;lg&apos;,
  primaryColor = &apos;&apos;,
  position = &apos;bottom-right&apos;,
  className = &apos;&apos;,
  hideGdprBanner = false,
  hideEventTypeDetails = false,
  children,
  showIcon = true,
  iconPosition = &apos;start&apos;
}) =&gt;
⋮----
// Load Calendly script
⋮----
// Create link for CSS
⋮----
// Initialize the widget when script is loaded
⋮----
// Only init the badge widget if we&apos;re not using a custom button
⋮----
// Cleanup function
⋮----
// Remove the widget
⋮----
// Optionally remove the script and link
⋮----
// Build URL with parameters
const buildCalendlyUrl = () =&gt;
⋮----
// This adds a button that can be placed anywhere in your layout
// It will open the same Calendly popup as the floating button
const openCalendly = () =&gt;
⋮----
// If children are provided, use them as the button content
⋮----
// Render a standard button with optional icon
⋮----
// Simple calendar icon component
const CalendarIcon = ({ className = &quot;&quot; }) =&gt; (
  &lt;svg 
    xmlns=&quot;http://www.w3.org/2000/svg&quot; 
    viewBox=&quot;0 0 24 24&quot; 
    fill=&quot;none&quot; 
    stroke=&quot;currentColor&quot; 
    strokeWidth=&quot;2&quot; 
    strokeLinecap=&quot;round&quot; 
    strokeLinejoin=&quot;round&quot; 
    className={className}
  &gt;
    &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;18&quot; rx=&quot;2&quot; ry=&quot;2&quot; /&gt;
    &lt;line x1=&quot;16&quot; y1=&quot;2&quot; x2=&quot;16&quot; y2=&quot;6&quot; /&gt;
    &lt;line x1=&quot;8&quot; y1=&quot;2&quot; x2=&quot;8&quot; y2=&quot;6&quot; /&gt;
    &lt;line x1=&quot;3&quot; y1=&quot;10&quot; x2=&quot;21&quot; y2=&quot;10&quot; /&gt;
  &lt;/svg&gt;
);
⋮----
// Add TypeScript definition for the Calendly object
⋮----
interface Window {
    Calendly?: {
      initBadgeWidget: (options: {
        url: string;
        text: string;
        color: string;
        textColor: string;
        branding: boolean;
        position?: &apos;bottom-right&apos; | &apos;bottom-left&apos; | &apos;top-right&apos; | &apos;top-left&apos; | &apos;center&apos;;
      }) =&gt; void;
      initPopupWidget: (options: {
        url: string;
        text?: string;
        color?: string;
        textColor?: string;
        branding?: boolean;
        primaryColor?: string;
      }) =&gt; void;
    };
  }</file><file path="components/Calendly/embed-inline.html">&lt;!DOCTYPE html&gt;&lt;!-- Last Published: Wed Mar 13 2024 03:00:15 GMT+0000 (Coordinated Universal Time) --&gt;
&lt;html data-wf-domain=&quot;www.calendly-embed.com&quot; data-wf-page=&quot;65f111e6f1154a9c3b133f86&quot;
    data-wf-site=&quot;64c9d0e31da485be6f38b92d&quot;&gt;

&lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot; /&gt;
    &lt;title&gt;Embed Options - Inline&lt;/title&gt;
    &lt;meta content=&quot;Embed Options - Inline&quot; property=&quot;og:title&quot; /&gt;
    &lt;meta content=&quot;Embed Options - Inline&quot; property=&quot;twitter:title&quot; /&gt;
    &lt;meta content=&quot;width=device-width, initial-scale=1&quot; name=&quot;viewport&quot; /&gt;
    &lt;link
        href=&quot;https://assets-global.website-files.com/64c9d0e31da485be6f38b92d/css/calendlyembed.webflow.db8926160.min.css&quot;
        rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;
    &lt;link href=&quot;https://fonts.googleapis.com&quot; rel=&quot;preconnect&quot; /&gt;
    &lt;link href=&quot;https://fonts.gstatic.com&quot; rel=&quot;preconnect&quot; crossorigin=&quot;anonymous&quot; /&gt;
    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    &lt;script
        type=&quot;text/javascript&quot;&gt;WebFont.load({ google: { families: [&quot;DM Sans:regular,500,700&quot;, &quot;Inter:300,regular,500,600,700,800&quot;] } });&lt;/script&gt;
    &lt;script
        type=&quot;text/javascript&quot;&gt;!function (o, c) { var n = c.documentElement, t = &quot; w-mod-&quot;; n.className += t + &quot;js&quot;, (&quot;ontouchstart&quot; in o || o.DocumentTouch &amp;&amp; c instanceof DocumentTouch) &amp;&amp; (n.className += t + &quot;touch&quot;) }(window, document);&lt;/script&gt;
    &lt;link
        href=&quot;https://cdn.prod.website-files.com/64c9d0e31da485be6f38b92d/64c9d0e41da485be6f38b99a_favicon-techflow-x-webflow-template.svg&quot;
        rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; /&gt;
    &lt;link
        href=&quot;https://cdn.prod.website-files.com/64c9d0e31da485be6f38b92d/64c9d0e41da485be6f38b99b_webclip-techflow-x-webflow-template.svg&quot;
        rel=&quot;apple-touch-icon&quot; /&gt;
    &lt;script
        type=&quot;text/javascript&quot;&gt;window.__WEBFLOW_CURRENCY_SETTINGS = { &quot;currencyCode&quot;: &quot;USD&quot;, &quot;symbol&quot;: &quot;$&quot;, &quot;decimal&quot;: &quot;.&quot;, &quot;fractionDigits&quot;: 2, &quot;group&quot;: &quot;,&quot;, &quot;template&quot;: &quot;{{wf {\&quot;path\&quot;:\&quot;symbol\&quot;,\&quot;type\&quot;:\&quot;PlainText\&quot;} }} {{wf {\&quot;path\&quot;:\&quot;amount\&quot;,\&quot;type\&quot;:\&quot;CommercePrice\&quot;} }} {{wf {\&quot;path\&quot;:\&quot;currencyCode\&quot;,\&quot;type\&quot;:\&quot;PlainText\&quot;} }}&quot;, &quot;hideDecimalForWholeNumbers&quot;: false };&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div class=&quot;page-wrapper&quot;&gt;&lt;a href=&quot;https://www.calendly-embed.com/&quot; class=&quot;link-block w-inline-block&quot;&gt;
            &lt;div class=&quot;text-block&quot;&gt;&amp;lt; Back to Demo Site&lt;/div&gt;
        &lt;/a&gt;
        &lt;div class=&quot;section small top-24px mb0&quot;&gt;
            &lt;div class=&quot;container-default _120pad mb0 w-container&quot;&gt;
                &lt;div data-w-id=&quot;6d370a8c-07b6-db13-b4f8-71f11b4abe5f&quot;
                    style=&quot;-webkit-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);opacity:0&quot;
                    class=&quot;inner-container _515px center&quot;&gt;
                    &lt;div class=&quot;text-center mg-bottom-64px&quot;&gt;
                        &lt;div class=&quot;subtitle mg-bottom-16px&quot;&gt;embed options&lt;/div&gt;
                        &lt;h2 class=&quot;display-2 mg-bottom-0&quot;&gt;Calendly Embed - Inline&lt;/h2&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;container-default w-container&quot;&gt;
            &lt;div class=&quot;section-divider-wrapper&quot;&gt;
                &lt;div class=&quot;divider _0px&quot;&gt;&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id=&quot;inline&quot; class=&quot;section top-0px&quot;&gt;
            &lt;div class=&quot;container-default w-container&quot;&gt;
                &lt;div data-w-id=&quot;e5be6668-4e3d-ae9d-976b-8160fbdf91b6&quot; class=&quot;cta-card cta-v1&quot;&gt;
                    &lt;div id=&quot;w-node-e5be6668-4e3d-ae9d-976b-8160fbdf91b9-fbdf91b6&quot; class=&quot;inner-container&quot;&gt;
                        &lt;h2 class=&quot;display-2 mg-bottom-0 center&quot;&gt;Want to learn more? Schedule time with our team now
                        &lt;/h2&gt;
                    &lt;/div&gt;
                    &lt;div id=&quot;w-node-e5be6668-4e3d-ae9d-976b-8160fbdf91bd-fbdf91b6&quot; class=&quot;inner-container&quot;&gt;
                        &lt;div class=&quot;html-embed w-embed w-script&quot;&gt;&lt;!-- Calendly inline widget begin --&gt;
                            &lt;div class=&quot;calendly-inline-widget&quot;
                                data-url=&quot;https://calendly.com/embed-demo-sales/discovery-call&quot;
                                style=&quot;min-width:320px;height:700px;&quot;&gt;&lt;/div&gt;
                            &lt;script type=&quot;text/javascript&quot; src=&quot;https://assets.calendly.com/assets/external/widget.js&quot;
                                async&gt;&lt;/script&gt;
                            &lt;!-- Calendly inline widget end --&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;script src=&quot;https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=64c9d0e31da485be6f38b92d&quot;
        type=&quot;text/javascript&quot; integrity=&quot;sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=&quot;
        crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;https://assets-global.website-files.com/64c9d0e31da485be6f38b92d/js/webflow.69049e5b2.js&quot;
        type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;</file><file path="components/Calendly/embed-popupwidget.html">&lt;!DOCTYPE html&gt;&lt;!-- Last Published: Wed Mar 13 2024 03:00:15 GMT+0000 (Coordinated Universal Time) --&gt;
&lt;html data-wf-domain=&quot;www.calendly-embed.com&quot; data-wf-page=&quot;65f11387bf19abd5817b9f27&quot;
    data-wf-site=&quot;64c9d0e31da485be6f38b92d&quot;&gt;

&lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot; /&gt;
    &lt;title&gt;Embed - Popup widget&lt;/title&gt;
    &lt;meta content=&quot;Embed - Popup widget&quot; property=&quot;og:title&quot; /&gt;
    &lt;meta content=&quot;Embed - Popup widget&quot; property=&quot;twitter:title&quot; /&gt;
    &lt;meta content=&quot;width=device-width, initial-scale=1&quot; name=&quot;viewport&quot; /&gt;
    &lt;link
        href=&quot;https://assets-global.website-files.com/64c9d0e31da485be6f38b92d/css/calendlyembed.webflow.db8926160.min.css&quot;
        rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;
    &lt;link href=&quot;https://fonts.googleapis.com&quot; rel=&quot;preconnect&quot; /&gt;
    &lt;link href=&quot;https://fonts.gstatic.com&quot; rel=&quot;preconnect&quot; crossorigin=&quot;anonymous&quot; /&gt;
    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    &lt;script
        type=&quot;text/javascript&quot;&gt;WebFont.load({ google: { families: [&quot;DM Sans:regular,500,700&quot;, &quot;Inter:300,regular,500,600,700,800&quot;] } });&lt;/script&gt;
    &lt;script
        type=&quot;text/javascript&quot;&gt;!function (o, c) { var n = c.documentElement, t = &quot; w-mod-&quot;; n.className += t + &quot;js&quot;, (&quot;ontouchstart&quot; in o || o.DocumentTouch &amp;&amp; c instanceof DocumentTouch) &amp;&amp; (n.className += t + &quot;touch&quot;) }(window, document);&lt;/script&gt;
    &lt;link
        href=&quot;https://cdn.prod.website-files.com/64c9d0e31da485be6f38b92d/64c9d0e41da485be6f38b99a_favicon-techflow-x-webflow-template.svg&quot;
        rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; /&gt;
    &lt;link
        href=&quot;https://cdn.prod.website-files.com/64c9d0e31da485be6f38b92d/64c9d0e41da485be6f38b99b_webclip-techflow-x-webflow-template.svg&quot;
        rel=&quot;apple-touch-icon&quot; /&gt;&lt;!-- Calendly badge widget begin --&gt;
    &lt;link href=&quot;https://assets.calendly.com/assets/external/widget.css&quot; rel=&quot;stylesheet&quot;&gt;
    &lt;script src=&quot;https://assets.calendly.com/assets/external/widget.js&quot; type=&quot;text/javascript&quot; async&gt;&lt;/script&gt;
    &lt;script
        type=&quot;text/javascript&quot;&gt;window.onload = function () { Calendly.initBadgeWidget({ url: &apos;https://calendly.com/embed-demo-education/meet-with-academic-advisor?hide_gdpr_banner=1&apos;, text: &apos;Book a tour&apos;, color: &apos;#0069ff&apos;, textColor: &apos;#ffffff&apos;, branding: true }); }&lt;/script&gt;
    &lt;!-- Calendly badge widget end --&gt;
    &lt;script
        type=&quot;text/javascript&quot;&gt;window.__WEBFLOW_CURRENCY_SETTINGS = { &quot;currencyCode&quot;: &quot;USD&quot;, &quot;symbol&quot;: &quot;$&quot;, &quot;decimal&quot;: &quot;.&quot;, &quot;fractionDigits&quot;: 2, &quot;group&quot;: &quot;,&quot;, &quot;template&quot;: &quot;{{wf {\&quot;path\&quot;:\&quot;symbol\&quot;,\&quot;type\&quot;:\&quot;PlainText\&quot;} }} {{wf {\&quot;path\&quot;:\&quot;amount\&quot;,\&quot;type\&quot;:\&quot;CommercePrice\&quot;} }} {{wf {\&quot;path\&quot;:\&quot;currencyCode\&quot;,\&quot;type\&quot;:\&quot;PlainText\&quot;} }}&quot;, &quot;hideDecimalForWholeNumbers&quot;: false };&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div class=&quot;page-wrapper&quot;&gt;&lt;a href=&quot;https://www.calendly-embed.com/&quot; class=&quot;link-block w-inline-block&quot;&gt;
            &lt;div class=&quot;text-block&quot;&gt;&amp;lt; Back to Demo Site&lt;/div&gt;
        &lt;/a&gt;
        &lt;div class=&quot;section small top-24px&quot;&gt;
            &lt;div class=&quot;container-default _120pad w-container&quot;&gt;
                &lt;div data-w-id=&quot;6d370a8c-07b6-db13-b4f8-71f11b4abe5f&quot;
                    style=&quot;-webkit-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);opacity:0&quot;
                    class=&quot;inner-container _515px center&quot;&gt;
                    &lt;div class=&quot;text-center mg-bottom-64px&quot;&gt;
                        &lt;div class=&quot;subtitle mg-bottom-16px&quot;&gt;embed options&lt;/div&gt;
                        &lt;h2 class=&quot;display-2 mg-bottom-0&quot;&gt;Calendly Embed - Popup Widget&lt;/h2&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;div-block-5 center&quot;&gt;&lt;img
                        src=&quot;https://cdn.prod.website-files.com/64c9d0e31da485be6f38b92d/64cb49306ee854edc5e9bb4b_popup-widget-f7ff49530981c7b3cc10.svg&quot;
                        loading=&quot;lazy&quot; alt=&quot;&quot; class=&quot;image-2&quot; /&gt;
                    &lt;div&gt;
                        &lt;h3 class=&quot;heading-h6-size&quot;&gt;Popup widget&lt;/h3&gt;
                        &lt;p&gt;Add a floating button that opens a popup (See bottom right)&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;container-default w-container&quot;&gt;
            &lt;div class=&quot;section-divider-wrapper&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;script src=&quot;https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=64c9d0e31da485be6f38b92d&quot;
        type=&quot;text/javascript&quot; integrity=&quot;sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=&quot;
        crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;https://assets-global.website-files.com/64c9d0e31da485be6f38b92d/js/webflow.69049e5b2.js&quot;
        type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;</file><file path="components/Calendly/index.ts">import CalendlyInlineWidget from &apos;./CalendlyInlineWidget&apos;;
import CalendlyPopupWidget from &apos;./CalendlyPopupWidget&apos;;</file><file path="components/Course Stats/Thumbnail-Splay.tsx">import React, { useEffect, useRef, useState } from &apos;react&apos;;
import gsap from &apos;gsap&apos;;
⋮----
// @ts-expect-error -- Vite&apos;s import.meta.glob typing issue
⋮----
interface ThumbnailSplayProps {
  className?: string;
  sizeMultiplier?: number; // Default will be 1
}
⋮----
sizeMultiplier?: number; // Default will be 1
⋮----
// Base dimensions that will be multiplied by sizeMultiplier
const baseWidth = 192; // 48 * 4 = 192px (w-48 in Tailwind)
const baseHeight = 128; // 32 * 4 = 128px (h-32 in Tailwind)
⋮----
// Load all thumbnail paths
⋮----
// Filter out any system files (like ._Boulder10.webp)
⋮----
// Initial random arrangement with VS-style starting positions
⋮----
// Fade in animation with VS-style bubbly effect
⋮----
const handleMouseEnter = (index: number) =&gt;
⋮----
// VS-style hover animation
⋮----
// Slightly push away other thumbnails with VS-style effect
⋮----
const handleMouseLeave = (_index: number) =&gt;
⋮----
// Reset all thumbnails to original state with VS-style animation</file><file path="components/form/application-form-zod-schema.ts">import { z } from &quot;zod&quot;;
⋮----
// Enum options for multiple choice questions
⋮----
// Define the Vertical Shortcut application form schema
⋮----
// Personal Information
⋮----
// Social Media Info
⋮----
// Content Creation Readiness
⋮----
// Business &amp; Industry Information
⋮----
// Content Experience &amp; Goals
⋮----
// Growth &amp; Revenue Goals
⋮----
// Team Structure
⋮----
// Additional Information
⋮----
// How did you hear about us
⋮----
// Application-specific questions
⋮----
// Terms acceptance
⋮----
// Privacy Policy
⋮----
// Type inference from the schema
export type VerticalShortcutApplication = z.infer&lt;typeof verticalShortcutApplicationSchema&gt;;
⋮----
// Example application data validation
export const validateApplication = (data: unknown) =&gt;
⋮----
// Form submission helper with error handling
export const submitApplicationForm = async (formData: VerticalShortcutApplication) =&gt;
⋮----
// Here you would normally send the data to your API
// const response = await fetch(&apos;https://api.verticalshortcut.com/applications&apos;, {
//   method: &apos;POST&apos;,
//   headers: {
//     &apos;Content-Type&apos;: &apos;application/json&apos;,
//   },
//   body: JSON.stringify(validationResult.data),
// });
⋮----
// if (!response.ok) {
//   throw new Error(&apos;Failed to submit application&apos;);
// }
⋮----
// const responseData = await response.json();
⋮----
// For now, we&apos;ll simulate a successful submission
⋮----
// applicationId: responseData.applicationId</file><file path="components/form/ApplicationFormWrapper.tsx">import React from &apos;react&apos;;
import VerticalShortcutApplicationForm from &apos;./form-shadcn-claude&apos;;
⋮----
const ApplicationFormWrapper = () =&gt;</file><file path="components/form/form-shadcn-claude.tsx">import React from &apos;react&apos;;
import { useForm } from &apos;react-hook-form&apos;;
import { zodResolver } from &apos;@hookform/resolvers/zod&apos;;
⋮----
import { ControllerRenderProps } from &apos;react-hook-form&apos;;
import { AlertCircle, CheckCircle } from &apos;lucide-react&apos;;
⋮----
// UI Components
import { Button } from &apos;../ui/button&apos;;
import { Input } from &apos;../ui/input&apos;;
import { Checkbox } from &apos;../ui/checkbox&apos;;
import { RadioGroup, RadioGroupItem } from &apos;../ui/radio-group&apos;;
import { 
  Form, FormControl, FormField, 
  FormItem, FormLabel, FormMessage 
} from &apos;../ui/form&apos;;
import {
  Card, CardContent, CardDescription, CardHeader, CardTitle
} from &apos;../ui/card&apos;;
import { Alert, AlertDescription, AlertTitle } from &apos;../ui/alert&apos;;
⋮----
// Form schema
⋮----
type ApplicationFormData = z.infer&lt;typeof applicationSchema&gt;;
⋮----
type ProgramBenefitProps = {
  number: string;
  title: string;
  description: string;
};
⋮----
// Program benefits component
const ProgramBenefit = ({ number, title, description }: ProgramBenefitProps) =&gt; (
  &lt;div className=&quot;flex gap-4 mb-5&quot;&gt;
    &lt;div className=&quot;bg-theme-primary text-theme-on-primary-bold rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0 transition-colors transition-theme-normal&quot;&gt;
      {number}
    &lt;/div&gt;
    &lt;div&gt;
      &lt;h4 className=&quot;font-bold text-theme-primary mb-1 transition-colors transition-theme-normal&quot;&gt;{title}&lt;/h4&gt;
      &lt;p className=&quot;text-sm text-theme-secondary transition-colors transition-theme-normal&quot;&gt;{description}&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
);
⋮----
const onSubmit = async (data: ApplicationFormData) =&gt;
⋮----
// Submit form data to your API here
⋮----
&lt;form onSubmit=
{/* Personal Information Section */}
⋮----
{/* Program benefits section */}
⋮----
{/* Qualification questions */}
⋮----
checked=
⋮----
if (checked)
field.onChange(current.concat(item.value));
⋮----
{/* Program details */}
⋮----
{/* Terms and submit */}</file><file path="components/form/VSApplicationFormModal.tsx">import React from &apos;react&apos;;
import { VSModal } from &apos;../ui/vs-modal&apos;;
import VerticalShortcutApplicationForm from &apos;./form-shadcn-claude&apos;;
⋮----
interface VSApplicationFormModalProps {
  isOpen: boolean;
  onClose: () =&gt; void;
}
⋮----
/**
 * Enhanced Application Form Modal
 * 
 * Uses the VS styling system with proper animations and escape functionality
 */</file><file path="components/funModal/InputDesign.test.tsx">import { describe, it, expect, vi } from &quot;vitest&quot;;
import { render, screen, fireEvent } from &quot;@testing-library/react&quot;;
import InputDesign from &quot;./InputDesign&quot;;</file><file path="components/funModal/InputDesign.tsx">interface InputDesignProps {
  onClick?: () =&gt; void;
  className?: string;
  ariaLabel?: string;
}
⋮----
/**
 * InputDesign component - A clear/close button typically used in input fields
 */</file><file path="components/funModal/InputWithClearButton.test.tsx">import { describe, it, expect, vi } from &quot;vitest&quot;;
import { render, screen, fireEvent } from &quot;@testing-library/react&quot;;
import InputWithClearButton from &quot;./InputWithClearButton&quot;;
⋮----
// Clear button should not be visible initially
⋮----
// Type something
⋮----
// Clear button should now be visible
⋮----
// Type something
⋮----
// Click clear button
⋮----
// Input should be empty
⋮----
// Clear button should be hidden again
⋮----
// Type something
⋮----
// onChange should be called with the new value
⋮----
// Click clear button
⋮----
// onChange should be called with empty string</file><file path="components/funModal/InputWithClearButton.tsx">import { useState } from &quot;react&quot;;
import InputDesign from &quot;./InputDesign&quot;;
⋮----
interface InputWithClearButtonProps {
  placeholder?: string;
  className?: string;
  onChange?: (value: string) =&gt; void;
}
⋮----
/**
 * InputWithClearButton - A text input with a clear button
 * This demonstrates how the InputDesign component can be used
 */
⋮----
const handleChange = (e: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt;
⋮----
const handleClear = () =&gt;</file><file path="components/hero/IsometricPattern.tsx">import React, { useEffect, useState, useMemo } from &apos;react&apos;;
⋮----
interface IsometricGridBackgroundProps {
  className?: string;
}
⋮----
// Generate a unique ID for this component instance
⋮----
// Get the theme-aware color from CSS variables
⋮----
const updateGridColor = () =&gt;
⋮----
// Use theme-text-primary with reduced opacity for subtle grid
⋮----
// Initial color update
⋮----
// Listen for theme changes
⋮----
{/* Path elements for isometric grid */}</file><file path="components/hero/SimpleHero.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import { useGSAP } from &apos;@gsap/react&apos;;
import gsap from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
⋮----
// Register ScrollTrigger plugin
⋮----
import AnimatedLogo from &apos;../logos/AnimatedLogo&apos;;
import IsometricGridBackground from &apos;./IsometricPattern&apos;;
import { AnimatedButton } from &apos;../marble-buttons/AnimatedButton&apos;;
import SafeVideoEmbed from &apos;../ui/video-embed&apos;;
⋮----
interface SimpleHeroProps {
  onCtaClick?: () =&gt; void;
  videoUrl?: string;
  videoRef?: React.RefObject&lt;HTMLDivElement&gt;;
}
⋮----
// Internal refs
⋮----
// Auto-start content fade-in after a shorter delay for better flow with logo animation
⋮----
}, 300); // Reduced from 600ms to 300ms for quicker start
⋮----
// Add GSAP animation for content elements
⋮----
// First, ensure all hero content is visible even before animation
⋮----
// Staggered content reveal animation with reduced stagger time
⋮----
stagger: 0.08, // Reduced from 0.15 to 0.08 for less staggering
⋮----
// Eyeball entrance animation with reduced delay and higher position
⋮----
y: 100, // Starting position lower
⋮----
y: -20, // Position higher to ensure visibility when scrolling
⋮----
// Add scroll trigger to keep eyeball visible when scrolling to next section
⋮----
y: -20 + (progress * -30), // Move up slightly as user scrolls down
⋮----
// Create scroll-linked animation for video (if present)
⋮----
// Initial setup for video position
⋮----
y: 200, // Start below the fold
⋮----
// Much simpler approach - use a class toggle
// Video popup functionality completely removed
⋮----
return () =&gt; ctx.revert(); // Proper cleanup
⋮----
// Add cursor influence on eyeball
⋮----
const handleMouseMove = (e: MouseEvent) =&gt;
⋮----
// Calculate mouse position relative to window center
⋮----
const mouseXPercent = (e.clientX / windowWidth - 0.5) * 2; // -1 to 1
const mouseYPercent = (e.clientY / windowHeight - 0.5) * 2; // -1 to 1
⋮----
// Apply subtle rotation based on mouse position
⋮----
rotation: mouseXPercent * 3, // Max 3 degree rotation based on X position
rotationY: mouseYPercent * 2, // Max 2 degree perspective tilt based on Y position
duration: 1.2, // Smooth, slower-than-cursor movement
⋮----
{/* Award Badge - positioned with consistent bottom-right placement using top/right */}
⋮----
{/* Subtle shadow background */}
⋮----
{/* Main badge container - cleaner design */}
⋮----
{/* Badge icon with subtle styling */}
⋮----
{/* Subtle glow effect */}
⋮----
{/* Circle background */}
⋮----
{/* Text with more professional styling */}
⋮----
{/* Enhanced shine effect on hover */}
⋮----
{/* Theme-aware floating elements for visual interest */}
⋮----
{/* Video container - REMOVED as it&apos;s now a static section below */}
{/* Grid Layout */}
⋮----
// Removed red grid lines
⋮----
{/* Color blocks positioned in grid */}
&lt;div style={{ gridColumn: &apos;5 / 6&apos;, gridRow: &apos;1 / 3&apos; }} className=&quot;w-full h-full bg-[var(--theme-accent-secondary)] z-10&quot; /&gt; {/* Teal block */}
&lt;div style={{ gridColumn: &apos;6 / 8&apos;, gridRow: &apos;1 / 4&apos; }} className=&quot;w-full h-full bg-[var(--theme-primary)] z-10&quot; /&gt; {/* Orange block */}
&lt;div style={{ gridColumn: &apos;8 / 10&apos;, gridRow: &apos;1 / 5&apos; }} className=&quot;w-full h-full bg-[var(--theme-accent-coral)] z-10&quot; /&gt; {/* Red block */}
⋮----
{/* Animated VS Logo */}
⋮----
{/* Logo wrapper with fixed dimensions at each breakpoint */}
⋮----
onAnimationComplete={() =&gt; {/* Keep for reference but no longer needed */}}
⋮----
{/* Eyeball SVG positioned in grid but maintaining size */}
⋮----
{/* VS Logo Header - Now hidden as we have the animated logo */}
⋮----
{/* HeroHeadline with attached subheading */}
⋮----
{/* Animated Buttons with responsive sizes - moved further down and made larger */}
⋮----
&lt;a href=&quot;https://calendly.com/clash-creation/15min&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; className=&quot;hidden sm:flex items-center text-theme-primary hover:text-theme-accent-tertiary transition-colors duration-300&quot;&gt;
⋮----
{/* Mobile &quot;Book in a call&quot; link removed */}</file><file path="components/logos/AnimatedLogo.css">/* AnimatedLogo.css */
:root {
⋮----
.dash-line,
⋮----
/* Dark mode colors */
:global(.dark) .dash-line,
⋮----
/* Accent elements */
.accent-drop {
⋮----
.accent-inner {
⋮----
:global(.dark) .accent-drop {
⋮----
:global(.dark) .accent-inner {
⋮----
/* Animation container */
svg.w-full {</file><file path="components/logos/AnimatedLogo.tsx">import React, { useRef } from &apos;react&apos;;
import { useGSAP } from &apos;@gsap/react&apos;;
import gsap from &apos;gsap&apos;;
⋮----
// Import premium plugins
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
import { DrawSVGPlugin } from &apos;gsap/DrawSVGPlugin&apos;;
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
import { MorphSVGPlugin } from &apos;gsap/MorphSVGPlugin&apos;;
⋮----
// Register plugins
⋮----
interface AnimatedLogoProps {
  className?: string;
  onAnimationComplete?: () =&gt; void;
}
⋮----
// Create a master timeline
⋮----
// Create individual animation timelines for more control and overlap
⋮----
// 1. Initial scale animation (starts immediately)
⋮----
clearProps: &quot;scale&quot; // Prevents scaling issues later
⋮----
// Ensure all paths start invisible but keep container visible
⋮----
// Set initial states for all elements that will animate
⋮----
// Set accent elements to 0 opacity but with proper scales/transforms
⋮----
// Set decorative elements and text to initially invisible
⋮----
// 2. Line animations (starts 0.2s after initialScale begins)
⋮----
// Dashed lines - make all the paths in dashed-path-group visible first
⋮----
// Then animate them drawing on
⋮----
// Diagonal line (starts while dashed lines are still animating)
⋮----
// 3. VS letter animations (starts while lines are still animating)
⋮----
// Pulse effect (follows immediately)
⋮----
// 4. Accent elements (fade in while letters are pulsing)
⋮----
// First animate the coral drop shape
⋮----
// Then the inner cream circle with a slight delay and bounce
⋮----
// Add a little wiggle to the drop at the end
⋮----
// Fade in decorative elements
⋮----
// Fade in text elements with slight stagger
⋮----
// Add all timelines to master timeline with increased overlaps for more fluid animation
⋮----
.add(lineTl, &quot;-=0.35&quot;) // Start lines sooner (before initial scale completes)
.add(lettersTl, &quot;-=0.6&quot;) // Start letters earlier (before lines complete)
.add(accentTl, &quot;-=0.7&quot;); // Start accents much earlier (while letters are still drawing)
⋮----
return () =&gt; ctx.revert(); // Proper cleanup
⋮----
{/* Outer dashed lines */}
⋮----
{/* The main diagonal line */}
⋮----
{/* VS letters in one group for unified animation */}
⋮----
{/* V path */}
⋮----
{/* S path */}
⋮----
{/* Big V path (duplicate with different styling/opacity) */}
⋮----
{/* Large V path from SVG file with opacity 0.67 */}
⋮----
{/* Accent elements */}
⋮----
{/* Accent drop shape (coral) */}
⋮----
{/* Inner circle (cream) */}
⋮----
{/* Text elements */}
⋮----
{/* Decorative shapes */}
⋮----
{/* Triangle overlay */}
⋮----
{/* Frame overlay */}</file><file path="components/logos/catalog.tsx">import { SVGProps } from &quot;react&quot;;
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/coreos.tsx">import { SVGProps } from &quot;react&quot;;
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/discord.tsx">import { SVGProps } from &quot;react&quot;;
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/easytax.tsx">import { SVGProps } from &quot;react&quot;;
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/figma.tsx">xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/github.tsx">const Github = (props: React.SVGProps&lt;SVGSVGElement&gt;) =&gt; (
  &lt;svg width={24} height={24} viewBox=&quot;0 0 438.549 438.549&quot; {...props}&gt;
    &lt;path
      fill=&quot;currentColor&quot;
      d=&quot;M409.132 114.573c-19.608-33.596-46.205-60.194-79.798-79.8-33.598-19.607-70.277-29.408-110.063-29.408-39.781 0-76.472 9.804-110.063 29.408-33.596 19.605-60.192 46.204-79.8 79.8C9.803 148.168 0 184.854 0 224.63c0 47.78 13.94 90.745 41.827 128.906 27.884 38.164 63.906 64.572 108.063 79.227 5.14.954 8.945.283 11.419-1.996 2.475-2.282 3.711-5.14 3.711-8.562 0-.571-.049-5.708-.144-15.417a2549.81 2549.81 0 01-.144-25.406l-6.567 1.136c-4.187.767-9.469 1.092-15.846 1-6.374-.089-12.991-.757-19.842-1.999-6.854-1.231-13.229-4.086-19.13-8.559-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-.951-2.568-2.098-3.711-3.429-1.142-1.331-1.997-2.663-2.568-3.997-.572-1.335-.098-2.43 1.427-3.289 1.525-.859 4.281-1.276 8.28-1.276l5.708.853c3.807.763 8.516 3.042 14.133 6.851 5.614 3.806 10.229 8.754 13.846 14.842 4.38 7.806 9.657 13.754 15.846 17.847 6.184 4.093 12.419 6.136 18.699 6.136 6.28 0 11.704-.476 16.274-1.423 4.565-.952 8.848-2.383 12.847-4.285 1.713-12.758 6.377-22.559 13.988-29.41-10.848-1.14-20.601-2.857-29.264-5.14-8.658-2.286-17.605-5.996-26.835-11.14-9.235-5.137-16.896-11.516-22.985-19.126-6.09-7.614-11.088-17.61-14.987-29.979-3.901-12.374-5.852-26.648-5.852-42.826 0-23.035 7.52-42.637 22.557-58.817-7.044-17.318-6.379-36.732 1.997-58.24 5.52-1.715 13.706-.428 24.554 3.853 10.85 4.283 18.794 7.952 23.84 10.994 5.046 3.041 9.089 5.618 12.135 7.708 17.705-4.947 35.976-7.421 54.818-7.421s37.117 2.474 54.823 7.421l10.849-6.849c7.419-4.57 16.18-8.758 26.262-12.565 10.088-3.805 17.802-4.853 23.134-3.138 8.562 21.509 9.325 40.922 2.279 58.24 15.036 16.18 22.559 35.787 22.559 58.817 0 16.178-1.958 30.497-5.853 42.966-3.9 12.471-8.941 22.457-15.125 29.979-6.191 7.521-13.901 13.85-23.131 18.986-9.232 5.14-18.182 8.85-26.84 11.136-8.662 2.286-18.415 4.004-29.263 5.146 9.894 8.562 14.842 22.077 14.842 40.539v60.237c0 3.422 1.19 6.279 3.572 8.562 2.379 2.279 6.136 2.95 11.276 1.995 44.163-14.653 80.185-41.062 108.068-79.226 27.88-38.161 41.825-81.126 41.825-128.906-.01-39.771-9.818-76.454-29.414-110.049z&quot;
    &gt;&lt;/path&gt;
  &lt;/svg&gt;
);</file><file path="components/logos/gpxoverlay.tsx">import { SVGProps } from &quot;react&quot;;
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/leapyear.tsx">import { SVGProps } from &quot;react&quot;;
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/peregrin.tsx">import { SVGProps } from &quot;react&quot;;
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/pictelai.tsx">import { SVGProps } from &quot;react&quot;;
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/react.tsx">xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/shadcn-ui.tsx">xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/tailwind.tsx">xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/typescript.tsx">xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/logos/x.tsx">xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/marble-buttons/AnimatedButton.test.tsx">import { describe, it, expect, vi } from &quot;vitest&quot;;
import { render, screen, fireEvent } from &quot;@testing-library/react&quot;;
import { AnimatedButton } from &quot;./AnimatedButton&quot;;
⋮----
// Mock the useRippleEffect hook</file><file path="components/marble-buttons/AnimatedButton.tsx">import React, { useRef, useEffect } from &quot;react&quot;;
⋮----
export interface AnimatedButtonProps {
  text: string;
  variant: &quot;start&quot; | &quot;pro&quot; | &quot;learn&quot; | &quot;docs&quot; | &quot;accent&quot;;
  saturation?: &quot;normal&quot; | &quot;high&quot; | &quot;low&quot; | &quot;subtle&quot;;
  className?: string;
  onClick?: () =&gt; void;
  size?: &quot;sm&quot; | &quot;md&quot; | &quot;lg&quot;;
  type?: &quot;button&quot; | &quot;submit&quot; | &quot;reset&quot;;
  disabled?: boolean;
}
⋮----
// Size variants
⋮----
// Define variant-specific styles using CSS variables
⋮----
// Animation parameters based on variant
⋮----
// Add floating animation effect to the pattern when button is idle
⋮----
// Set initial transform position
⋮----
// Create animation</file><file path="components/marble-buttons/AnimatedButtonsDemo.test.tsx">import { describe, it, expect } from &quot;vitest&quot;;
import { render } from &quot;@testing-library/react&quot;;
import AnimatedButtonsDemo from &quot;./AnimatedButtonsDemo&quot;;
⋮----
// Mock the ButtonCollection component</file><file path="components/marble-buttons/AnimatedButtonsDemo.tsx">import React from &quot;react&quot;;
import { ButtonCollection } from &quot;./ButtonCollection&quot;;
⋮----
const AnimatedButtonsDemo: React.FC = () =&gt;</file><file path="components/marble-buttons/ButtonCollection.test.tsx">import { describe, it, expect } from &quot;vitest&quot;;
import { render, screen } from &quot;@testing-library/react&quot;;
import { ButtonCollection } from &quot;./ButtonCollection&quot;;
⋮----
// Mock the AnimatedButton component</file><file path="components/marble-buttons/ButtonCollection.tsx">import React from &quot;react&quot;;
import { AnimatedButton } from &quot;./AnimatedButton&quot;;
⋮----
export interface ButtonCollectionProps {
  className?: string;
}
⋮----
export const ButtonCollection: React.FC&lt;ButtonCollectionProps&gt; = ({
  className = &quot;&quot;,
}) =&gt;
⋮----
{/* Normal saturation */}
⋮----
{/* High saturation */}
⋮----
{/* Low saturation */}
⋮----
{/* Subtle */}
⋮----
{/* Size Variations */}</file><file path="components/marble-buttons/tailwind.config.js">/** @type {import(&apos;tailwindcss&apos;).Config} */</file><file path="components/marble-buttons/useRippleEffect.test.tsx">import { describe, it, expect, vi, beforeEach, afterEach } from &quot;vitest&quot;;
import { renderHook } from &quot;@testing-library/react&quot;;
import { useRippleEffect } from &quot;./useRippleEffect&quot;;
⋮----
// Mock DOM elements and methods
⋮----
// Mock document.createElement
⋮----
// Mock setTimeout
⋮----
expect(rippleElement.style.left).toBe(&quot;40px&quot;); // 50 - 10
expect(rippleElement.style.top).toBe(&quot;50px&quot;); // 70 - 20
⋮----
// Test that setTimeout was called to remove the ripple
⋮----
// Test that setTimeout was called with the custom duration</file><file path="components/modals/index.ts">import { VSModal } from &apos;../ui/vs-modal&apos;;
import { VSApplicationModal } from &apos;./VSApplicationModal&apos;;
import { VSSubmoduleModal } from &apos;./VSSubmoduleModal&apos;;
import { VSQuizModal } from &apos;./VSQuizModal&apos;;</file><file path="components/modals/ModalsImplementation.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
⋮----
// Import all modals
import { VSModal } from &apos;../ui/vs-modal&apos;;
import { VSApplicationModal } from &apos;./VSApplicationModal&apos;;
import { VSSubmoduleModal } from &apos;./VSSubmoduleModal&apos;;
import { VSQuizModal } from &apos;./VSQuizModal&apos;;
import ModalTest from &apos;./ModalTest&apos;;
⋮----
// State for controlling modal visibility
⋮----
// Refs for animation
⋮----
// Sample data for submodule modal
⋮----
// Sample data for quiz modal
⋮----
// GSAP animations for cards and elements
⋮----
// Animate the cards on load
⋮----
// Floating elements animation
⋮----
// Handlers for application modal
const handleApplicationSubmit = (data: any) =&gt;
⋮----
// Here you would typically send the data to your backend
⋮----
// Handlers for quiz modal
const handleQuizComplete = (score: number, answers: Record&lt;string, string&gt;) =&gt;
⋮----
// Show a success message or navigate to next step
⋮----
{/* Theme-aware floating elements */}
⋮----
{/* Simple test panel for quick modal testing */}
⋮----
{/* Application Modal Card */}
⋮----
{/* Course Viewer Modal Card */}
⋮----
{/* Quiz Modal Card */}
⋮----
{/* Render all the actual modals */}
⋮----
{/* Application Modal */}
⋮----
{/* Submodule Modal */}
⋮----
{/* Quiz Modal */}</file><file path="components/modals/ModalTest.tsx">import React, { useState } from &apos;react&apos;;
import { VSModal } from &apos;../ui/vs-modal&apos;;
import { VSApplicationModal } from &apos;./VSApplicationModal&apos;;
import { VSSubmoduleModal } from &apos;./VSSubmoduleModal&apos;;
import { VSQuizModal } from &apos;./VSQuizModal&apos;;
⋮----
/**
 * ModalTest - A simple component to test each modal individually
 */
⋮----
// Sample submodules data
⋮----
// Sample quiz questions
⋮----
{/* Basic Modal */}
⋮----
{/* Application Modal */}
⋮----
{/* Submodule Modal */}
⋮----
{/* Quiz Modal */}</file><file path="components/modals/OrderDetailsModal.tsx">import React from &quot;react&quot;;
import {
  Button,
  Dialog,
  IconButton,
  Typography,
  DialogBody,
  DialogHeader,
  DialogFooter,
  Timeline,
  TimelineItem,
  TimelineConnector,
  TimelineHeader,
  TimelineIcon,
  TimelineBody,
} from &quot;@material-tailwind/react&quot;;
import {
  HomeIcon,
  BellIcon,
  CurrencyDollarIcon,
} from &quot;@heroicons/react/24/solid&quot;;
import { XMarkIcon } from &quot;@heroicons/react/24/outline&quot;;
⋮----
const handleOpen = ()</file><file path="components/modals/README.md"># VS Modal System

This directory contains a set of modal components that follow the VS styling guidelines for both light and dark modes.

## Available Components

1. `VSModal` - Base modal component
2. `VSApplicationModal` - Multi-step application form modal
3. `VSSubmoduleModal` - Course module viewer modal with video player
4. `VSQuizModal` - Interactive quiz modal with progress tracking

## Usage

### Basic Modal

```tsx
import { VSModal } from &apos;../components/modals&apos;;
import { useState } from &apos;react&apos;;

function MyComponent() {
  const [isOpen, setIsOpen] = useState(false);
  
  return (
    &lt;&gt;
      &lt;button onClick={() =&gt; setIsOpen(true)}&gt;
        Open Modal
      &lt;/button&gt;
      
      &lt;VSModal
        isOpen={isOpen}
        onClose={() =&gt; setIsOpen(false)}
        title=&quot;Modal Title&quot;
        description=&quot;Optional description text&quot;
        width=&quot;md&quot; // &apos;sm&apos;, &apos;md&apos;, &apos;lg&apos;, &apos;xl&apos;, or &apos;full&apos;
      &gt;
        &lt;div&gt;
          &lt;p&gt;Modal content goes here&lt;/p&gt;
          &lt;button onClick={() =&gt; setIsOpen(false)}&gt;Close&lt;/button&gt;
        &lt;/div&gt;
      &lt;/VSModal&gt;
    &lt;/&gt;
  );
}
```

### Application Form Modal

```tsx
import { VSApplicationModal } from &apos;../components/modals&apos;;
import { useState } from &apos;react&apos;;

function MyComponent() {
  const [isOpen, setIsOpen] = useState(false);
  
  const handleSubmit = (data) =&gt; {
    console.log(&apos;Form submitted:&apos;, data);
    setIsOpen(false);
    // Process the form data
  };
  
  return (
    &lt;&gt;
      &lt;button onClick={() =&gt; setIsOpen(true)}&gt;
        Apply Now
      &lt;/button&gt;
      
      &lt;VSApplicationModal
        isOpen={isOpen}
        onClose={() =&gt; setIsOpen(false)}
        onSubmit={handleSubmit}
      /&gt;
    &lt;/&gt;
  );
}
```

### Submodule Modal

```tsx
import { VSSubmoduleModal } from &apos;../components/modals&apos;;
import { useState } from &apos;react&apos;;

function MyComponent() {
  const [isOpen, setIsOpen] = useState(false);
  
  // Sample module data
  const moduleData = {
    id: &apos;module-1&apos;,
    title: &apos;Content Creation Fundamentals&apos;,
    submodules: [
      {
        id: &apos;sub-1&apos;,
        title: &apos;Introduction&apos;,
        duration: &apos;5:24&apos;,
        isCompleted: true,
        isLocked: false
      },
      // More submodules...
    ],
    thumbnailUrl: &apos;/path/to/thumbnail.jpg&apos;
  };
  
  return (
    &lt;&gt;
      &lt;button onClick={() =&gt; setIsOpen(true)}&gt;
        View Module
      &lt;/button&gt;
      
      &lt;VSSubmoduleModal
        isOpen={isOpen}
        onClose={() =&gt; setIsOpen(false)}
        moduleId={moduleData.id}
        moduleTitle={moduleData.title}
        submodules={moduleData.submodules}
        thumbnailUrl={moduleData.thumbnailUrl}
      /&gt;
    &lt;/&gt;
  );
}
```

### Quiz Modal

```tsx
import { VSQuizModal } from &apos;../components/modals&apos;;
import { useState } from &apos;react&apos;;

function MyComponent() {
  const [isOpen, setIsOpen] = useState(false);
  
  // Sample quiz questions
  const questions = [
    {
      id: &apos;q1&apos;,
      question: &apos;What is the most important factor for engagement?&apos;,
      options: [
        { value: &apos;a&apos;, label: &apos;Option A&apos; },
        { value: &apos;b&apos;, label: &apos;Option B&apos; },
        { value: &apos;c&apos;, label: &apos;Option C&apos; },
        { value: &apos;d&apos;, label: &apos;Option D&apos; },
      ],
      explanation: &apos;Optional explanation text&apos;
    },
    // More questions...
  ];
  
  const handleQuizComplete = (score, answers) =&gt; {
    console.log(&apos;Quiz completed with score:&apos;, score);
    console.log(&apos;User answers:&apos;, answers);
    // Process quiz results
  };
  
  return (
    &lt;&gt;
      &lt;button onClick={() =&gt; setIsOpen(true)}&gt;
        Take Quiz
      &lt;/button&gt;
      
      &lt;VSQuizModal
        isOpen={isOpen}
        onClose={() =&gt; setIsOpen(false)}
        onComplete={handleQuizComplete}
        questions={questions}
        title=&quot;Knowledge Check&quot; // Optional
      /&gt;
    &lt;/&gt;
  );
}
```

## Styling Features

All modals implement the following VS styling features:

- Properly styled for both light and dark modes
- Gradient backgrounds (no flat white or flat dark colors)
- Floating elements for visual interest
- VS &quot;bubbly&quot; animations
- Appropriate shadows (directional for light, glow for dark)
- Direct CSS variable references using the new Tailwind v4 pattern
- GSAP animations with proper cleanup

## Animation and Behavior

The modals use GSAP for animations with the following features:

- Fade-in/scale entrance animation
- Fade-out/scale exit animation
- Animated floating elements
- Proper cleanup to prevent memory leaks
- ESC key to close
- Click outside to close (configurable)

## Best Practices

1. Keep modals focused on a single task or piece of information
2. Use appropriate modal widths for the content:
   - `sm` for confirmations or alerts
   - `md` for forms or standard content
   - `lg` for more complex forms
   - `xl` for media content
   - `full` for detailed content viewers
3. Always provide clear actions/buttons
4. Ensure modals are keyboard accessible
5. Test in both light and dark modes</file><file path="components/modals/TimelineModal.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import { VSModal } from &apos;../ui/vs-modal&apos;;
import { PlayCircle, CheckCircle, Star, Clock, Award, ExternalLink } from &apos;lucide-react&apos;;
import courseUtils, { Module, Submodule } from &apos;../../lib/course-utils&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
⋮----
interface ModuleModalProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  moduleId: string;
}
⋮----
/**
 * ModuleModal - Modal component for displaying module content according to MODULE-HUD.md specs
 * 
 * Features:
 * - Module thumbnail at the top
 * - Module title overlaying the base of the thumbnail
 * - Brief description
 * - Three bullet points on what&apos;s inside
 * - List of the module&apos;s component submodules with small icons
 * - Visual indicators for &quot;must-watch&quot; or &quot;founder essential&quot; content
 */
⋮----
// Get module data
⋮----
// Reset selected submodule when modal opens with new module
⋮----
// Get computed theme variables for animation
const getThemeVariables = () =&gt;
⋮----
// GSAP animations
⋮----
// Initial fade-in animation for thumbnail
⋮----
// Animate points and submodules with stagger
⋮----
// Subtle hover animation for submodules with VS Bubbly effect
⋮----
// Floating elements animation
⋮----
// Handle submodule selection for tooltip/details
const handleSubmoduleClick = (index: number) =&gt;
⋮----
{/* Theme-aware floating elements for visual interest */}
⋮----
{/* Thumbnail section with title overlay */}
⋮----
{/* Title overlay at the base of thumbnail as per MODULE-HUD.md */}
⋮----
{/* Main content section */}
⋮----
{/* Left column: Description and bullet points */}
⋮----
{/* Brief description as per MODULE-HUD.md */}
⋮----
{/* Three bullet points on what&apos;s inside as per MODULE-HUD.md */}
⋮----
{/* Module metadata */}
⋮----
{/* Right column: Submodules list with indicators as per MODULE-HUD.md */}
⋮----
{/* List of submodules with indicators */}
⋮----
{/* Icon based on submodule type */}
⋮----
{/* Visual indicators for special content */}
⋮----
{/* Submodule details/tooltip as per MODULE-HUD.md options */}
⋮----
{/* Call to action button with enhanced hover effect */}</file><file path="components/modals/VSApplicationModal.tsx">import React, { useState } from &apos;react&apos;;
import { VSModal } from &apos;../ui/vs-modal&apos;;
⋮----
interface VSApplicationModalProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  onSubmit: (data: ApplicationFormData) =&gt; void;
}
⋮----
interface ApplicationFormData {
  fullName: string;
  email: string;
  experience: string;
  goals: string;
}
⋮----
/**
 * VSApplicationModal - Application form modal component
 * 
 * Features:
 * - Multi-step application process
 * - Form validation
 * - VS-styled form elements
 * - Progress indicator
 */
⋮----
// Update form data
const handleChange = (e: React.ChangeEvent&lt;HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement&gt;) =&gt;
⋮----
// Clear error when field is edited
⋮----
// Validate current step
const validateStep = () =&gt;
⋮----
// Validate step 1
⋮----
// Validate step 2
⋮----
// Validate step 3
⋮----
// Handle next step
const handleNext = () =&gt;
⋮----
// Submit the form on the last step
⋮----
// Handle previous step
const handlePrevious = () =&gt;
⋮----
// Handle form submission
const handleSubmit = () =&gt;
⋮----
{/* Theme-aware floating elements for visual interest */}
⋮----
{/* Progress indicator */}
⋮----
{/* Step 2: Experience */}
⋮----
{/* Step 3: Goals */}
⋮----
{/* Form actions */}</file><file path="components/modals/VSModalExamples.tsx">import React, { useState } from &apos;react&apos;;
import { VSModal, VSApplicationModal, VSSubmoduleModal, VSQuizModal } from &apos;./index&apos;;
⋮----
/**
 * VSModalExamples - Example component demonstrating all VS modal types
 * 
 * This component shows how to use all the VS modal components with sample data
 * and proper integration with the theme-aware VS styling system.
 */
⋮----
// State for modal visibility
⋮----
// Sample data for submodule modal
⋮----
// Sample data for quiz modal
⋮----
// Handlers for application modal
const handleApplicationSubmit = (data: any) =&gt;
⋮----
// Handlers for quiz modal
const handleQuizComplete = (score: number, answers: Record&lt;string, string&gt;) =&gt;
⋮----
{/* Basic Modal Example */}
⋮----
{/* Application Modal Example */}
⋮----
{/* Submodule Modal Example */}
⋮----
{/* Quiz Modal Example */}
⋮----
{/* Modal Components */}
⋮----
{/* Basic Modal */}
⋮----
{/* Application Modal */}
⋮----
{/* Submodule Modal */}
⋮----
{/* Quiz Modal */}</file><file path="components/modals/VSQuizModal.tsx">import React, { useState } from &apos;react&apos;;
import { VSModal } from &apos;../ui/vs-modal&apos;;
⋮----
interface VSQuizModalProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  onComplete: (score: number, answers: Record&lt;string, string&gt;) =&gt; void;
  questions: QuizQuestion[];
  title?: string;
}
⋮----
interface QuizQuestion {
  id: string;
  question: string;
  options: { value: string; label: string }[];
  explanation?: string;
}
⋮----
/**
 * VSQuizModal - Quiz modal component with progress tracking
 * 
 * Features:
 * - Multi-step quiz workflow
 * - Progress indicator
 * - VS-styled design elements
 * - Result calculation and display
 */
⋮----
// Handle answer selection
const handleSelect = (value: string) =&gt;
⋮----
// Handle next step
const handleNext = () =&gt;
⋮----
// Final step =&gt; calculate score
⋮----
// Handle previous step
const handlePrevious = () =&gt;
⋮----
// Calculate quiz score
const calculateScore = () =&gt;
⋮----
// This is a placeholder - in a real implementation,
// you would compare against correct answers
return Math.floor(Math.random() * 101); // Returns 0-100
⋮----
// Handle quiz completion
const handleComplete = () =&gt;
⋮----
// Reset the quiz
const handleReset = () =&gt;
⋮----
{/* Progress indicator */}
⋮----
{/* Explanation (if available) */}
⋮----
{/* Navigation buttons */}
⋮----
/* Results screen */</file><file path="components/modals/VSSubmoduleModal.tsx">import React, { useState } from &apos;react&apos;;
import { VSModal } from &apos;../ui/vs-modal&apos;;
import { Play, CheckCircle, Lock } from &apos;lucide-react&apos;;
import courseUtils, { Submodule as CourseSubmodule } from &apos;../../lib/course-utils&apos;;
⋮----
interface VSSubmoduleModalProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  moduleId: string;
  moduleTitle: string;
  submodules: Array&lt;{
    id: string;
    title: string;
    duration: string;
    subtitle?: string;
    thumbnailUrl: string;
    isCompleted?: boolean;
    isLocked?: boolean;
    instructor?: string;
    week?: number;
    difficulty: string;
    resources?: unknown[];
  }&gt;;
  thumbnailUrl: string;
}
⋮----
/**
 * VSSubmoduleModal - Modal component for viewing course modules and submodules
 * 
 * Features:
 * - Video thumbnail preview
 * - List of submodules with completion status
 * - Module navigation
 * - VS-styled design elements
 */
⋮----
// Ensure the modal is positioned correctly with proper z-index
⋮----
// Ensure modal appears above everything else
document.body.style.overflow = &apos;hidden&apos;; // Prevent background scrolling
⋮----
// Reset when modal closes
⋮----
const handlePlayModule = (submoduleId: string) =&gt;
⋮----
// Check if submodule is locked
⋮----
// Set as selected
⋮----
// Implementation for actually playing the module would go here
⋮----
const handleImageError = (e: React.SyntheticEvent&lt;HTMLImageElement, Event&gt;) =&gt;
⋮----
// Also update background image if it exists
⋮----
{/* Left panel - Video player area */}
⋮----
{/* Theme-aware floating element for visual interest */}
⋮----
{/* Video thumbnail/player with defensive error handling */}
⋮----
backgroundColor: &apos;rgba(0,0,0,0.2)&apos;, // Fallback background color
⋮----
{/* Hidden img element for better error handling */}
⋮----
className=&quot;hidden&quot; // Hide actual img element
⋮----
{/* Play button overlay */}
⋮----
{/* Title overlay */}
⋮----
{/* Module description */}
⋮----
{/* Module stats */}
⋮----
{/* Right panel - Submodule list */}
⋮----
{/* Actions */}</file><file path="components/sections/bento-grid/3-rows-bottom.tsx">import {
  Tile,
  TileVisual,
  TileTitle,
  TileDescription,
  TileContent,
  TileLink,
} from &quot;../../ui/tile&quot;;
import { Section } from &quot;../../ui/section&quot;;
import { MousePointerClick, Shield, TextCursor, Wrench, MonitorSmartphone, Globe, MessageSquare } from &quot;lucide-react&quot;;
import React from &quot;react&quot;;
⋮----
export default function BentoGrid()</file><file path="components/sections/bento-grid/3-rows-top.tsx">import {
  Tile,
  TileVisual,
  TileTitle,
  TileDescription,
  TileContent,
  TileLink,
} from &quot;../../ui/tile&quot;;
import React from &quot;react&quot;;
import { Section } from &quot;../../ui/section&quot;;
⋮----
export default function BentoGrid()</file><file path="components/sections/bento-grid/vsBentoGrid.tsx">import React from &quot;react&quot;;
import { Section } from &quot;../../ui/section&quot;;
import { Badge } from &quot;../../ui/badge&quot;;
import { Globe, Zap, Database, PieChart, VideoIcon, BarChart, Code, Smartphone, Layout, Activity, MessageSquare, Shield, ArrowUpRight } from &quot;lucide-react&quot;;
⋮----
{/* Background patterns */}
⋮----
{/* Floating elements - light mode only */}
⋮----
{/* Floating elements - dark mode only */}
⋮----
{/* First row - 3 cards with col-span-4 each */}
⋮----
{/* Light mode floating element */}
⋮----
{/* Dark mode floating element */}
⋮----
{/* Light mode floating element */}
⋮----
{/* Dark mode floating element */}
⋮----
{/* Light mode floating element */}
⋮----
{/* Dark mode floating element */}
⋮----
{/* Second row - 2 cards with col-span-6 each */}
⋮----
{/* Light mode floating elements */}
⋮----
{/* Dark mode floating elements */}
⋮----
{/* Light mode floating elements */}
⋮----
{/* Dark mode floating elements */}</file><file path="components/sections/carousel/large.tsx">import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from &quot;../../ui/carousel&quot;;
import { Section } from &quot;../../ui/section&quot;;
import {
  Slide,
  SlideContent,
  SlideTitle,
  SlideDescription,
  SlideVisual,
  SlideButton,
  SlideExpandedContent,
} from &quot;../../ui/slide&quot;;
import { Image } from &quot;../../ui/image&quot;;
import { useTheme } from &quot;../../ui/theme-provider&quot;;
import Glow from &quot;../../ui/glow&quot;;
⋮----
const toggleSlide = (index: number) =&gt;</file><file path="components/sections/carousel/static.tsx">import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from &quot;../../ui/carousel&quot;;
import { Section } from &quot;../../ui/section&quot;;
import {
  Slide,
  SlideContent,
  SlideTitle,
  SlideDescription,
  SlideVisual,
} from &quot;../../ui/slide&quot;;
import { Image } from &quot;../../ui/image&quot;;
import { useTheme } from &quot;../../ui/theme-provider&quot;;
import Glow from &quot;../../ui/glow&quot;;
⋮----
const toggleSlide = (index: number) =&gt;</file><file path="components/sections/carousel/VSCarousel.tsx">import { useTheme } from &quot;../../ui/theme-provider&quot;;
import React, { useState } from &quot;react&quot;;
import { Section } from &quot;../../ui/section&quot;;
import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from &quot;../../ui/carousel&quot;;
import { Slide, SlideVisual, SlideButton, SlideContent, SlideDescription, SlideExpandedContent, SlideTitle } from &quot;../../ui/slide&quot;;
import { 
  featuredModules, 
  getModulesForSection, 
  courseStats
} from &quot;../../../lib/course-utils&quot;;
⋮----
// Map between module icons/themes and slide topics
⋮----
const toggleSlide = (index: number) =&gt;
⋮----
// Create slides based on featured modules
⋮----
// Safe access to course stats with defaults
⋮----
// Function to find module title with proper null checks
const findModuleTitle = (moduleId: string): string =&gt;
⋮----
// First try to find in featured modules
⋮----
// Then try to find in theory basics section
⋮----
// Default fallback
⋮----
{/* Accent badge */}
⋮----
{/* Gradient overlay */}
⋮----
{/* Hover effect overlay */}
⋮----
{/* Add related module info if expanded */}</file><file path="components/sections/navbar/default.tsx">import Navigation from &quot;../../ui/navigation&quot;;
import { Button } from &quot;../../ui/button&quot;;
import {
  Navbar as NavbarComponent,
  NavbarLeft,
  NavbarRight,
} from &quot;../../ui/navbar&quot;;
import { Sheet, SheetContent, SheetTrigger } from &quot;../../ui/sheet&quot;;
import { Menu } from &quot;lucide-react&quot;;
import LaunchUI from &quot;../../logos/launch-ui&quot;;
⋮----
export default function Navbar()</file><file path="components/sections/navbar/sticky.tsx">import { Button } from &quot;../../ui/button&quot;;
import {
  Navbar as NavbarComponent,
  NavbarLeft,
  NavbarRight,
} from &quot;../../ui/navbar&quot;;
import LaunchUI from &quot;../../logos/launch-ui&quot;;
⋮----
export default function Navbar()</file><file path="components/sections/navbar/vs-navbar.tsx">import React, { useState, useEffect, useRef } from &quot;react&quot;;
import { Button } from &quot;../../ui/button&quot;;
import {
  Navbar as NavbarComponent,
  NavbarLeft,
  NavbarRight,
} from &quot;../../ui/navbar&quot;;
import { Sheet, SheetContent, SheetTrigger } from &quot;../../ui/sheet&quot;;
import { Menu } from &quot;lucide-react&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { ScrollToPlugin } from &quot;gsap/ScrollToPlugin&quot;;
import {getClashLogos} from &quot;@/utils/imageMap&quot;;
// Register ScrollToPlugin
⋮----
interface VSNavbarProps {
  onApplyClick?: () =&gt; void;
}
⋮----
export default function VSNavbar(
⋮----
// Check viewport size on mount and resize
⋮----
const checkMobile = () =&gt;
⋮----
// Initial check
⋮----
// Add event listener for resize
⋮----
// Cleanup
⋮----
// Check for hash in URL on mount - only scroll if hash exists
⋮----
// Get the hash from the URL (e.g., #benefits, #pricing)
⋮----
// If hash exists, handle scrolling to the section after a delay
⋮----
// Scroll to the section
⋮----
// Cleanup timer if component unmounts before timeout
⋮----
// Only handle hash-based scrolling, don&apos;t force scroll to top
// This allows the SimpleHero to remain visible when loading the page
⋮----
// GSAP animation for the navbar
⋮----
// Improved scroll handling for immediate response with section detection
⋮----
const handleScroll = () =&gt;
⋮----
// Only show navbar at the very top of the page (0-10px)
⋮----
// Immediately hide on scroll down, show on scroll up
⋮----
// Scrolling down - hide immediately
⋮----
// Scrolling up - show immediately
⋮----
// Check which section is currently in view
⋮----
// Determine the current active section based on scroll position
⋮----
const offset = isMobile ? 150 : 200; // Adjust offset based on device
⋮----
// If the section is in the viewport (with offset)
⋮----
// Smooth scroll function for nav links
const handleNavLinkClick = (e: React.MouseEvent&lt;HTMLAnchorElement&gt; | React.MouseEvent&lt;HTMLButtonElement&gt;, targetId: string): void =&gt;
⋮----
// Set active section for styling
⋮----
// Use GSAP for smooth scrolling with adaptive offset based on screen size
⋮----
// Close mobile menu helper
const closeMobileMenu = () =&gt;
⋮----
// Handle &quot;Get Your Plan&quot; button click with qualification modal
const handleApplyClick = () =&gt;
⋮----
// Close mobile menu if open
⋮----
// Dispatch a custom event to open the qualification modal
// This will be caught by the VerticalShortcutLanding component
⋮----
onClick=</file><file path="components/sections/social-proof/marquee-2-rows.tsx">import React from &apos;react&apos;;
import Marquee from &quot;../../ui/marquee&quot;;
import { viewsThumbnails } from &apos;../../../utils/thumbnailMapper&apos;;
import { Section } from &quot;../../ui/section&quot;;
⋮----
interface MarqueeTwoRowsProps {
  className?: string;
  sectionTitle?: string;
  sectionDescription?: string;
}
⋮----
// Get thumbnails directly from the viewsThumbnails mapping
⋮----
// Split thumbnails into two roughly equal groups for the two rows (desktop)
⋮----
// Single row for mobile with all thumbnails
⋮----
// Use all thumbnails with repetition
⋮----
// Just one row for mobile
⋮----
{/* Full-width mask with vignette */}
⋮----
{/* Desktop layout - 2 rows, hidden on mobile */}
⋮----
{/* Mobile layout - 3 rows, hidden on desktop */}
⋮----
{/* Deep side vignettes that fade out thumbnails completely using theme-aware colors */}</file><file path="components/sections/tabs/left.tsx">import { Section } from &quot;../../ui/section&quot;;
import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;../../ui/tabs&quot;;
import { MockupFrame } from &quot;../../ui/mockup&quot;;
import Glow from &quot;../../ui/glow&quot;;
import { Badge } from &quot;../../ui/badge&quot;;
import { ReactNode, useRef, useState } from &quot;react&quot;;
import { gsap } from &quot;gsap&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import {
  Users,
  BriefcaseBusiness,
  Video,
  LineChart,
  TrendingUp,
  Clock,
  Rocket,
  BarChart3,
  ArrowRightLeft
} from &quot;lucide-react&quot;;
⋮----
// Custom styled visualization for each audience
const AudienceVisual = ({ 
  audience, 
  metrics = [],
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  image = null,
  isActive = false
}: {
  audience: string;
  metrics: Array&lt;{
    color: string | undefined;
    description: ReactNode;
    icon: React.ReactNode;
    label: string;
    value: string;
    highlight?: boolean;
  }&gt;;
  image?: string | null;
  isActive?: boolean;
}) =&gt;
⋮----
// eslint-disable-next-line @typescript-eslint/no-unused-vars
⋮----
// Create GSAP context for proper cleanup
⋮----
// Entrance animation when tab becomes active
⋮----
// Subtle floating animation for the metrics
⋮----
// Add subtle pulsing to highlight metrics
⋮----
}, ref); // Scope to container ref
⋮----
// The context will automatically clean up when the component unmounts or dependencies change
⋮----
}, [isActive]); // This runs whenever isActive changes
⋮----
{/* Background grid */}
⋮----
{/* Main content */}
⋮----
{/* Header */}
⋮----
{/* Metrics visualization */}
⋮----
{/* Pathway visualization */}
⋮----
{/* Path line */}
⋮----
{/* Path steps */}
⋮----
// Define metrics for each audience type
⋮----
// Add GSAP animations for tab changes using useGSAP
⋮----
// Create GSAP context for proper cleanup
⋮----
}, tabsContainerRef); // Scope to tabs container
⋮----
// The context will automatically clean up when the component unmounts or dependencies change
⋮----
}, [activeTab]); // This runs whenever the activeTab changes</file><file path="components/sections/BeforeAfterStats.tsx">import React from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { VSSection } from &apos;../ui/vs-background&apos;;
import { VSHeading, VSText } from &apos;../ui/vs-text&apos;;
import { ArrowRight, TrendingUp } from &apos;lucide-react&apos;;
⋮----
// Define the data structure for before/after examples
interface BeforeAfterExample {
  title: string;
  beforeViews: number;
  afterViews: number;
  beforeDate: string;
  afterDate: string;
  imageBefore?: string;
  imageAfter?: string;
}
⋮----
interface BeforeAfterStatsProps {
  examples: BeforeAfterExample[];
  onCtaClick?: () =&gt; void;
}
⋮----
// Format large numbers with comma separation
const formatNumber = (num: number): string =&gt;
⋮----
// GSAP animations with theme-aware parameters
⋮----
// Get computed theme variables
⋮----
// Animate cards when they come into view
⋮----
// Animate arrows when they come into view
⋮----
return () =&gt; ctx.revert(); // Proper cleanup
⋮----
{/* Theme-aware floating elements */}
⋮----
{/* Before stats */}
⋮----
{/* Arrow between */}
⋮----
{/* After stats */}
⋮----
{/* Growth percentage */}
⋮----
{/* Optional CTA button */}
⋮----
// Default examples in case none are provided</file><file path="components/sections/Case-Studies.tsx">import React, { useState, useEffect, useRef } from &quot;react&quot;;
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
} from &quot;recharts&quot;;
import { gsap } from &quot;gsap&quot;;
import { ScrollTrigger } from &quot;gsap/ScrollTrigger&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import { Section } from &quot;../ui/section&quot;;
import { AnimatedButton } from &quot;../marble-buttons/AnimatedButton&quot;;
⋮----
// Import creator case study data from the database via course-utils
import courseUtils, { Creator } from &quot;../../lib/course-utils&quot;;
import { avatarImages } from &quot;@/utils/importImages&quot;;
⋮----
// Register GSAP plugins
⋮----
// Set ScrollTrigger defaults for better performance
⋮----
ignoreMobileResize: true, // Reduces updates during mobile resize events
⋮----
// Extend Creator interface to support our image mapping system
interface EnhancedCreator extends Creator {
  // Original property might be a string path
  avatarSrc?: string;
}
⋮----
// Original property might be a string path
⋮----
// Custom CSS class to be added for hiding scrollbars
// We&apos;ll use this with a regular div instead of a styled component
⋮----
// Define component props interface
interface CaseStudiesProps {
  onCtaClick?: () =&gt; void;
}
⋮----
// Type for ScrollTrigger instance
type ScrollTriggerInstance = ReturnType&lt;typeof ScrollTrigger.create&gt;;
⋮----
// Get creators data from the database with a fallback for UI display
⋮----
// Ensure avatar paths are correct
⋮----
// Remove the image mapping attempt since we&apos;re using direct public paths
⋮----
// Define the CaseStudies component with forwardRef
⋮----
// Add inline styles to head to handle the scrollbar hiding
// Also add component-level ScrollTrigger cleanup
⋮----
// Create style element if it doesn&apos;t exist already
⋮----
// Comprehensive cleanup function for component unmount
⋮----
// Clean up style element
⋮----
// Ensure all ScrollTrigger instances associated with this component are killed
⋮----
// Get all ScrollTrigger instances
⋮----
// Kill any triggers related to this component
⋮----
// Clear any pending refresh calls
⋮----
// Create a debounced version of ScrollTrigger.refresh
⋮----
const debounceScrollTriggerRefresh = () =&gt;
⋮----
}, 200); // 200ms delay before refreshing
⋮----
// Function to scroll the carousel
const scrollCarousel = (direction: &quot;left&quot; | &quot;right&quot;) =&gt;
⋮----
const scrollAmount = container.offsetWidth * 0.7; // Scroll by 70% of visible width
⋮----
// Clamp the scroll position between 0 and max scroll
⋮----
// Use debounced refresh instead of immediate refresh
⋮----
// Use the current creator data with a fallback empty object if not found
⋮----
// Format numbers with comma separators
const formatNumber = (num: number) =&gt;
⋮----
// Format large numbers with abbreviations for top stats display
const formatLargeNumber = (num: number) =&gt;
⋮----
// Calculate growth duration in months for each creator
const getGrowthDuration = (creator: Creator): number =&gt;
⋮----
// Find months with actual data (excluding zero values)
⋮----
// Reset animation when changing creators or metrics - faster animation transition
⋮----
}, 25); // Reduced from 100ms to 25ms for faster transitions
⋮----
// Refresh ScrollTrigger when relevant state changes
⋮----
// Use the debounced refresh function for all state changes
⋮----
// Cleanup on unmount
⋮----
// Calculate Y-axis domain based on active metric
const getYAxisDomain = () =&gt;
⋮----
return [0, Math.ceil(maxViews * 1.1)] as [number, number]; // Add 10% padding and type assertion
⋮----
// For &apos;all&apos;, let Recharts handle it
⋮----
// GSAP animations with enhanced cleanup
⋮----
// Store ScrollTrigger instances for explicit cleanup
⋮----
// Direct DOM manipulation without requestAnimationFrame to avoid timing issues
// Create ScrollTrigger animation for main elements
⋮----
y: 20, // Reduced movement for smoother animation
⋮----
stagger: 0.05, // Reduced stagger time for quicker animation
duration: 0.6, // Shorter duration for better performance
ease: &quot;power2.out&quot;, // Simpler easing function
⋮----
toggleActions: &quot;play none none none&quot;, // Changed to avoid reverse animation issues
once: false, // Don&apos;t keep the animation state in memory
⋮----
// Special animation for the stats row with staggered entry
⋮----
// Immediately set all statsBoxes to be visible first
⋮----
y: 5, // Minimal movement
opacity: 0.7, // Start more visible
stagger: 0.02, // Faster stagger
duration: 0.3, // Shorter duration
ease: &quot;power1.out&quot;, // Simpler easing
⋮----
toggleActions: &quot;play none none none&quot;, // Changed to avoid reverse issues
⋮----
// Return comprehensive cleanup function with enhanced error handling
⋮----
// First kill all ScrollTrigger instances explicitly
⋮----
// Kill all ScrollTrigger instances to ensure thorough cleanup
⋮----
// Then revert the GSAP context
⋮----
// Custom tooltip component for the chart
const CustomTooltip = ({
      active,
      payload,
      label,
    }: {
      active?: boolean;
      payload?: Array&lt;{
        name: string;
        value: number;
        color: string;
      }&gt;;
      label?: string;
}) =&gt;
⋮----

⋮----
ref=
⋮----
{/* Background patterns */}
⋮----
{/* Theme-aware floating elements */}
⋮----
{/* Section header - responsive and properly positioned */}
⋮----
{/* Stats carousel optimized for mobile with HUD-like appearance */}
⋮----
{/* Mobile view: Creator grid with more prominent UI */}
⋮----
{/* Desktop view: Carousel with navigation */}
⋮----
{/* Left scroll button */}
⋮----
{/* Carousel content */}
⋮----
{/* Right scroll button */}
⋮----
{/* Single column layout for main content - mobile optimized */}
⋮----
{/* Mobile-optimized metric toggle buttons - more touch-friendly */}
⋮----
{/* Mobile-optimized stats row - HUD-like appearance */}
⋮----
{/* Mobile view: More condensed, HUD-like layout */}
⋮----
{/* Views */}
⋮----
{/* Followers */}
⋮----
{/* Interactions */}
⋮----
{/* Desktop view: Original layout */}
⋮----
{/* Views card */}
⋮----
{/* Followers card */}
⋮----
{/* Interactions card */}
⋮----
{/* Graph component - HUD-like mobile optimization */}
⋮----
{/* Mobile view header for graph */}
⋮----
{/* Reduced height for mobile, HUD-like appearance */}
⋮----
{/* Simplified glow effect */}
⋮----
{/* Simplified grid for mobile */}
⋮----
{/* More compact X-axis for mobile */}
⋮----
{/* Simplified Y-axis for mobile */}
⋮----
{/* Tooltip remains the same */}
⋮----
{/* Hide legend on smallest screens, simplified on mobile */}
⋮----
{/* Views line - simplified for mobile */}
⋮----
{/* Followers line - simplified for mobile */}
⋮----
{/* Interactions line - simplified for mobile */}
⋮----
{/* Creator Profile - Mobile-optimized HUD-like appearance */}
⋮----
{/* Mobile view: Header card with avatar and name */}
⋮----
{/* Creator description - optimized for mobile */}
⋮----
{/* Desktop view: Flex layout with larger avatar */}
⋮----
{/* Creator bio - with improved readability on mobile */}
⋮----
{/* No bottom spacing or decorative effects */}
⋮----
// Add display name for debugging
⋮----
// Helper function to merge refs</file><file path="components/sections/ConnectEverything.tsx">import React, { useRef, useState, useEffect } from &quot;react&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { getImage } from &quot;../../utils/imageMap&quot;;
⋮----
interface ConnectEverythingProps {
  className?: string;
  id?: string;
}
⋮----
// Use our image mapping utility to get the actual images with proper error handling
⋮----
// Check if any required images are missing
⋮----
// Simplified GSAP animations to reduce lag
⋮----
// Only do minimal icon animations
⋮----
// Simple floating animation
⋮----
// Simple hover effect with reduced motion preference check
⋮----
// Simplified glow effect with reduced motion check
⋮----
{/* Theme-aware floating elements */}
⋮----
{/* Creator HUD */}
⋮----
{/* Scran.ar */}
⋮----
{/* Spitt.ar */}
⋮----
{/* Subtle pattern background */}</file><file path="components/sections/course-stats.tsx">import React, { useRef, useState } from &apos;react&apos;;
import { gsap } from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import { Book, Clock, FileText, FileCode, Layers, CheckSquare } from &apos;lucide-react&apos;;
import courseUtils from &quot;../../lib/course-utils&quot;;
// Using courseUtils as the single source of truth instead of direct import
import { Section } from &quot;../ui/section&quot;;
import { ModuleHUD } from &apos;./ModuleHUD&apos;;
⋮----
// Define CSS animations for floating elements - VS Bubbly style
⋮----
// Register GSAP plugins
⋮----
// Stats items with their respective icons, preserving their original vibrant colors
// as required in CLAUDE.md - converted to OKLCH format for better compatibility
⋮----
color: &apos;oklch(75% 0.13 57)&apos;, // #FEA35D - Direct OKLCH color instead of CSS var
colorHover: &apos;oklch(70% 0.16 52)&apos; // Direct OKLCH color instead of CSS var
⋮----
color: &apos;oklch(60% 0.19 25)&apos;, // #FF3B30
⋮----
color: &apos;oklch(63% 0.13 250)&apos;, // #4A90E2
⋮----
color: &apos;oklch(75% 0.18 140)&apos;, // #34C759
⋮----
color: &apos;oklch(58% 0.21 305)&apos;, // #AF52DE
⋮----
color: &apos;oklch(48% 0.07 230)&apos;, // #387292
⋮----
// State for ModuleHUD
⋮----
// Handler for module clicks
const handleModuleClick = (moduleId: string) =&gt;
⋮----
// Get stats from courseUtils as the single source of truth
⋮----
// Use useGSAP hook for proper animation lifecycle management
⋮----
// Get computed theme variables for animation
⋮----
// Create a GSAP context for proper cleanup
⋮----
// Enhanced VS Bubbly animation on mount - more pronounced (20% more)
⋮----
// After items appear, animate the counters
⋮----
}, statsRef); // Scope animations to statsRef
⋮----
function animateCounters()
⋮----
// Make sure index is valid and statItems[index] exists
⋮----
// Make sure courseStats and key exist
⋮----
// Set initial value
⋮----
// Animate counter
⋮----
if (!el) return; // Safety check
⋮----
// Format with commas
⋮----
// Add + for large numbers
⋮----
// The context will automatically clean up when the component unmounts
⋮----
}, []); // Empty dependency array means this runs once on mount
⋮----
{/* Apply float animations via style tag */}
⋮----
{/* Theme-aware floating elements */}
⋮----
{/* ModuleHUD integration */}
⋮----
// Fix TypeScript error by using type assertion to safely access the key
⋮----
{/* Decorative elements removed to reduce padding */}</file><file path="components/sections/course-viewer.tsx">import React, { useState, useRef, useEffect } from &quot;react&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { ModuleHUD } from &quot;./ModuleHUD&quot;;
import { VSSection } from &quot;../ui/vs-background&quot;;
import { VSGradientText, VSHeading } from &quot;../ui/vs-text&quot;;
import { PlayCircle, Check, Star } from &quot;lucide-react&quot;;
// VSSubmoduleModal is now handled by ModuleHUD
⋮----
interface ModuleDetails {
  id: string;
  title: string;
  subtitle: string;
  points: string[];
  thumbnail: string;
}
⋮----
export const CourseViewer: React.FC = () =&gt;
⋮----
// Get computed theme variables for animation
const getThemeVariables = () =&gt;
⋮----
// Background floating animation
⋮----
// Subtle rotation for decorative elements
⋮----
// Add subtle pulse to the call-to-action button
⋮----
// Set up Intersection Observer for scroll-triggered animations
⋮----
// Run the animation sequence when the component enters the viewport
⋮----
// Animation sequence disabled - handled in ModuleHUD component
// We&apos;ll only animate floating elements in container
⋮----
// Animation for floating elements
⋮----
// Stop observing after animation is triggered
⋮----
threshold: 0.2, // Trigger when 20% of the element is visible
rootMargin: &quot;0px 0px -100px 0px&quot;, // Adjust based on when you want the animation to trigger
⋮----
// Observe the ModuleHUD container
⋮----
// Clean up observer when component unmounts
⋮----
// Function to handle section click in the HUD
const handleSectionClick = (sectionId: string) =&gt;
⋮----
// Function to handle module click within an expanded section
const handleModuleClick = (moduleId: string) =&gt;
⋮----
// Check if it&apos;s a section ID or a module ID
⋮----
// If it&apos;s a section ID or contains system, handle it locally
⋮----
// For regular modules, we don&apos;t need to do anything here
// ModuleHUD will handle showing its own modal
⋮----
// Modal handling is now done by ModuleHUD
⋮----
{/* Theme-aware floating elements with proper animation classes */}
⋮----
{/* Grid background pattern for subtle texture */}
⋮----
{/* ModuleHUD container with theme-aware styling and proper centering */}
⋮----
{/* Theme-aware floating elements for visual interest */}
⋮----
// Handle different click types based on moduleId format
⋮----
// 1. Handle system blocks (-system- in id)
⋮----
// This is a system block with special animation handlers
⋮----
// 2. Handle sections with display keys (-col or -systems in id)
⋮----
// This is a displayKey - extract the base section ID
⋮----
// 3. Handle main section blocks
⋮----
// This is a section - toggle selection
⋮----
// 4. If we reach here, this is a regular module - show modal
⋮----
{/* Submodule modal is now handled by ModuleHUD */}</file><file path="components/sections/Customisation.tsx">import React from &apos;react&apos;;
import { VSText, VSHeading, VSGradientText } from &apos;../ui/vs-text&apos;;
import { VSBackground, VSCard, VSSection } from &apos;../ui/vs-background&apos;;
import { AnimatedButton } from &apos;../marble-buttons/AnimatedButton&apos;;
import { Badge } from &apos;../ui/badge&apos;;
import { Check, Settings, Users, Calendar, BookOpen, Zap } from &apos;lucide-react&apos;;
⋮----
type CustomisationProps = {
  onCtaClick: () =&gt; void;
};
⋮----
// Custom options available
⋮----
{/* Theme-aware floating elements */}</file><file path="components/sections/faq-raised.tsx">import { Section } from &quot;../ui/section&quot;;
import {
  Accordion,
  AccordionItem,
  AccordionTrigger,
  AccordionContent,
} from &quot;../ui/accordion-raised&quot;;
import { Link } from &quot;../ui/link&quot;;</file><file path="components/sections/faq-updated.tsx">import { Section } from &quot;../ui/section&quot;;
import {
  Accordion,
  AccordionItem,
  AccordionTrigger,
  AccordionContent,
} from &quot;../ui/accordion-raised&quot;;
import { courseStats, tracks, sections } from &quot;../../lib/course-utils&quot;;
⋮----
// Helper function to safely access course data with proper null checks
⋮----
// FAQ data from guidance document</file><file path="components/sections/featured-modules.tsx">import React from &apos;react&apos;;
import { Section } from &quot;../ui/section&quot;;
import { Badge } from &quot;../ui/badge&quot;;
import { Button } from &quot;../ui/button&quot;;
import { featuredModules, tracks, getTrackIcon } from &quot;../../lib/course-utils&quot;;
import { ArrowRightCircle, Clock, Users } from &quot;lucide-react&quot;;
⋮----
// Extend the Module interface to include difficulty property
interface Module {
  id: string;
  title: string;
  subtitle: string;
  icon: React.ReactNode;
  color: string;
  difficulty?: string;
  tracks: string[];
  duration: number;
  founderMustWatch: boolean;
  submodules: { title: string }[];
}
⋮----
// Get the featured modules from our data with proper null check
⋮----
{/* Module header with color strip based on module color */}
⋮----
{/* Tracks badges */}
⋮----
// Use getTrackIcon safely with fallback
⋮----
{/* Submodules preview with null check */}
⋮----
{/* Footer with &quot;Founder must-watch&quot; badge if applicable */}
⋮----
{/* Learn More button */}</file><file path="components/sections/founder-track.tsx">import React, { useState, useRef, useEffect } from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { Section } from &quot;../ui/section&quot;;
import { Badge } from &quot;../ui/badge&quot;;
import { AnimatedButton } from &quot;../marble-buttons/AnimatedButton&quot;;
import courseUtils, { Module, Submodule, Track, tracks, courseStats } from &quot;../../lib/course-utils&quot;;
import { BriefcaseBusiness, Clock, BookOpen, CheckCircle, ArrowRightCircle, Zap, Calendar, Users, Video } from &quot;lucide-react&quot;;
import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from &quot;../ui/carousel&quot;;
import { Slide, SlideVisual, SlideButton, SlideContent, SlideDescription, SlideExpandedContent, SlideTitle } from &quot;../ui/slide&quot;;
⋮----
interface FounderTrackProps {
  onCtaClick?: () =&gt; void;
}
⋮----
// Founder Module Card component
const FounderModuleCard: React.FC&lt;{
  module: Module;
onPreview?: ()
⋮----
{/* Thumbnail */}
⋮----
src=
⋮----
{/* Content area with flex-grow to push button to bottom */}
⋮----
{/* Show all points with responsive visibility instead of using window.innerWidth */}
⋮----
{/* Show &quot;more points&quot; indicator conditionally with CSS */}
⋮----
&lt;span&gt;
⋮----
{/* Button always at the bottom */}
⋮----
e.stopPropagation();
onPreview();
⋮----
// Get the founder modules from our data with null check
⋮----
// Get the founder track color with null check
⋮----
// Safe access to stats with null checks
⋮----
const founderSpecificModules = founderModules.length; // Use the founder modules array directly
⋮----
// Refs for animation
⋮----
// Animations
⋮----
// Get computed theme variables for animation
⋮----
// Staggered fade-in
⋮----
// Floating elements animation
⋮----
return () =&gt; ctx.revert(); // Proper cleanup
⋮----
{/* Floating decorative elements */}
⋮----
{/* Left Column - Overview */}
⋮----
{/* Track Highlights - No featured module card */}
⋮----
{/* Right Column - Modules Carousel */}
⋮----
{/* Make sure we have modules to display */}
⋮----
{/* Card wrapper with theme-aware background color */}
⋮----
// Display a placeholder message if no modules are found
⋮----
{/* Create custom navigation buttons that mimic the functionality - responsive for mobile */}</file><file path="components/sections/index.ts">// Export all section components for easy importing
import FAQ from &quot;./faq-raised&quot;;
import FAQUpdated from &quot;./faq-updated&quot;;
import { Pricing3ColsSubscription } from &quot;./pricing-3-cols-subscription&quot;;
import { ModuleHUD } from &quot;./ModuleHUD&quot;;
import CourseStats from &quot;./course-stats&quot;;
import CaseStudies from &quot;./Case-Studies&quot;;
import VSPainPoints from &quot;./VSPainPoints&quot;;
import VSCharts from &quot;./VSCharts&quot;;
import VSBigReveal from &quot;./VS-BigReveal&quot;;
import BeforeAfterStats from &quot;./BeforeAfterStats&quot;;
import PricingSimple from &quot;./PricingSimple&quot;;
import Customisation from &quot;./Customisation&quot;;
import { CourseViewer } from &quot;./course-viewer&quot;;
import FounderTrack from &quot;./founder-track&quot;;
import TeamSection from &quot;./TeamSection&quot;;
import ModuleHUDShowcase from &quot;./ModuleHUDShowcase&quot;;
import ConnectEverything from &quot;./ConnectEverything&quot;;
⋮----
// Re-export the components
⋮----
// Note: Additional components from subdirectories like navbar, carousel,
// feature, and bento-grid can be imported directly from their respective folders
// when needed. We&apos;re keeping this simple to avoid linter errors.</file><file path="components/sections/module-breakdown-simplified.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import { ArrowRightCircle, BookOpen, CheckCircle, Star, ChevronLeft, ChevronRight, Camera, Scissors, Briefcase, Rocket, Clock, Award } from &apos;lucide-react&apos;;
import courseUtils, { sections, tracks, getSectionDescription, getModulesForSection, Module, courseStats } from &apos;../../lib/course-utils&apos;;
import { Section } from &apos;../../components/ui/section&apos;;
import { Badge } from &apos;../../components/ui/badge&apos;;
⋮----
// Initialize with the first section (with null check)
⋮----
// State for pagination
⋮----
const modulesPerPage = 4; // Show 4 modules per page
⋮----
// Get active modules for the selected section with null check
⋮----
// Calculate total pages with null check
⋮----
// Get current page modules with null check
⋮----
// Reset page when section changes
⋮----
// Helper function to get an appropriate icon for each section
function getSectionIcon(sectionName: string)
⋮----
// Handle page navigation
const nextPage = () =&gt;
⋮----
const prevPage = () =&gt;
⋮----
// Handle section change
const handleSectionChange = (sectionId: string) =&gt;
⋮----
setCurrentPage(0); // Reset to first page when changing sections
⋮----
// Get active section data with null check
⋮----
// Total modules count with null check
⋮----
{/* Section navigation - horizontal scrolling tabs */}
⋮----
{/* Section header */}
⋮----
{/* Learning tracks */}
⋮----
{/* Module cards with pagination */}
⋮----
{/* Module points/highlights */}
⋮----
{/* Submodules count */}
⋮----
{/* Pagination controls */}
⋮----
{/* Preview notice */}
⋮----
{/* CTA Button */}
⋮----
// Add this CSS to your global styles or as a style tag
// .hide-scrollbar::-webkit-scrollbar {
//   display: none;
// }
// .hide-scrollbar {
//   -ms-overflow-style: none;
//   scrollbar-width: none;
// }</file><file path="components/sections/module-breakdown.tsx">import React, { useState } from &apos;react&apos;;
import { ArrowRightCircle, BookOpen, CheckCircle, Star, AlertCircle } from &apos;lucide-react&apos;;
import { sections, tracks, getModulesForSection, getSectionDescription } from &apos;../../lib/course-utils&apos;;
⋮----
// Map Lucide icons to section IDs
const getSectionIcon = (sectionId: string) =&gt;
⋮----
// Get modules for the active section from course-utils
⋮----
// Find the active section data from course-utils
⋮----
// Get the section description from course-utils
⋮----
{/* Section navigation */}
⋮----
{/* Section header */}
⋮----
{/* Module cards */}
⋮----
{/* Tracks legend */}</file><file path="components/sections/ModuleHUDShowcase.tsx">import React, { useState } from &apos;react&apos;;
import { ModuleHUD } from &apos;./ModuleHUD&apos;;
import ConnectEverything from &apos;./ConnectEverything&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { VSHeading } from &quot;../ui/vs-text&quot;;
⋮----
const ModuleHUDShowcase: React.FC = () =&gt;
⋮----
// Handle module click with enhanced debugging
const handleModuleClick = (moduleId: string) =&gt;
⋮----
// Toggle selection
⋮----
// Provide visual feedback in console
⋮----
// Apply selection
⋮----
// GSAP animations for scroll-triggered animations
⋮----
// Set up Intersection Observer for scroll-triggered animations
⋮----
// Run the animation sequence when the component enters the viewport
⋮----
// Animation for heading and text
⋮----
// Animation for floating elements
⋮----
// Stop observing after animation is triggered
⋮----
threshold: 0.2, // Trigger when 20% of the element is visible
rootMargin: &quot;0px 0px -100px 0px&quot; // Adjust based on when you want the animation to trigger
⋮----
// Observe the ModuleHUD container
⋮----
// Clean up observer when component unmounts
⋮----
{/* ModuleHUD Component */}
⋮----
{/* Theme-aware floating elements for background decoration */}
⋮----
{/* Additional floating elements */}
⋮----
{/* ModuleHUD component */}
⋮----
// Ensure system block IDs are handled properly
⋮----
// For system blocks, directly pass the ID
⋮----
// For other modules, use the standard handler
⋮----
{/* Connect Everything Section */}
⋮----
{/* Animation utilities */}</file><file path="components/sections/pricing-3-cols-subscription.tsx">import { cn } from &quot;../../lib/utils&quot;;
import { CircleCheckBig, User, Users } from &quot;lucide-react&quot;;
import { Button } from &quot;../ui/button&quot;;
import { Section } from &quot;../ui/section&quot;;
import { Switch } from &quot;../ui/switch&quot;;
import { useState } from &quot;react&quot;;
import { Link } from &quot;../ui/link&quot;;
import { courseStats, tracks } from &quot;../../lib/course-utils&quot;;
import { pricingTiers } from &quot;../../data/pricing&quot;;
⋮----
type Plan = {
  name: string;
  description: string;
  icon?: React.ReactNode;
  monthlyPrice: number;
  yearlyPrice: number;
  cta: {
    variant: &quot;outline&quot; | &quot;default&quot; | &quot;glow&quot;;
    label: string;
    href: string;
  };
  features: string[];
  featured: boolean;
  classes?: string;
};
⋮----
// Transform pricing tiers from course-utils into the format needed for this component
⋮----
monthlyPrice: pricingTiers[0].basePrice / 100, // Convert to smaller display value
yearlyPrice: Math.round(pricingTiers[0].basePrice * 0.8) / 100, // 20% discount
⋮----
yearlyPrice: Math.round(pricingTiers[1].basePrice * 0.8) / 100, // 20% discount
⋮----
yearlyPrice: Math.round(pricingTiers[2].basePrice * 0.8) / 100, // 20% discount
⋮----
const yearlyDiscount = 20; // 20% discount for yearly plans
⋮----
className=
⋮----
{/* Add floating elements for visual interest */}
⋮----
{/* Add subtle pattern behind price */}</file><file path="components/sections/pricing-quiz-modal.tsx">// src/components/pricing-quiz-modal.tsx
import React, { useState } from &apos;react&apos;;
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from &apos;../ui/dialog&apos;;
import { Button } from &apos;../ui/button&apos;;
import { HelpCircle } from &apos;lucide-react&apos;;
import { quizSteps } from &apos;../../data/pricing&apos;;
import { AnimatedButton } from &quot;../marble-buttons/AnimatedButton&quot;;
⋮----
interface PricingQuizProps {
  onComplete: (recommendedPlan: number) =&gt; void;
}
⋮----
const handleSelect = (value: string) =&gt;
⋮----
const handleNext = () =&gt;
⋮----
// Final step =&gt; calculate recommendation
⋮----
// Reset for the next user session
⋮----
const handlePrevious = () =&gt;
⋮----
const calculateRecommendation = () =&gt;
⋮----
// Default to Blueprint
⋮----
// Rule 1: If involvement is &quot;none&quot; OR speed is &quot;fast&quot; =&gt; Growth Engine
⋮----
recommendation = 2; // Viral Growth
⋮----
// Rule 2: beginner/started + hands-on + slow =&gt; Blueprint
⋮----
recommendation = 0; // Brand Blueprint
⋮----
// Rule 3: All else =&gt; Authority Automator
⋮----
recommendation = 1; // Authority Automator
⋮----
{/* Floating elements for visual interest */}
⋮----
{/* Dark mode floating elements */}</file><file path="components/sections/PricingSimple.tsx">import React, { useState } from &apos;react&apos;;
import { Section } from &apos;../ui/section&apos;;
import { VSText, VSHeading, VSGradientText } from &apos;../ui/vs-text&apos;;
import { VSBackground, VSCard, VSSection } from &apos;../ui/vs-background&apos;;
import { AnimatedButton } from &apos;../marble-buttons/AnimatedButton&apos;;
import { Badge } from &apos;../ui/badge&apos;;
import { CircleCheck, Check, Zap, Award, Users } from &apos;lucide-react&apos;;
import { pricingTiers } from &apos;../../data/pricing&apos;;
import { courseStats } from &apos;../../lib/course-utils&apos;;
⋮----
type PricingSimpleProps = {
  onCtaClick: () =&gt; void;
};
⋮----
// Format price for display
const formatPrice = (price: number) =&gt;
⋮----
{/* Theme-aware floating elements */}
⋮----
onClick=
⋮----
// Calculate pricing based on yearly/monthly selection
⋮----
// Calculate monthly price when displayed yearly
⋮----
{/* Theme-aware floating element for visual interest */}
⋮----
{/* Popular badge */}
⋮----
{/* Tier header with icon */}
⋮----
{/* Pricing */}
⋮----
{/* CTA Button */}
⋮----
{/* Features list */}
⋮----
{/* Bottom CTA */}</file><file path="components/sections/TeamSection.tsx">import React, { useRef, useEffect } from &quot;react&quot;;
import {
  getTeamMemberHalftone,
  getTeamImageCollection,
} from &quot;../../utils/imageMap&quot;;
import gsap from &quot;gsap&quot;;
import { ScrollTrigger } from &quot;gsap/ScrollTrigger&quot;;
⋮----
// Main container ref
⋮----
// GSAP ScrollTrigger parallax - smooth and optimized
⋮----
// Register ScrollTrigger plugin
⋮----
// Store all ScrollTrigger instances for cleanup
⋮----
// Create separate context for our animations to prevent conflicts
⋮----
// Apply parallax to each team member section
⋮----
// Create a timeline for this section
⋮----
start: &quot;top bottom&quot;, // Start when top of section reaches bottom of viewport
end: &quot;bottom top&quot;, // End when bottom of section leaves top of viewport
scrub: 0.5, // Smooth scrubbing effect (0.5 second lag)
// markers: true,    // For debugging - remove in production
⋮----
// Store the trigger for cleanup
⋮----
// Find all parallax elements in this section with data-speed
⋮----
// Add each element to the timeline with its own speed
⋮----
// If this is a floating team image, apply enhanced movement for falling effect
⋮----
// Get custom speed and create more pronounced vertical movement
// Higher speed = faster falling
const verticalMovement = speed * 80 * direction; // Much more vertical movement
const horizontalMovement = Math.random() * 20 - 10; // Small random horizontal drift
⋮----
// Add to timeline - animate based on scroll position
⋮----
// Regular parallax for other elements (like halftone)
⋮----
// Add to timeline - animate based on scroll position
⋮----
); // Start at the beginning of the timeline
⋮----
// Additional animations can be re‑added here if needed
}); // &lt;-- close team-member-section forEach
⋮----
// Cleanup function
⋮----
// Kill all ScrollTriggers we created
⋮----
// Clear the GSAP context
⋮----
// Team members data with dynamic image loading
⋮----
// Get halftone image for the main display
⋮----
// Get dynamic collection of team images
⋮----
{/* Header section */}
⋮----
{/* Floating background elements */}
⋮----
{/* Dark mode floating elements */}
⋮----
{/* Team member sections - each is a full viewport height */}
⋮----
{/* Background floating elements */}
⋮----
{/* Floating team images - larger and with parallax data attributes */}
⋮----
{/* Render all dynamically loaded team images */}
⋮----
width: `${180 + img.scale * 120}px`, // Varied sizes based on scale
// Let height be determined by aspect ratio
opacity: img.opacity, // Use strategic opacity from our imageMap adjustments
⋮----
transform: `rotate(${img.position.rotate / 50}deg)`, // Use full rotation for more dynamic feel
⋮----
data-rotate={img.position.rotate} // Full rotation for dynamic effect
data-speed={img.speed} // Use calculated speed from imageMap for varying &quot;falling&quot; speeds
⋮----
className=&quot;w-full object-contain&quot; // Use object-contain to preserve aspect ratio
style={{ maxHeight: `${320 + img.scale * 80}px` }} // Control max height for aspect ratio
⋮----
{/* Content container */}
⋮----
{/* Image container */}
⋮----
{/* Halftone image that peeks from the bottom of the section */}
⋮----
{/* Quote overlay */}
⋮----
{/* Gradient overlay for halftone transition */}
⋮----
{/* Content - has z-index of 30, higher than all images */}</file><file path="components/sections/VS-BigReveal.tsx">import React, { useRef } from &quot;react&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import { gsap } from &quot;gsap&quot;;
import { ScrollTrigger } from &quot;gsap/ScrollTrigger&quot;;
import { CheckCircle, ArrowRightCircle } from &quot;lucide-react&quot;;
import AnimatedLogo from &quot;../../components/logos/AnimatedLogo&quot;;
import IsometricGridBackground from &quot;../hero/IsometricPattern&quot;;
import { VSText, VSHeading, VSGradientText } from &quot;../ui/vs-text&quot;;
import { VSCard, VSSection } from &quot;../ui/vs-background&quot;;
import { useDeviceDetection } from &quot;../../utils/animation-utils&quot;;
⋮----
// Register GSAP plugins
⋮----
// Program details data
⋮----
// Key features data from the copy
⋮----
// --- Mobile Animations ---
⋮----
// Simple fade-in for heading
⋮----
// Simple fade-in for tagline
⋮----
// Simple fade-in for feature cards (as a group)
⋮----
// Simple fade-in for program details (as a group)
⋮----
// Simple fade-in for individual feature items
⋮----
// Simple fade-in for CTA button
⋮----
// NOTE: Large logo animation is disabled on mobile for performance.
⋮----
// --- Desktop Animations --- (Original Logic)
⋮----
// Logo animation
⋮----
// Heading and tagline timeline
⋮----
// Card and feature details timeline
⋮----
// Feature item animations
⋮----
// CTA button animation
⋮----
{/* Decorative elements */}
⋮----
{/* Conditionally render logo wrapper only on desktop to avoid performance hit */}</file><file path="components/sections/VS-Interactive-Features.tsx">import React, { useRef, useState } from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import { gsap } from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
import { 
  BarChart3, 
  FileText, 
  Eye, 
  Clock, 
  DollarSign, 
  PieChart,
  ChevronRight
} from &apos;lucide-react&apos;;
import { VSText, VSHeading, VSGradientText } from &apos;../ui/vs-text&apos;;
import { VSBackground, VSCard, VSSection } from &apos;../ui/vs-background&apos;;
⋮----
// Register GSAP plugins
⋮----
// Features data
⋮----
const VSInteractiveFeatures = () =&gt;
⋮----
// GSAP animations with proper cleanup
⋮----
// Get computed theme variables for animation
⋮----
// Create animation context for proper cleanup
⋮----
// Header animations
⋮----
// Features grid animation - staggered reveal
⋮----
// Floating elements parallax effect
⋮----
// Different elements move at different speeds
⋮----
// CTA button animation
⋮----
return () =&gt; ctx.revert(); // Proper cleanup
⋮----
// Function to handle feature card click with enhanced animations
const handleFeatureClick = (id: number) =&gt;
⋮----
// Enhanced animations for the clicked card
⋮----
// Reset all cards first
⋮----
// Reset all highlights
⋮----
// Create a timeline for coordinated animations
⋮----
// Initial &quot;press&quot; effect
⋮----
// Bounce back with elevation
⋮----
// Add subtle rotation for dimension
⋮----
// Highlight animation
⋮----
// Icon animation
⋮----
// Clean up this mini context when component updates
⋮----
// Render appropriate icon for each feature with theme-aware colors
const renderIcon = (feature: typeof features[0]) =&gt;
⋮----
{/* Theme-aware floating elements with parallax effect */}
⋮----
{/* Interactive dots background effect */}
⋮----
{/* Section header */}
⋮----
{/* Interactive features grid */}
⋮----
{/* Expansion indicator */}
⋮----
{/* CTA Button */}</file><file path="components/sections/VSCharts.tsx">import React, { useState, useRef, ReactElement } from &quot;react&quot;;
import { Section } from &quot;../ui/section&quot;;
import {
    Select,
    SelectTrigger,
    SelectValue,
    SelectContent,
    SelectItem
} from &quot;../ui/select&quot;;
import { TrendingUp } from &quot;lucide-react&quot;;
import {
    ChartStyle,
    ChartTooltip,
} from &apos;../ui/chart&apos;;
⋮----
import { Area, AreaChart, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from &apos;recharts&apos;;
import { Pie, PieChart, Sector } from &apos;recharts&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
⋮----
// Define types for chart data
interface ChartDataPoint {
  month: string;
  engagement: number;
  conversion: number;
}
⋮----
// Define types for metrics data
interface MetricDataPoint {
  metric: string;
  value: number;
  fill: string;
}
⋮----
// Define the type for chart configuration
interface ChartConfigItem {
  label: string;
  color?: string;
}
⋮----
interface ChartConfig {
  [key: string]: ChartConfigItem;
}
⋮----
// Type for recharts tooltip payload item
interface TooltipPayloadItem {
  name?: string;
  value?: number | string;
  payload?: MetricDataPoint;
  dataKey?: string;
  color?: string;
}
⋮----
// Type for recharts tooltip props
interface CustomTooltipProps {
  active?: boolean;
  payload?: TooltipPayloadItem[];
  label?: string;
}
⋮----
// Chart data for student progress
⋮----
// Theme-aware chart colors for metrics
⋮----
// Success metrics data for pie chart
⋮----
// Get computed theme variables for animation
⋮----
// Animate charts on load with staggered timing using theme variables
⋮----
y: Math.abs(parseInt(distance)) * 4 // Use theme distance but make it positive and larger for initial state
⋮----
// Custom tooltip component
const CustomTooltip = (
⋮----
// Determine color class based on data key or use theme accent as fallback
⋮----
{/* Theme-aware floating elements for visual interest - hidden on smallest screens */}
⋮----
{/* Area Chart Card */}
⋮----
{/* Pie Chart Card */}
⋮----
{/* Case Studies Selector */}</file><file path="components/sections/VSPainPoints.tsx">import React, { useRef } from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import { gsap } from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
import IsometricGridBackground from &apos;../hero/IsometricPattern&apos;;
import { useDeviceDetection } from &apos;../../utils/animation-utils&apos;; // Import device detection
import { VSHeading, VSText } from &apos;../ui/vs-text&apos;; // Import theme text components
⋮----
// Register GSAP plugins (ensure it&apos;s done globally ideally, but safe here too)
⋮----
const { isMobile } = useDeviceDetection(); // Use the hook
⋮----
// Don&apos;t set everything visible by default - we want animations
⋮----
// Set initial state for animated elements
gsap.set(&quot;.pain-heading&quot;, { autoAlpha: 0, y: 30 }); // Increased y offset for more dramatic animation
gsap.set(&quot;.pain-desc&quot;, { autoAlpha: 0, y: 25 }); // Increased y offset
⋮----
// Set up path for animation
⋮----
strokeDashoffset: pathLength, // Start hidden
⋮----
// Path animation - made more prominent
⋮----
scrub: 0.3, // Reduced for smoother animation
⋮----
// Heading animations - more prominent
⋮----
duration: 0.9, // Longer duration
ease: &quot;power3.out&quot;, // Stronger easing
⋮----
start: &quot;top 90%&quot;, // Start animation sooner
⋮----
// Description animations with slight delay after headings
⋮----
duration: 0.8, // Longer duration
delay: 0.3, // Slightly longer delay
ease: &quot;power2.out&quot;, // Stronger easing
⋮----
ctx.revert(); // Proper cleanup
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
⋮----
strokeWidth=&quot;8&quot; // Increased from 6 to make more prominent</file><file path="components/sections/VSPricingQuizModal.tsx">import React, { useState } from &apos;react&apos;;
import { VSModal } from &apos;../ui/vs-modal&apos;;
import { Button } from &apos;../ui/button&apos;;
import { HelpCircle, XCircle } from &apos;lucide-react&apos;;
import { quizSteps } from &apos;../../data/pricing&apos;;
import { AnimatedButton } from &quot;../marble-buttons/AnimatedButton&quot;;
⋮----
interface PricingQuizProps {
  onComplete: (recommendedPlan: number) =&gt; void;
}
⋮----
const handleSelect = (value: string) =&gt;
⋮----
const handleNext = () =&gt;
⋮----
// Final step =&gt; calculate recommendation
⋮----
const handlePrevious = () =&gt;
⋮----
const handleOpen = () =&gt;
⋮----
const handleClose = () =&gt;
⋮----
// Reset for the next user session after animation completes
⋮----
const calculateRecommendation = () =&gt;
⋮----
// Default to Blueprint
⋮----
// Rule 1: If involvement is &quot;none&quot; OR speed is &quot;fast&quot; =&gt; Growth Engine
⋮----
recommendation = 2; // Viral Growth
⋮----
// Rule 2: beginner/started + hands-on + slow =&gt; Blueprint
⋮----
recommendation = 0; // Brand Blueprint
⋮----
// Rule 3: All else =&gt; Authority Automator
⋮----
recommendation = 1; // Authority Automator
⋮----
{/* Trigger Button */}
⋮----
{/* Enhanced VS Modal */}
⋮----
{/* Progress Indicator */}
⋮----
{/* Navigation Buttons */}
⋮----
{/* Escape instruction */}</file><file path="components/seo/CanonicalUrl.tsx">import React from &apos;react&apos;;
import { useLocation } from &apos;react-router-dom&apos;;
import { Helmet } from &apos;react-helmet-async&apos;;
⋮----
/**
 * Component that manages canonical URLs based on current route
 */
export function CanonicalUrl()</file><file path="components/seo/DynamicMeta.tsx">import React from &apos;react&apos;;
import { useLocation } from &apos;react-router-dom&apos;;
import { Helmet } from &apos;react-helmet-async&apos;;
⋮----
/**
 * Component that updates meta tags based on current route
 */
export function DynamicMeta()
⋮----
// Page-specific meta based on current route
⋮----
// Add route-specific meta for each page</file><file path="components/seo/SchemaScript.tsx">import React from &apos;react&apos;;
import { CourseJsonLd, OrganizationJsonLd, FAQPageJsonLd } from &apos;../../utils/schema/generators&apos;;
⋮----
/**
 * Component that injects schema.org JSON-LD into the document
 */</file><file path="components/ui/accordion-raised.tsx">import { PlusIcon } from &quot;@radix-ui/react-icons&quot;;
⋮----
import { cn } from &quot;../../lib/utils&quot;;
⋮----
function AccordionItem({
  className,
  ...props
}: React.ComponentProps&lt;typeof AccordionPrimitive.Item&gt;)
⋮----
function AccordionTrigger({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof AccordionPrimitive.Trigger&gt;)
⋮----
className=
⋮----
function AccordionContent({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof AccordionPrimitive.Content&gt;)</file><file path="components/ui/accordion.tsx">import { ChevronDownIcon } from &quot;@radix-ui/react-icons&quot;;
⋮----
import { cn } from &quot;../../lib/utils&quot;;
⋮----
function AccordionTrigger({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof AccordionPrimitive.Trigger&gt;)
⋮----
className=
⋮----
function AccordionContent({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof AccordionPrimitive.Content&gt;)</file><file path="components/ui/alert.tsx">import { cva, type VariantProps } from &quot;class-variance-authority&quot;
⋮----
import { cn } from &quot;../../lib/utils&quot;
⋮----
className=</file><file path="components/ui/avatar.tsx">import { cn } from &quot;../../lib/utils&quot;
⋮----
className=</file><file path="components/ui/badge.tsx">import { cva, type VariantProps } from &quot;class-variance-authority&quot;;
⋮----
import { cn } from &quot;../../lib/utils&quot;;
⋮----
export interface BadgeProps
  extends React.HTMLAttributes&lt;HTMLDivElement&gt;,
    VariantProps&lt;typeof badgeVariants&gt; {}
⋮----
className={cn(badgeVariants({ variant, size }), className)}
      {...props}
    /&gt;
  );</file><file path="components/ui/beam.tsx">import { cva, type VariantProps } from &quot;class-variance-authority&quot;;
import { cn } from &quot;../../lib/utils&quot;;
⋮----
export interface BeamProps
  extends React.HTMLAttributes&lt;HTMLDivElement&gt;,
    VariantProps&lt;typeof beamVariants&gt; {}</file><file path="components/ui/button.tsx">import { Slot } from &quot;@radix-ui/react-slot&quot;;
import { cva, type VariantProps } from &quot;class-variance-authority&quot;;
⋮----
import { cn } from &quot;../../lib/utils&quot;;
⋮----
export interface ButtonProps
  extends React.ButtonHTMLAttributes&lt;HTMLButtonElement&gt;,
    VariantProps&lt;typeof buttonVariants&gt; {
  asChild?: boolean;
}</file><file path="components/ui/card.tsx">import { cn } from &quot;../../lib/utils&quot;;</file><file path="components/ui/carousel.tsx">import useEmblaCarousel, {
  type UseEmblaCarouselType,
} from &quot;embla-carousel-react&quot;;
import { ArrowLeft, ArrowRight } from &quot;lucide-react&quot;;
⋮----
import { cn } from &quot;../../lib/utils&quot;;
import { Button } from &quot;./button&quot;;
⋮----
type CarouselApi = UseEmblaCarouselType[1];
type UseCarouselParameters = Parameters&lt;typeof useEmblaCarousel&gt;;
type CarouselOptions = UseCarouselParameters[0];
type CarouselPlugin = UseCarouselParameters[1];
⋮----
type CarouselProps = {
  opts?: CarouselOptions;
  plugins?: CarouselPlugin;
  orientation?: &quot;horizontal&quot; | &quot;vertical&quot;;
  setApi?: (api: CarouselApi) =&gt; void;
} &amp; React.HTMLAttributes&lt;HTMLDivElement&gt;;
⋮----
type CarouselContextProps = {
  carouselRef: ReturnType&lt;typeof useEmblaCarousel&gt;[0];
  api: ReturnType&lt;typeof useEmblaCarousel&gt;[1];
  scrollPrev: () =&gt; void;
  scrollNext: () =&gt; void;
  canScrollPrev: boolean;
  canScrollNext: boolean;
} &amp; CarouselProps;
⋮----
function useCarousel()</file><file path="components/ui/chart.tsx">import { cn } from &quot;@/lib/utils&quot;
⋮----
// Format: { THEME_NAME: CSS_SELECTOR }
⋮----
export type ChartConfig = {
  [k in string]: {
    label?: React.ReactNode
    icon?: React.ComponentType
  } &amp; (
    | { color?: string; theme?: never }
    | { color?: never; theme: Record&lt;keyof typeof THEMES, string&gt; }
  )
}
⋮----
type ChartContextProps = {
  config: ChartConfig
}
⋮----
function useChart()
⋮----
function ChartContainer({
  id,
  className,
  children,
  config,
  ...props
}: React.ComponentProps&lt;&quot;div&quot;&gt; &amp; {
  config: ChartConfig
  children: React.ComponentProps&lt;
    typeof RechartsPrimitive.ResponsiveContainer
  &gt;[&quot;children&quot;]
})
⋮----
className=
⋮----
&lt;div className=
⋮----
// Helper to extract item config from a payload.</file><file path="components/ui/checkbox.tsx">import { CheckIcon } from &quot;lucide-react&quot;
⋮----
import { cn } from &quot;../../lib/utils&quot;
⋮----
function Checkbox({
  className,
  ...props
}: React.ComponentProps&lt;typeof CheckboxPrimitive.Root&gt;)
⋮----
className=</file><file path="components/ui/dialog.tsx">import { XIcon } from &quot;lucide-react&quot;
⋮----
import { cn } from &quot;../../lib/utils&quot;
⋮----
function Dialog({
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Root&gt;)
⋮----
function DialogTrigger({
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Trigger&gt;)
⋮----
function DialogPortal({
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Portal&gt;)
⋮----
function DialogClose({
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Close&gt;)
⋮----
function DialogContent({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof DialogPrimitive.Content&gt;)
⋮----
className=
⋮----
{/* Floating elements using helper classes */}</file><file path="components/ui/dropdown-menu.tsx">import {
  CheckIcon,
  ChevronRightIcon,
  DotFilledIcon,
} from &quot;@radix-ui/react-icons&quot;;
⋮----
import { cn } from &quot;../../lib/utils&quot;;
⋮----
function DropdownMenuSubTrigger({
  className,
  inset,
  children,
  ...props
}: React.ComponentProps&lt;typeof DropdownMenuPrimitive.SubTrigger&gt; &amp; {
  inset?: boolean;
})
⋮----
className=</file><file path="components/ui/footer.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
className={cn(
        &quot;border-theme-border-light mt-8 flex flex-col items-center justify-between gap-4 border-t pt-4 text-xs text-theme-secondary/70 sm:flex-row transition-colors duration-[var(--theme-transition-normal)]&quot;,
        className,
      )}
      {...props}
    /&gt;
  );</file><file path="components/ui/form.tsx">import { Slot } from &quot;@radix-ui/react-slot&quot;
import {
  Controller,
  FormProvider,
  useFormContext,
  useFormState,
  type ControllerProps,
  type FieldPath,
  type FieldValues,
} from &quot;react-hook-form&quot;
⋮----
import { cn } from &quot;../../lib/utils&quot;
import { Label } from &quot;./label&quot;
⋮----
type FormFieldContextValue&lt;
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath&lt;TFieldValues&gt; = FieldPath&lt;TFieldValues&gt;,
&gt; = {
  name: TName
}
⋮----
const FormField = &lt;
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath&lt;TFieldValues&gt; = FieldPath&lt;TFieldValues&gt;,
&gt;({
  ...props
}: ControllerProps&lt;TFieldValues, TName&gt;) =&gt;
⋮----
const useFormField = () =&gt;
⋮----
type FormItemContextValue = {
  id: string
}
⋮----
function FormItem(
⋮----
className=
⋮----
function FormLabel({
  className,
  ...props
}: React.ComponentProps&lt;typeof LabelPrimitive.Root&gt;)
⋮----
function FormControl(
⋮----
function FormMessage(</file><file path="components/ui/glow.tsx">import React from &quot;react&quot;;
import { cn } from &quot;../../lib/utils&quot;;
import { cva, VariantProps } from &quot;class-variance-authority&quot;;
⋮----
className=</file><file path="components/ui/image.tsx">import React from &apos;react&apos;;
import { cn } from &quot;../../lib/utils&quot;;
⋮----
interface ImageProps extends React.ImgHTMLAttributes&lt;HTMLImageElement&gt; {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  className?: string;
  fill?: boolean;
  priority?: boolean;
  quality?: number;
  sizes?: string;
  loading?: &apos;lazy&apos; | &apos;eager&apos;;
}
⋮----
/**
 * Custom Image component that works as a drop-in replacement for Next.js Image
 * For Vite projects that don&apos;t use Next.js Image optimization
 */
const Image: React.FC&lt;ImageProps&gt; = ({ 
  src, 
  alt,
  width,
  height,
  className,
  fill,
  priority,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  quality,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  sizes,
  loading = priority ? &apos;eager&apos; : &apos;lazy&apos;,
  ...props 
}) =&gt;
⋮----
// eslint-disable-next-line @typescript-eslint/no-unused-vars
⋮----
// eslint-disable-next-line @typescript-eslint/no-unused-vars
⋮----
className=</file><file path="components/ui/input.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
export interface InputProps
  extends React.InputHTMLAttributes&lt;HTMLInputElement&gt; {}
⋮----
function Input(
⋮----
className=</file><file path="components/ui/item.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
className={cn(&quot;flex items-center self-start&quot;, className)}
      {...props}
    /&gt;
  );</file><file path="components/ui/label.tsx">import { cn } from &quot;../../lib/utils&quot;
⋮----
className=</file><file path="components/ui/lead-capture-form.tsx">import React, { useState } from &apos;react&apos;;
import { Button } from &apos;./button&apos;;
import { Input } from &apos;./input&apos;;
import { Label } from &apos;./label&apos;;
import { Checkbox } from &apos;./checkbox&apos;;
import { Alert, AlertDescription } from &apos;./alert&apos;;
⋮----
interface LeadCaptureFormProps {
  onSubmit?: (data: LeadFormData) =&gt; void;
  className?: string;
}
⋮----
interface LeadFormData {
  name: string;
  email: string;
  phone?: string;
  interests: string[];
  consent: boolean;
}
⋮----
const handleChange = (e: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt;
⋮----
// Clear error when user types
⋮----
const handleInterestChange = (id: string) =&gt;
⋮----
// Clear interests error if any are selected
⋮----
const handleConsentChange = (checked: boolean) =&gt;
⋮----
const validateForm = (): boolean =&gt;
⋮----
const handleSubmit = async (e: React.FormEvent) =&gt;
⋮----
// Here you would typically send the data to your API
// For now, we&apos;ll just simulate a successful submission
⋮----
// Reset form after successful submission</file><file path="components/ui/link.tsx">import React from &apos;react&apos;;
import { cn } from &quot;../../lib/utils&quot;;
⋮----
interface LinkProps extends React.AnchorHTMLAttributes&lt;HTMLAnchorElement&gt; {
  href: string;
  className?: string;
  children: React.ReactNode;
  variant?: &apos;default&apos; | &apos;primary&apos; | &apos;secondary&apos; | &apos;subtle&apos; | &apos;muted&apos;;
}
⋮----
/**
 * Custom Link component that works as a drop-in replacement for Next.js Link
 * For Vite projects that don&apos;t use Next.js routing
 */
⋮----
// Handle both internal and external links
⋮----
// Theme-aware styles based on variant
⋮----
className=</file><file path="components/ui/logo.tsx">import React from &quot;react&quot;;
import { cn } from &quot;../../lib/utils&quot;;
import { Badge } from &quot;./badge&quot;;
⋮----
export interface LogoProps extends React.HTMLAttributes&lt;HTMLDivElement&gt; {
  image: React.ComponentType&lt;React.SVGProps&lt;SVGSVGElement&gt;&gt;;
  name: string;
  version?: string;
  width?: number;
  height?: number;
  showName?: boolean;
  badge?: string;
}
⋮----
className=</file><file path="components/ui/marquee.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
interface MarqueeProps {
  className?: string;
  reverse?: boolean;
  pauseOnHover?: boolean;
  children?: React.ReactNode;
  vertical?: boolean;
  repeat?: number;
  [key: string]: any;
}
⋮----
import React from &apos;react&apos;;
⋮----
// Define animation styles
⋮----
// Add any explicit CSS for animations
⋮----
// Check if the animation styles already exist
⋮----
className=
⋮----
className={cn(
          &quot;flex gap-0 shrink-0 -mx-4&quot;,
          { &quot;marquee-hover-pause&quot;: pauseOnHover }
        )}
        style={marqueeAnimationStyle}
        aria-hidden=&quot;true&quot;
      &gt;
        {children}
      &lt;/div&gt;
    &lt;/div&gt;
  );</file><file path="components/ui/mockup.tsx">import React from &quot;react&quot;;
import { cn } from &quot;../../lib/utils&quot;;
import { cva, type VariantProps } from &quot;class-variance-authority&quot;;
⋮----
export interface MockupProps
  extends React.HTMLAttributes&lt;HTMLDivElement&gt;,
    VariantProps&lt;typeof mockupVariants&gt; {}</file><file path="components/ui/mode-toggle.tsx">import { useState, useEffect } from &quot;react&quot;;
import { useTheme } from &quot;./theme-provider&quot;;
import { Button } from &quot;./button&quot;;
⋮----
export function ModeToggle()
⋮----
const toggleTheme = () =&gt;</file><file path="components/ui/navbar.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
className={cn(&quot;flex items-center justify-center gap-4&quot;, className)}
      {...props}
    /&gt;
  );</file><file path="components/ui/navigation-menu.tsx">import { ChevronDownIcon } from &quot;@radix-ui/react-icons&quot;;
⋮----
import { cva } from &quot;class-variance-authority&quot;;
⋮----
import { cn } from &quot;../../lib/utils&quot;;
⋮----
function NavigationMenu({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Root&gt;)
⋮----
className=
⋮----
function NavigationMenuIndicator({
  className,
  ...props
}: React.ComponentProps&lt;typeof NavigationMenuPrimitive.Indicator&gt;)</file><file path="components/ui/navigation.tsx">import { Link } from &quot;./link&quot;;
⋮----
import { cn } from &quot;../../lib/utils&quot;;
import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
  navigationMenuTriggerStyle,
} from &quot;./navigation-menu&quot;;
import LaunchUI from &quot;../logos/launch-ui&quot;;
⋮----
&lt;NavigationMenuLink asChild className=
⋮----
className=</file><file path="components/ui/radio-group.tsx">import { CircleIcon } from &quot;lucide-react&quot;
⋮----
import { cn } from &quot;../../lib/utils&quot;
⋮----
function RadioGroupItem({
  className,
  ...props
}: React.ComponentProps&lt;typeof RadioGroupPrimitive.Item&gt;)
⋮----
className=</file><file path="components/ui/section.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
function Section(
⋮----
className=
⋮----
{/* Theme-aware floating element for visual interest */}</file><file path="components/ui/select.tsx">import { CheckIcon, ChevronDownIcon, ChevronUpIcon } from &quot;lucide-react&quot;
⋮----
import { cn } from &quot;../../lib/utils&quot;
⋮----
function Select({
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Root&gt;)
⋮----
function SelectGroup({
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Group&gt;)
⋮----
function SelectValue({
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Value&gt;)
⋮----
function SelectTrigger({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Trigger&gt;)
⋮----
className=
⋮----
function SelectItem({
  className,
  children,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.Item&gt;)
⋮----
function SelectScrollUpButton({
  className,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.ScrollUpButton&gt;)
⋮----
function SelectScrollDownButton({
  className,
  ...props
}: React.ComponentProps&lt;typeof SelectPrimitive.ScrollDownButton&gt;)</file><file path="components/ui/sheet.tsx">import { XIcon } from &quot;lucide-react&quot;
⋮----
import { cn } from &quot;../../lib/utils&quot;
⋮----
function Sheet(
⋮----
function SheetTrigger({
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Trigger&gt;)
⋮----
function SheetClose({
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Close&gt;)
⋮----
function SheetPortal({
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Portal&gt;)
⋮----
function SheetContent({
  className,
  children,
  side = &quot;right&quot;,
  ...props
}: React.ComponentProps&lt;typeof SheetPrimitive.Content&gt; &amp; {
  side?: &quot;top&quot; | &quot;right&quot; | &quot;bottom&quot; | &quot;left&quot;
})
⋮----
className=
⋮----
{/* Theme-aware floating element for visual interest */}</file><file path="components/ui/slide.tsx">import { cn } from &quot;../../lib/utils&quot;;
import { Plus, ArrowUpRight } from &quot;lucide-react&quot;;
⋮----
// eslint-disable-next-line @typescript-eslint/no-unused-vars</file><file path="components/ui/social-proof-item.tsx">import { Avatar, AvatarFallback, AvatarImage } from &quot;./avatar&quot;;
import { cn } from &quot;../../lib/utils&quot;;
import { Link } from &quot;./link&quot;;
⋮----
export interface SocialProofItemProps {
  name: string;
  username: string;
  text: React.ReactNode;
  className?: string;
  url?: string;
  image?: string;
}
⋮----
className=</file><file path="components/ui/social-stats.tsx">import { Avatar, AvatarFallback, AvatarImage } from &quot;./avatar&quot;;
import { StarIcon, Terminal } from &quot;lucide-react&quot;;
import React from &quot;react&quot;;
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from &quot;./tooltip&quot;;
import Figma from &quot;../logos/figma&quot;;
import Github from &quot;../logos/github&quot;;
⋮----
export function SocialStats()</file><file path="components/ui/switch.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
className=</file><file path="components/ui/tabs.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
className={cn(
        &quot;border-theme-border bg-theme-gradient-card ring-offset-theme-bg-primary focus-visible:ring-theme-primary relative overflow-hidden rounded-lg border shadow-theme-md transition-all duration-[var(--theme-transition-normal)] focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:outline-hidden&quot;,
        className,
      )}
      {...props}
    /&gt;
  );</file><file path="components/ui/TeamPhotoDecoration.tsx">import React, { useEffect } from &apos;react&apos;;
import { getTeamImageCollection } from &apos;../../utils/imageMap&apos;;
import gsap from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
⋮----
// Register ScrollTrigger
⋮----
interface TeamPhotoDecorationProps {
  memberName?: &apos;Joden&apos; | &apos;Alex&apos; | &apos;Tia&apos; | &apos;Aydan&apos; | &apos;random&apos;;
  count?: number;
  position?: &apos;top-left&apos; | &apos;top-right&apos; | &apos;bottom-left&apos; | &apos;bottom-right&apos; | &apos;random&apos;;
  parentSelector?: string;
  maxWidth?: number;
  opacity?: number;
}
⋮----
/**
 * Team Photo Decoration Component
 * 
 * A utility component that adds team photos as decorative elements to sections
 * with subtle parallax effects.
 */
⋮----
maxWidth = 280, // Much larger default size (was 140)
opacity = 0.85, // Higher default opacity (was 0.6)
⋮----
// Get images from all team members if random, or specific member
⋮----
// Get images with a low limit to keep it subtle
⋮----
// Select a subset of the returned images
⋮----
// Position based on prop or random
const getPosition = (index: number) =&gt;
⋮----
// Calculate position values based on location
// More distance from text and content, with more spacing between images
const getPositionStyles = (positionType: string, index: number) =&gt;
⋮----
// More padding from edges to keep images away from text
⋮----
top: `${8 + (index * 4)}%`,  // More spacing between images
left: `${8 + (index * 5)}%`, // Further from left edge
⋮----
top: `${8 + (index * 4)}%`,  // More spacing between images
⋮----
right: `${10 + (index * 5)}%`, // Further from right edge
⋮----
bottom: `${12 + (index * 4)}%`, // Further from bottom edge
left: `${8 + (index * 5)}%`,    // Further from left edge
⋮----
bottom: `${12 + (index * 4)}%`, // Further from bottom edge
⋮----
right: `${10 + (index * 5)}%`,  // Further from right edge
⋮----
// Add parallax effects to the decoration images
⋮----
// Set up context for animations
⋮----
// Get parent element for trigger
⋮----
// Find all decoration images
⋮----
// Create a timeline for the animations
⋮----
// Add each image to the timeline - more subtle movements
⋮----
// More subtle movement
const yPercent = ((index % 3) - 1) * 5; // Reduced vertical movement (was 10)
const xPercent = ((index % 2) * 2 - 1) * 3; // Reduced horizontal movement (was 5)
⋮----
rotate: (index % 2 === 0 ? 0.8 : -0.8), // Much less rotation (was 2/-2)
⋮----
// Don&apos;t render anything if no images
⋮----
// Calculate max width based on image and index
⋮----
borderRadius: &apos;8px&apos;, // Much more subtle rounded corners (was 45%)
transform: `rotate(${index % 2 === 0 ? 1 : -1}deg)`, // Less rotation (was 5/-5)
boxShadow: &apos;0 3px 10px rgba(0, 0, 0, 0.08)&apos;, // More subtle shadow
⋮----
className=&quot;w-full object-contain&quot; // object-contain to preserve aspect ratio
style={{ maxHeight: `${width * 1.5}px` }} // Allow more height for proper aspect ratio</file><file path="components/ui/testimonial-carousel.tsx">import React, { useState, useEffect, useRef, useCallback, TouchEvent } from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import { gsap } from &apos;gsap&apos;;
import { VSBackground, VSCard } from &apos;./vs-background&apos;; // Use theme-aware components
import { VSText, VSHeading } from &apos;./vs-text&apos;;
import { useDeviceDetection } from &apos;../../utils/animation-utils&apos;; // Import device detection
⋮----
interface Testimonial {
  quote: string;
  name: string;
  role: string;
  image: string;
}
⋮----
interface TestimonialCarouselProps {
  testimonials: Testimonial[];
}
⋮----
const { isMobile } = useDeviceDetection(); // Use hook
const timeoutRef = useRef&lt;NodeJS.Timeout | null&gt;(null); // For auto-play
const touchStartX = useRef&lt;number | null&gt;(null); // For swipe detection
const touchEndX = useRef&lt;number | null&gt;(null); // For swipe detection
⋮----
// Function to go to next slide
⋮----
// Function to go to previous slide
⋮----
// Auto-play functionality
⋮----
const startAutoPlay = () =&gt;
⋮----
// Reset timeout if it exists
⋮----
// Set new timeout only on desktop
⋮----
timeoutRef.current = setTimeout(goToNext, 5000); // Change slide every 5 seconds
⋮----
// Cleanup timeout on unmount or when dependencies change
⋮----
}, [activeIndex, testimonials.length, goToNext, isMobile]); // Add isMobile dependency
⋮----
// GSAP Animation for slide transitions
⋮----
// Hide all slides initially
⋮----
// Animate the active slide
⋮----
// Simple fade transition for mobile (as per plan)
⋮----
{ opacity: 0, y: 10 }, // Start slightly lower
⋮----
duration: 0.6, // Slightly faster
⋮----
position: &apos;relative&apos;, // Make active slide relative to take space
⋮----
// Desktop animation (example: fade and slight scale)
⋮----
}, [activeIndex, isMobile]); // Add isMobile dependency
⋮----
// --- Swipe Handling ---
const handleTouchStart = (e: TouchEvent&lt;HTMLDivElement&gt;) =&gt;
⋮----
touchEndX.current = null; // Reset end position on new touch
// Clear auto-play timeout on touch interaction (optional, good practice)
⋮----
const handleTouchMove = (e: TouchEvent&lt;HTMLDivElement&gt;) =&gt;
⋮----
const handleTouchEnd = () =&gt;
⋮----
const threshold = 50; // Minimum swipe distance
⋮----
// Swipe Left - Go to Next
⋮----
// Swipe Right - Go to Prev
⋮----
// Reset touch positions
⋮----
// Restart auto-play after interaction (optional)
// startAutoPlay(); // You might want to call the effect&apos;s start function here
⋮----
// --- End Swipe Handling ---
⋮----
{/* Apply conditional padding and adjusted mobile height */}
⋮----
className={`relative ${isMobile ? &apos;px-4&apos; : &apos;px-12&apos;} max-w-4xl mx-auto overflow-hidden ${isMobile ? &apos;h-80&apos; : &apos;h-64&apos;}`} // Adjusted height for mobile
onTouchStart={isMobile ? handleTouchStart : undefined} // Add touch handlers only on mobile
⋮----
{/* Carousel slides container - position relative */}
⋮----
className={`testimonial-slide absolute inset-0 w-full h-full`} // Removed transition/opacity classes, handled by GSAP
⋮----
{/* Use VSCard for consistent styling */}
&lt;VSCard className={`flex flex-col justify-center text-left w-full h-full ${isMobile ? &apos;p-6&apos; : &apos;p-8&apos;} shadow-theme-lg`}&gt; {/* Adjusted padding */}
⋮----
{/* Mobile-optimized controls */}
{/* Apply conditional margin-top */}
⋮----
onClick={() =&gt; setActiveIndex(index)} // Go to specific slide on click
// Apply conditional size</file><file path="components/ui/textarea.tsx">import { cn } from &quot;../../lib/utils&quot;
⋮----
className=</file><file path="components/ui/theme-index.ts">// Export all theme-related components from a single file
// This makes it easy to import them in other parts of the application
⋮----
// Type definitions
⋮----
/**
 * VS Theme System
 * 
 * This file exports all the components needed for the VS Theme System:
 * 
 * Core Components:
 * - ThemeProvider: The context provider that manages theme state
 * - useTheme: Hook to access theme state and functions
 * - ThemeToggle: UI component for switching themes
 * 
 * Utilities:
 * - WithTheme: HOC for wrapping isolated components with ThemeProvider
 * - ThemeWrapper: Component for wrapping isolated sections with ThemeProvider
 * - ThemeScript: Script to prevent flash of wrong theme on page load
 * - VSThemeWrapper: Component for applying theme-specific classes
 * - VSThemedElement: Simplified component for theme-aware elements
 * 
 * Usage:
 * 
 * 1. Wrap your app with ThemeProvider:
 *    &lt;ThemeProvider&gt;
 *      &lt;App /&gt;
 *    &lt;/ThemeProvider&gt;
 * 
 * 2. Use the useTheme hook to access theme state:
 *    const { theme, setTheme, resolvedTheme } = useTheme();
 * 
 * 3. Add ThemeToggle component for user control:
 *    &lt;ThemeToggle /&gt;
 * 
 * 4. For isolated components, use WithTheme HOC:
 *    export default WithTheme(MyIsolatedComponent);
 * 
 * 5. For themed elements, use VSThemeWrapper:
 *    &lt;VSThemeWrapper 
 *      lightClassName=&quot;bg-[var(--theme-bg-primary)]&quot; 
 *      darkClassName=&quot;bg-[var(--theme-bg-primary)]&quot;
 *    &gt;
 *      &lt;div&gt;Content&lt;/div&gt;
 *    &lt;/VSThemeWrapper&gt;
 */</file><file path="components/ui/theme-provider.tsx">import React, { createContext, useContext, useEffect, useState } from &apos;react&apos;;
⋮----
export type Theme = &apos;light&apos; | &apos;dark&apos; | &apos;system&apos;;
⋮----
interface ThemeProviderProps {
  children: React.ReactNode;
  defaultTheme?: Theme;
  storageKey?: string;
}
⋮----
interface ThemeProviderState {
  theme: Theme;
  setTheme: (theme: Theme) =&gt; void;
  resolvedTheme: &apos;light&apos; | &apos;dark&apos;; // Always resolved to light/dark (for CSS needs)
}
⋮----
resolvedTheme: &apos;light&apos; | &apos;dark&apos;; // Always resolved to light/dark (for CSS needs)
⋮----
export function ThemeProvider({
  children,
  defaultTheme = &apos;system&apos;,
  storageKey = &apos;clash-theme&apos;,
  ...props
}: ThemeProviderProps)
⋮----
// Get the initial theme from localStorage or default
⋮----
// Separate state to track the resolved theme (always &apos;light&apos; or &apos;dark&apos;)
⋮----
// Effect to handle theme changes
⋮----
// Remove theme classes
⋮----
// Determine the actual theme based on system preference if needed
⋮----
// Update the resolved theme state
⋮----
// Apply the theme class (this is for the old JavaScript method)
⋮----
// IMPORTANT: Also set the data-theme attribute for CSS variables (this is for the CSS selectors)
⋮----
// Dispatch an event for other parts of the app
⋮----
// Effect to listen for system preference changes
⋮----
// Handler for system color scheme changes
const handleChange = () =&gt;
⋮----
// IMPORTANT: Also update the data-theme attribute
⋮----
// Listen for changes
⋮----
// Cleanup
⋮----
// Set theme function with localStorage persistence
const setTheme = (newTheme: Theme) =&gt;
⋮----
// Context value
⋮----
// Hook for accessing theme context
// eslint-disable-next-line react-refresh/only-export-components
export const useTheme = (): ThemeProviderState =&gt;</file><file path="components/ui/theme-toggle.tsx">import React from &quot;react&quot;;
import { Sun, Moon, Laptop } from &quot;lucide-react&quot;;
import { useTheme } from &quot;./theme-provider&quot;;
⋮----
// Always toggle between light/dark mode while preserving system preference
⋮----
// If currently using system preference, check resolved theme and switch to opposite
⋮----
// If manually set to dark, switch to light
⋮----
// If manually set to light, switch to dark
⋮----
{/* Show different icons based on active theme */}</file><file path="components/ui/ThemeController.tsx">import React, { useEffect, useState } from &quot;react&quot;;
import { Sun, Moon } from &quot;lucide-react&quot;;
⋮----
/**
 * A simplified theme controller that works directly with the HTML element
 * 
 * This is now updated to support system preference and work with the main ThemeProvider
 * @deprecated - Use ThemeToggle instead - this component is kept for backward compatibility
 */
⋮----
// Track both theme preference and actual dark/light state
⋮----
// On mount, check for system preference or stored preference
⋮----
// Check stored preference first
⋮----
// If it&apos;s system, check system preference
⋮----
// No preference stored, default to system
⋮----
// Add listener for system preference changes
⋮----
const handleChange = () =&gt;
⋮----
const toggleTheme = () =&gt;
⋮----
// If using system preference, switch to appropriate manual setting
⋮----
// If using manual setting, toggle between dark and light</file><file path="components/ui/ThemeScript.tsx">import React from &apos;react&apos;;
⋮----
/**
 * Theme initialization script component to be included in the HTML head
 * This ensures theme is set before the page renders to prevent flash of wrong theme
 */
export function ThemeScript()</file><file path="components/ui/tile.tsx">import { cn } from &quot;../../lib/utils&quot;;
import { ArrowUpRight } from &quot;lucide-react&quot;;
⋮----
function Tile(
⋮----
className=
⋮----
{/* Theme-aware floating element for visual interest */}
⋮----
function TileLink(</file><file path="components/ui/tooltip.tsx">import { cn } from &quot;../../lib/utils&quot;;
⋮----
const Tooltip = ({
  delayDuration = 0,
  ...props
}: React.ComponentPropsWithoutRef&lt;typeof TooltipPrimitive.Root&gt;) =&gt; (
  &lt;TooltipPrimitive.Root delayDuration={delayDuration} {...props} /&gt;
);
⋮----
className={cn(
        &quot;border-theme-border bg-theme-gradient-card text-theme-primary animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 overflow-hidden rounded-md border px-3 py-1.5 text-sm shadow-theme-sm transition-all duration-[var(--theme-transition-normal)]&quot;,
        className,
      )}
      {...props}
    /&gt;
  );</file><file path="components/ui/video-embed.tsx">// VideoEmbed.tsx
import { useRef, useEffect } from &apos;react&apos;;
import { gsap } from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
import { useGSAP } from &apos;@gsap/react&apos;;
⋮----
// Register the ScrollTrigger plugin
⋮----
interface VideoEmbedProps {
  videoUrl?: string;
  priority?: boolean;
}
⋮----
const VideoEmbed = ({ 
  videoUrl = &quot;https://www.youtube.com/embed/your-video-id&quot;,
  priority = false
}: VideoEmbedProps) =&gt;
⋮----
// Use useGSAP for proper animation cleanup - only used for the section animation
// The &quot;peek&quot; effect is controlled by the parent component
⋮----
// Create a context for proper cleanup
⋮----
// Only set initial scale and opacity - don&apos;t set Y position as it will conflict with the peek effect
⋮----
// Create animation timeline with VS Bubbly animation style
⋮----
start: &quot;top 70%&quot;, // Trigger when top of section hits 70% down viewport
⋮----
// Don&apos;t animate position here, only opacity and scale
⋮----
// Animate in with VS Bubbly style - only handling scale and opacity
⋮----
ease: &quot;back.out(1.2)&quot; // More springy easing for VS Bubbly style
⋮----
}, sectionRef); // Scope to section ref
⋮----
// useGSAP automatically handles cleanup
⋮----
{/* Theme-aware floating elements - left side */}
⋮----
{/* Theme-aware floating elements - right side */}
⋮----
{/* Add subtle background patterns with theme-aware opacity */}
⋮----
{/* Video container with curved border radius using CSS variables for consistent styling */}
⋮----
{/* Video aspect ratio container */}
⋮----
{/* Video title overlay with theme-aware styling */}
⋮----
{/* Optional title element overlay with theme-aware styling */}</file><file path="components/ui/vs-background.tsx">import React, { forwardRef, ElementType, HTMLAttributes, useEffect, useState } from &apos;react&apos;;
⋮----
// Define the props for VSBackground component
export interface VSBackgroundProps {
  as?: ElementType; // Allow changing the root element type (e.g., div, section, footer)
  children?: React.ReactNode;
  className?: string;
  // background prop is illustrative; specific background classes should be passed via className
  // background?: string; 
}
⋮----
as?: ElementType; // Allow changing the root element type (e.g., div, section, footer)
⋮----
// background prop is illustrative; specific background classes should be passed via className
// background?: string;
⋮----
/**
 * VS Background Component - Implements theme-aware styling for background elements
 * 
 * Uses single theme-aware variables instead of competing light/dark variants
 * 
 * @example
 * &lt;VSBackground&gt;Content with proper background&lt;/VSBackground&gt;
 * &lt;VSBackground background=&quot;bg-theme-secondary&quot;&gt;Card with theme-aware bg&lt;/VSBackground&gt;
 */
⋮----
/**
 * VS Section Component - Creates a full section with theme-aware background styling
 * Now with responsive padding for mobile optimization
 */
⋮----
const checkIfMobile = () =&gt;
⋮----
/**
 * VS Card Component - Theme-aware card with consistent styling across light/dark modes
 */
⋮----
// Note: Typically only the base component or all components would be exported as default.
// Exporting individual components is more common.
// export default VSBackground; // Consider removing if not needed</file><file path="components/ui/vs-button.tsx">import React from &apos;react&apos;;
⋮----
interface VSButtonProps {
  children: React.ReactNode;
  variant?: &apos;primary&apos; | &apos;secondary&apos; | &apos;outline&apos; | &apos;ghost&apos; | &apos;vibrant&apos;;
  size?: &apos;sm&apos; | &apos;md&apos; | &apos;lg&apos; | &apos;xl&apos;;
  className?: string;
  onClick?: () =&gt; void;
}
⋮----
/**
 * VS Button Component - Properly styled button with correct dark mode implementation
 * 
 * Uses the required background and text styling patterns for dark mode
 * 
 * @example
 * &lt;VSButton&gt;Default Button&lt;/VSButton&gt;
 * &lt;VSButton variant=&quot;vibrant&quot; size=&quot;lg&quot;&gt;Large Vibrant Button&lt;/VSButton&gt;
 */
export function VSButton({
  children,
  variant = &apos;primary&apos;,
  size = &apos;md&apos;,
  className = &apos;&apos;,
  onClick,
  ...props
}: VSButtonProps &amp; Omit&lt;React.ButtonHTMLAttributes&lt;HTMLButtonElement&gt;, &apos;className&apos;&gt;)
⋮----
// Size classes
⋮----
// Base button classes that apply to all variants
⋮----
// Variant-specific classes with theme-aware styling
⋮----
// Text color handling for outline and ghost variants that need specific text colors
const getTextColor = () =&gt;
⋮----
return {}; // Return empty object - we&apos;ll use Tailwind classes instead
⋮----
return {}; // Return empty object - we&apos;ll use Tailwind classes instead
⋮----
return {}; // No inline style needed for variants with text-white
⋮----
// Text color classes for variants that need them
const getTextColorClass = () =&gt;
⋮----
return &apos;&apos;; // No text color class needed for variants with text-white
⋮----
/**
 * VS Icon Button - Button with icon and text, properly styled for dark mode
 */
export function VSIconButton({
  children,
  icon,
  iconPosition = &apos;left&apos;,
  ...props
}: VSButtonProps &amp; { 
  icon: React.ReactNode;
  iconPosition?: &apos;left&apos; | &apos;right&apos;;
})</file><file path="components/ui/vs-components.tsx">// VS Components - Helper components that correctly implement light/dark mode styling
⋮----
// Export text components
⋮----
// Export background components
⋮----
// Export button components
⋮----
// Usage guide for developers:
/**
 * These helper components implement the VS styling guide requirements
 * for correct dark mode implementation.
 * 
 * EXAMPLES:
 * 
 * // Text - using inline styles for CSS variables and dark: classes for dark mode
 * &lt;VSText&gt;Regular text with navy color&lt;/VSText&gt;
 * &lt;VSText color=&quot;--primary-orange)&quot;&gt;Orange colored text&lt;/VSText&gt;
 * &lt;VSHeading variant=&quot;h2&quot;&gt;Properly styled heading&lt;/VSHeading&gt;
 * &lt;VSGradientText&gt;Gradient text with dark mode support&lt;/VSGradientText&gt;
 * 
 * // Backgrounds - using className for CSS variables and dark: variants
 * &lt;VSBackground&gt;Content with standard background&lt;/VSBackground&gt;
 * &lt;VSCard&gt;Card with proper styling in both modes&lt;/VSCard&gt;
 * &lt;VSSection&gt;Section with all the correct styling patterns&lt;/VSSection&gt;
 * 
 * // Buttons - implementing all the VS Bubbly animations
 * &lt;VSButton&gt;Default primary button&lt;/VSButton&gt;
 * &lt;VSButton variant=&quot;vibrant&quot; size=&quot;lg&quot;&gt;Large vibrant button&lt;/VSButton&gt;
 * &lt;VSIconButton icon={&lt;Icon /&gt;}&gt;Button with icon&lt;/VSIconButton&gt;
 */</file><file path="components/ui/vs-modal.tsx">import React, { useEffect, useRef } from &apos;react&apos;;
import ReactDOM from &apos;react-dom&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { XCircle } from &apos;lucide-react&apos;;
⋮----
interface VSModalProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  title?: string;
  description?: string;
  children: React.ReactNode;
  width?: &apos;sm&apos; | &apos;md&apos; | &apos;lg&apos; | &apos;xl&apos; | &apos;full&apos;;
  showCloseButton?: boolean;
  closeOnOverlayClick?: boolean;
  closeOnEsc?: boolean;
}
⋮----
/**
 * VSModal - Base modal component following VS styling guidelines
 * 
 * Features:
 * - Light/dark mode aware styling
 * - Animated entrance/exit using GSAP
 * - Floating elements for visual interest
 * - Proper gradient backgrounds
 * - Close on ESC key press and overlay click (configurable)
 */
⋮----
// Width classes mapping
⋮----
// Handle animation with GSAP
⋮----
// Get computed theme variables for animation
⋮----
// Animate overlay
⋮----
// Animate modal - simplified animation that works better with scrolling
⋮----
// Floating elements animation
⋮----
// Handle modal close animation
const handleClose = () =&gt;
⋮----
// Animate overlay
⋮----
// Animate modal - simpler animation for closing that works better
⋮----
// Close on ESC key
⋮----
const handleEscKey = (event: KeyboardEvent) =&gt;
⋮----
// Modal JSX content
⋮----
{/* Backdrop/Overlay */}
⋮----
{/* Modal Container - positioned in viewport */}
⋮----
onClick=
⋮----
{/* Floating elements for visual interest */}
⋮----
{/* Modal Content */}
⋮----
{/* Header */}
⋮----
{/* Body */}</file><file path="components/ui/vs-text.tsx">import React, { ElementType, HTMLAttributes } from &apos;react&apos;;
⋮----
// Define common props for text components
export interface VSTextProps {
  children?: React.ReactNode;
  size?: &apos;xs&apos; | &apos;sm&apos; | &apos;md&apos; | &apos;lg&apos; | &apos;xl&apos; | &apos;2xl&apos;; // Added more size options
  color?: string; // Allow passing Tailwind color class like &apos;text-theme-primary&apos;
  className?: string;
  as?: ElementType; // Allow changing the root element type (e.g., p, span, h1, h2)
}
⋮----
size?: &apos;xs&apos; | &apos;sm&apos; | &apos;md&apos; | &apos;lg&apos; | &apos;xl&apos; | &apos;2xl&apos;; // Added more size options
color?: string; // Allow passing Tailwind color class like &apos;text-theme-primary&apos;
⋮----
as?: ElementType; // Allow changing the root element type (e.g., p, span, h1, h2)
⋮----
// Base component for theme-aware text
export const VSText = ({
  children,
  size = &apos;md&apos;,
  color = &apos;text-theme-secondary&apos;, // Default text color
  className = &apos;&apos;,
  as: Component = &apos;p&apos;, // Default to &lt;p&gt; tag
  ...props
}: VSTextProps &amp; HTMLAttributes&lt;HTMLElement&gt;) =&gt;
⋮----
color = &apos;text-theme-secondary&apos;, // Default text color
⋮----
as: Component = &apos;p&apos;, // Default to &lt;p&gt; tag
⋮----
// Map abstract sizes to Tailwind classes (Mobile-first approach)
⋮----
xs: &apos;text-xs sm:text-sm&apos;, // Extra small
sm: &apos;text-sm sm:text-base&apos;, // Small
md: &apos;text-base sm:text-lg&apos;, // Medium (default)
lg: &apos;text-lg sm:text-xl&apos;, // Large
xl: &apos;text-xl sm:text-2xl&apos;, // Extra large
&apos;2xl&apos;: &apos;text-2xl sm:text-3xl&apos;, // Double extra large
⋮----
// Heading component using VSText styling but defaulting to &lt;h2&gt;
export const VSHeading = ({
  children,
  size = &apos;lg&apos;, // Default heading size
  color = &apos;text-theme-primary&apos;, // Default heading color
  className = &apos;&apos;,
  as: Component = &apos;h2&apos;, // Default to &lt;h2&gt; tag
  ...props
}: VSTextProps &amp; HTMLAttributes&lt;HTMLElement&gt;) =&gt;
⋮----
size = &apos;lg&apos;, // Default heading size
color = &apos;text-theme-primary&apos;, // Default heading color
⋮----
as: Component = &apos;h2&apos;, // Default to &lt;h2&gt; tag
⋮----
// Map abstract sizes to responsive Tailwind classes for headings (Mobile-first)
// As specified in MOBILE_OPTIMIZATION_PLAN.md Phase 2, Step 2
⋮----
xs: &apos;text-base sm:text-lg md:text-xl&apos;, // Added missing xs key (adjust values if needed)
⋮----
lg: &apos;text-2xl sm:text-3xl md:text-4xl lg:text-5xl&apos;, // Default
⋮----
// Optional: Specific component for gradient text if needed frequently
export const VSGradientText = ({
  children,
  size = &apos;lg&apos;,
  className = &apos;&apos;,
  as: Component = &apos;span&apos;, // Default to &lt;span&gt;
  ...props
}: VSTextProps &amp; HTMLAttributes&lt;HTMLElement&gt;) =&gt;
⋮----
as: Component = &apos;span&apos;, // Default to &lt;span&gt;
⋮----
// Mirroring heading sizes for gradient text
⋮----
xs: &apos;text-base sm:text-lg md:text-xl&apos;, // Added missing xs key</file><file path="components/ui/VSThemeWrapper.tsx">import React, { useEffect, useState } from &apos;react&apos;;
import { useTheme } from &apos;./theme-provider&apos;;
⋮----
interface VSThemeWrapperProps {
  children: React.ReactNode;
  lightClassName?: string;
  darkClassName?: string;
  defaultClassName?: string;
}
⋮----
/**
 * A component that makes it easy to apply different classes based on theme
 * This wraps any child element and applies appropriate theme classes
 */
export function VSThemeWrapper({
  children,
  lightClassName = &apos;&apos;,
  darkClassName = &apos;&apos;,
  defaultClassName = &apos;&apos;,
}: VSThemeWrapperProps)
⋮----
// Wait until component mounts to avoid hydration issues
⋮----
// During SSR or before hydration, return with default class only
⋮----
// If child is a React element, clone it and add the classes
⋮----
// Otherwise wrap in a div
⋮----
/**
 * A simpler version that just ensures correct theme classes are applied
 * This is useful for quickly adding dark mode to any component
 */
export function VSThemedElement({
  children,
  className = &apos;&apos;,
}: {
  children: React.ReactNode;
  className?: string;
})</file><file path="components/ui/WithTheme.tsx">import React from &apos;react&apos;;
import { ThemeProvider } from &apos;./theme-provider&apos;;
⋮----
/**
 * Higher-Order Component (HOC) that wraps a component with the ThemeProvider
 * Use this for isolated components that need theme access
 */
export function WithTheme&lt;P extends object&gt;(
  Component: React.ComponentType&lt;P&gt;
): React.FC&lt;P&gt;
⋮----
/**
 * Component wrapper for direct use in JSX
 * Useful for isolated routes or testing environments
 */
export function ThemeWrapper(</file><file path="components/Word-Rollers/example.tsx">import React from &apos;react&apos;;
import { WordRollerWithPrefix } from &apos;./WordRollerWithPrefix&apos;;
import { WordRoller } from &apos;./WordRoller&apos;;
⋮----
// Custom words you can use
⋮----
{/* Background grid pattern (from original CSS) */}
⋮----
{/* Example 1: Default rainbow gradient (OKLCH color space) */}
⋮----
{/* Example 2: Custom HSL gradient (blue to purple) */}
⋮----
startColor={{ h: 240, s: 80, l: 60 }} // Blue
endColor={{ h: 290, s: 80, l: 60 }}   // Purple
⋮----
{/* Example 3: Custom RGB gradient (red to yellow) */}
⋮----
startColor={{ r: 255, g: 50, b: 50 }}  // Red
endColor={{ r: 255, g: 220, b: 50 }}   // Yellow
⋮----
{/* Footer */}</file><file path="components/Word-Rollers/style.css">@layer normalize, base, demo, stick, effect, srollbar, debug;
⋮----
@layer debug {
⋮----
[data-debug=&apos;true&apos;] li {
[data-debug=&apos;true&apos;] :is(h2, li:last-of-type) {
⋮----
@layer scrollbar {
⋮----
@property --hue {
@property --chroma {
⋮----
[data-sync-scrollbar=&apos;true&apos;] {
⋮----
[data-sync-scrollbar=&apos;true&apos;][data-animate=&apos;true&apos;] {
⋮----
/* animation-timeline: scroll(root); */
⋮----
ul {
⋮----
@layer effect {
⋮----
:root {
[data-theme=&apos;dark&apos;] {
[data-theme=&apos;light&apos;] {
⋮----
li:not(:last-of-type) {
⋮----
[data-animate=&apos;true&apos;] {
⋮----
li {
⋮----
&amp;:first-of-type {
&amp;:last-of-type {
⋮----
@layer stick {
⋮----
section:first-of-type {
section:last-of-type {
⋮----
h2 {
⋮----
main {
section:first-of-type h2 {
⋮----
[data-snap=&apos;true&apos;] {
⋮----
h2,
⋮----
@layer demo {
⋮----
header {
⋮----
footer {
⋮----
h1 {
⋮----
@layer base {
⋮----
html {
⋮----
:where(.fluid) {
⋮----
*,
⋮----
body {
⋮----
body::before {
⋮----
.bear-link {
⋮----
:where(.x-link, .bear-link):is(:hover, :focus-visible) {
⋮----
.bear-link svg {
⋮----
/* Utilities */
.sr-only {
⋮----
div.tp-dfwv {</file><file path="components/Word-Rollers/WordRoller.css">/* Import necessary fonts */
⋮----
/* Create CSS layers for proper cascade */
@layer normalize, base, demo, stick, effect, scrollbar, debug;
⋮----
/* Debug layer for visual debugging */
@layer debug {
⋮----
[data-debug=&apos;true&apos;] li {
[data-debug=&apos;true&apos;] :is(h2, li:last-of-type) {
⋮----
/* Scrollbar styling and animation */
@layer scrollbar {
⋮----
@property --hue {
@property --chroma {
⋮----
[data-sync-scrollbar=&apos;true&apos;] {
⋮----
[data-sync-scrollbar=&apos;true&apos;][data-animate=&apos;true&apos;] {
⋮----
[data-sync-scrollbar=&apos;true&apos;][data-animate=&apos;true&apos;] ul {
⋮----
/* Colors and animations for the text */
@layer effect {
⋮----
.word-roller-root {
⋮----
[data-theme=&apos;dark&apos;] {
[data-theme=&apos;light&apos;] {
⋮----
.word-roller-root ul {
⋮----
.word-roller-root li:not(:last-of-type) {
⋮----
[data-animate=&apos;true&apos;] li {
⋮----
[data-animate=&apos;true&apos;] li:first-of-type {
⋮----
[data-animate=&apos;true&apos;] li:last-of-type {
⋮----
/* Layout and positioning */
@layer stick {
⋮----
.word-roller-root section {
⋮----
.word-roller-root section h2 {
⋮----
scrollbar-width: none; /* Firefox */
-ms-overflow-style: none; /* IE and Edge */
⋮----
.word-roller-root ul::-webkit-scrollbar {
⋮----
display: none; /* Chrome, Safari, Opera */
⋮----
[data-snap=&apos;true&apos;] {
⋮----
[data-snap=&apos;true&apos;] li {
⋮----
.word-roller-root h2,
⋮----
.word-roller-root li {
⋮----
/* Base typography */
@layer base {
⋮----
/* Responsive adjustments */
⋮----
/* Fluid typography */
.fluid {
⋮----
/* Screen reader only class */
.sr-only {</file><file path="components/Word-Rollers/WordRoller.tsx">import React, { useEffect, useRef, useState } from &apos;react&apos;;
⋮----
interface WordRollerProps {
  words?: string[];
  className?: string;
  onComplete?: () =&gt; void;
}
⋮----
// Component with just rolling text, no fixed prefix
⋮----
threshold: 0.9, // When item is 60% visible
⋮----
// Check if this is the last word
⋮----
// Observe all list items
⋮----
// Calculate gradient colors for items
const getItemColor = (index: number): string =&gt;
⋮----
// Total range divided by number of items
⋮----
// Return OKLCH color
// 65% lightness and 0.3 chroma are from the original CSS
⋮----
// Special styling for active item
const getItemStyle = (index: number): React.CSSProperties =&gt;
⋮----
// Special styling for last item (based on original CSS)
const getLastItemStyle = (index: number): React.CSSProperties =&gt;
⋮----
{/* Screen reader content */}
⋮----
...getItemStyle(i),
...getLastItemStyle(i),</file><file path="components/Word-Rollers/WordRollerWithPrefix.tsx">import React, { useEffect, useRef, useState } from &apos;react&apos;;
⋮----
interface WordRollerWithPrefixProps {
  prefix?: string;
  words?: string[];
  className?: string;
  prefixClassName?: string;
  listClassName?: string;
  itemClassName?: string;
}
⋮----
// Component where a prefix stays in place while words roll
⋮----
threshold: 0.6, // When item is 60% visible
⋮----
// Observe all list items
⋮----
// Calculate gradient colors for items
const getItemColor = (index: number): string =&gt;
⋮----
// Total range divided by number of items
⋮----
// Return OKLCH color
// 65% lightness and 0.3 chroma are from the original CSS
⋮----
// Special styling for active item
const getItemStyle = (index: number): React.CSSProperties =&gt;
⋮----
style=</file><file path="components/Area-chart-shad.tsx.ts">import { TrendingUp } from &quot;lucide-react&quot;
import { Area, AreaChart, CartesianGrid, XAxis, YAxis } from &quot;recharts&quot;
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from &quot;../components/ui/card&quot;
import {
  ChartConfig,
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
} from &quot;../components/ui/chart&quot;
⋮----
// Define the chart data type for type safety
interface ChartDataPoint {
  month: string;
  desktop: number;
  mobile: number;
}
⋮----
// Add props interface if you need to pass props to this component
interface AreaChartComponentProps {
  className?: string; // Make className optional
}
⋮----
className?: string; // Make className optional
⋮----
// For backwards compatibility with default exports</file><file path="components/Color-theme-display.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import { useTheme } from &apos;../components/ui/theme-provider&apos;;
⋮----
interface CssVariable {
  name: string;
  value: string;
  category: string;
  isThemeAware: boolean;
}
⋮----
// Get all CSS variables from root
⋮----
// Extract all CSS variables and their computed values
⋮----
// Determine category based on variable name patterns
const getCategoryFromVariable = (name: string): string =&gt;
⋮----
// Get filtered variables based on search term and category
const getFilteredVariables = (): CssVariable[] =&gt;
⋮----
// Check if a value appears to be a color
const isColor = (value: string): boolean =&gt;
⋮----
// Get variables that reference this variable
const getReferencingVariables = (varName: string): CssVariable[] =&gt;
⋮----
// Toggle the application theme
const toggleTheme = () =&gt;
⋮----</file><file path="components/ComingSoon.tsx">import React, { useState, useEffect, useRef } from &apos;react&apos;;
⋮----
interface KitPopup {
  open: () =&gt; void;
}
⋮----
interface Window {
    KitPopup?: KitPopup;
  }
⋮----
// Show details by default on mobile
⋮----
// Track mouse movement
⋮----
const handleMouseMove = (e: MouseEvent) =&gt;
⋮----
// Cleanup timeout on unmount
⋮----
const handleMouseEnter = () =&gt;
⋮----
const handleMouseLeave = () =&gt;
⋮----
// Eye following cursor effect
⋮----
// Calculate distance between eye center and mouse
⋮----
// Max movement radius
⋮----
// Calculate normalized movement
⋮----
// Apply movement
⋮----
// Close modules directory on escape key
⋮----
const handleEscKey = (e: KeyboardEvent): void =&gt;
⋮----
// Module data from repository
⋮----
type CategoryColorType = {
    [key: string]: { bg: string; text: string; accent: string; }
  };
⋮----
// Define colors for each category
⋮----
// Add the ConvertKit form script
⋮----
const handleWaitlistClick = () =&gt;
⋮----
// Find any existing form and remove it
⋮----
// Create and inject the ConvertKit form
⋮----
// Create a modal container
⋮----
// Add close button
⋮----
// Add form to modal
⋮----
// Close modal on outside click
⋮----
{/* Mobile wrapper for better control */}
⋮----
{/* Module Directory Modal */}</file><file path="components/ContentOverwhelmer.tsx">import React, { useState, useRef, FC } from &apos;react&apos;;
import gsap from &apos;gsap&apos;;
import { useGSAP } from &apos;@gsap/react&apos;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
import { JSX } from &apos;react/jsx-runtime&apos;;
import { Button } from &apos;./ui/button&apos;;
import { ChevronDown, ChevronUp } from &apos;lucide-react&apos;;
⋮----
// Import only common Hero Icons
import { 
  UserIcon, 
  VideoCameraIcon, 
  PencilIcon, 
  DocumentIcon,
  ClockIcon,
  CogIcon, 
  CheckCircleIcon,
  BookOpenIcon,
  ChartBarIcon,
  StarIcon,
  BeakerIcon,
  CubeIcon,
  CurrencyPoundIcon
} from &apos;@heroicons/react/24/solid&apos;;
⋮----
// Register ScrollTrigger plugin
⋮----
// Type definitions
interface Track {
  name: string;
  color: string;
  icon: JSX.Element;
}
⋮----
interface Resource {
  type: &apos;PDF&apos; | &apos;Workshop&apos; | &apos;Test&apos; | &apos;Video&apos; | &apos;Template&apos; | &apos;Worksheet&apos; | &apos;Code&apos; | &apos;System&apos; | &apos;Framework&apos;;
  name: string;
}
⋮----
interface ResourceColors {
  [key: string]: string;
}
⋮----
interface Submodule {
  title: string;
  duration: string;
  resources: Resource[];
}
⋮----
interface Module {
  id: string;
  title: string;
  track: Track;
  submodules: Submodule[];
  description?: string;
  difficulty?: string;
  durationHours?: number;
}
⋮----
// State for expanded/collapsed view
⋮----
// State for active track and expanded module
⋮----
// Refs for animations
⋮----
// Define tracks with their respective colors and Hero Icons
⋮----
// Generate sample modules for display
const generateSampleModules = (): Module[] =&gt;
⋮----
// Sample modules
⋮----
// Filtered modules based on active track
⋮----
// Replace your animation setup with this
⋮----
// Clear previous animations first
⋮----
// Use unique IDs for all scroll triggers
⋮----
id: &quot;content-overwhelmer-path&quot;, // Unique ID
⋮----
// Only create path animation if it doesn&apos;t exist
⋮----
// Update animation progress
⋮----
// Use lower stagger values and shorter durations
⋮----
stagger: 0.005, // Reduced stagger value
duration: 0.15, // Shorter duration
⋮----
// Animate resource cards with much lighter animations
⋮----
// Much lighter floating animations for resources
function animateResourceCards()
⋮----
// Skip animation for off-screen cards
⋮----
// Extremely subtle movement
⋮----
// Helper function to only animate visible elements
function isElementInViewport(el: Element)
⋮----
// Toggle expanded/collapsed view
const toggleExpanded = () =&gt;
⋮----
// Filter modules by track
const filterByTrack = (trackName: string | null) =&gt;
⋮----
// Toggle module expansion
const toggleModule = (moduleId: string) =&gt;
⋮----
// Helper function to get resource color
const getResourceColor = (type: string): string =&gt;
⋮----
// Helper function to get resource icon
const getResourceIcon = (type: string): JSX.Element =&gt;
⋮----
{/* Floating background elements to create visual overwhelm */}
⋮----
{/* Headline */}
⋮----
{/* Resource types preview - overwhelming amount of resources */}
⋮----
{/* Track Buttons */}
⋮----
{/* Filtered Results Count */}
⋮----
{/* Module visualization - larger 3 column grid */}
⋮----
{/* Connecting path */}
⋮----
{/* &quot;Value Explosion&quot; elements - scattered content indicators */}
⋮----
{/* Module grid - 3 columns with larger modules */}
⋮----
{/* Category tag */}
⋮----
{/* Track indicators */}
⋮----
{/* Resources - stacked with overlap for overwhelming effect */}
⋮----
{/* Resource count badge */}
⋮----
{/* Expanded view when clicked */}
⋮----
{/* Module description */}
⋮----
{/* Module metadata */}
⋮----
{/* Submodules */}
⋮----
{/* Resources */}
⋮----
{/* Overwhelming resource statistics */}
⋮----
{/* Extra content metrics for overwhelming effect */}
⋮----
{/* Content organization preview - to show structure amid overwhelm */}</file><file path="components/CourseTimeline.tsx">import React, { useEffect, useRef, useState } from &apos;react&apos;;
import { gsap } from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
import SplitType from &apos;split-type&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
⋮----
// Register the ScrollTrigger plugin
⋮----
// Define types for course weeks
interface CourseWeek {
  id: string;
  week: string;
  title: string;
  content: string;
  icon?: string;
  highlight?: string;
  founderTip?: string;
  bullets?: string[];
  modules?: string[];
}
⋮----
// Dropdown component for timeline items
⋮----
// Animation for dropdown content
⋮----
// Get theme variables
⋮----
// Set initial state
⋮----
// Toggle animation based on isOpen state
⋮----
// Rotate arrow
⋮----
// Rotate arrow back
⋮----
// Animation for dropdown underline
⋮----
// Animate underline on hover
⋮----
{/* Dropdown header with VS Bubbly hover effect */}
⋮----
{/* Week icon - emojis removed */}
⋮----
{/* Only highlight text, no duplicate title */}
⋮----
{/* Highlight text (shortened) - increased size by 1.5x */}
⋮----
{/* Orange underline */}
⋮----
{/* Dropdown arrow */}
⋮----
{/* Dropdown content - collapsed by default */}
⋮----
{/* Decorative corner */}
⋮----
{/* Floating elements */}
⋮----
{/* Main content paragraph - increased size */}
⋮----
{/* Bullet points for easy scanning */}
⋮----
{/* Founder tips */}
⋮----
const timelineRef = useRef&lt;HTMLDivElement&gt;(null);
const sectionRefs = useRef&lt;HTMLDivElement[]&gt;([]);
const titleRef = useRef&lt;HTMLHeadingElement&gt;(null);
const introRef = useRef&lt;HTMLParagraphElement&gt;(null);
const progressBarRef = useRef&lt;HTMLDivElement&gt;(null);
⋮----
// Track open/closed state for dropdowns
const [openWeeks, setOpenWeeks] = useState&lt;string[]&gt;([]);
⋮----
// Toggle dropdown function
const toggleWeekOpen = (weekId: string) =&gt;
⋮----
// Define simple color themes for each week (not modules)
⋮----
// Get theme variables for animations
⋮----
// Split text into spans for animations
const splitText = (): void =&gt;
⋮----
// Create header animations
const createHeaderAnimations = (): void =&gt;
⋮----
// For non-gradient title, animate the whole element
⋮----
duration: animDuration * 2, // Slightly longer for title
⋮----
// Create timeline line animation with enhanced scrub effect
const createLineAnimation = (): void =&gt;
⋮----
start: &apos;top 20%&apos;, // Start earlier to make progress more visible
⋮----
scrub: 0.6, // Smoother scrub effect
markers: false, // Set to true for debugging scroll positions
pinSpacing: false // Don&apos;t add extra space
⋮----
// Animate week sections (left side)
const animateWeekHeaders = (): void =&gt;
⋮----
// Animate week title text (primary now)
⋮----
// Animate week number (big thin number above title)
⋮----
// Animate timeline circle
⋮----
// Initialize animations
⋮----
// Need a small delay to ensure DOM is fully updated after splitting text
⋮----
// Save section refs
const addToRefs = (el: HTMLDivElement | null): void =&gt;
⋮----
{/* Theme-aware floating elements for visual interest */}
⋮----
{/* Timeline progress bar - positioned with absolute placement */}
⋮----
{/* Timeline items */}
⋮----
{/* Circle marker on timeline */}
⋮----
className=
⋮----
{/* Left side information (now title is primary, week number as badge above) */}
⋮----
{/* Week number as big, thin font */}
⋮----
{/* Week title (PRIMARY) - smaller size and lighter weight */}
⋮----
{/* Expandable content section */}</file><file path="components/DirectClassTest.tsx">import React from &apos;react&apos;;
⋮----
export const DirectClassTest = () =&gt;
⋮----
{/* Test gradient classes */}
⋮----
{/* Educational section */}</file><file path="components/DirectTest.tsx">import React from &apos;react&apos;;
⋮----
export function DirectTest()
⋮----
// Function to print the computed value of a CSS variable
const printVarValue = (varName: string) =&gt;
⋮----
{/* Test elements with inline styles */}
⋮----
{/* View the actual values */}
⋮----
&lt;li&gt;--primary-orange:</file><file path="components/ImageDemo.jsx">const ImageDemo = () =&gt; {
const clashLogos = getClashLogos();
const mainDirectoryImages = getAllInDirectory(&apos;main&apos;);
⋮----
{/* Logo Section */}
⋮----
src={getImage(&apos;react&apos;)}
⋮----
{/* Main Directory Images Section */}
{Object.keys(mainDirectoryImages).length &gt; 0 &amp;&amp; (
⋮----
{Object.entries(mainDirectoryImages).map(([key, src]) =&gt; (
⋮----
{/* Image Map Structure Display */}
⋮----
{JSON.stringify(imageMap, null, 2)}</file><file path="components/ImageTest.jsx">// Import one image directly to show the difference
⋮----
const ImageTest = () =&gt; {
const [availableImages, setAvailableImages] = useState([]);
⋮----
useEffect(() =&gt; {
// Get all available image keys
const imageKeys = getAllImageKeys();
setAvailableImages(imageKeys);
⋮----
// Log the image map for debugging
console.log(&apos;Available images in image map:&apos;, imageKeys);
console.log(&apos;Full image map:&apos;, imageMap);
⋮----
// Get the Clash logos specifically
const clashLogos = getClashLogos();
⋮----
src={getImage(&apos;Clash-Logo-One-Line-Light-for-Dark&apos;)}
⋮----
{availableImages.map(key =&gt; (
⋮----
src={getImage(key)}</file><file path="components/layout.tsx">// File: src/components/layout/Layout.tsx
import { Outlet, Link } from &quot;react-router-dom&quot;;
import { ThemeToggle } from &quot;./ui/theme-toggle&quot;;
import SchemaScript from &quot;../seo/SchemaScript&quot;;
import DynamicMeta from &quot;../seo/DynamicMeta&quot;;
import CanonicalUrl from &quot;../seo/CanonicalUrl&quot;;
⋮----
export default function Layout()
⋮----
{/* Main content */}
⋮----
{/* Theme toggle and debug button */}
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;
⋮----
{/* Marble buttons navigation */}
⋮----
xmlns=&quot;http://www.w3.org/2000/svg&quot;</file><file path="components/Modules.tsx">import React, { useState, useRef } from &apos;react&apos;;
import { gsap } from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import { Disclosure, Transition } from &apos;@headlessui/react&apos;;
import { ChevronUpIcon } from &apos;@heroicons/react/24/solid&apos;;
import courseUtils from &apos;../lib/course-utils&apos;;
⋮----
// Register GSAP plugins
⋮----
// Define TypeScript interfaces
interface ModuleItem {
  title: string;
  thumbnail: string;
  difficulty: &apos;Beginner&apos; | &apos;Intermediate&apos; | &apos;Advanced&apos;;
}
⋮----
interface CategoryColor {
  bg: string;
  text: string;
}
⋮----
interface CategoryColors {
  [key: string]: CategoryColor;
}
⋮----
interface ModulesByCategory {
  [key: string]: ModuleItem[];
}
⋮----
interface CategorySectionProps {
  category: string;
  modules: ModuleItem[];
  expandedCategories: string[];
  toggleCategory: (category: string) =&gt; void;
}
⋮----
// Module categories with color mapping
⋮----
// Component for displaying course module statistics
const ModuleStatistics = () =&gt;
⋮----
// Calculate totals
⋮----
const totalHours = Math.round(totalModules * 35 / 60); // Approximately 35 minutes per module
⋮----
// Module card component
interface ModuleCardProps {
  title: string;
  thumbnail: string;
  difficulty: &apos;Beginner&apos; | &apos;Intermediate&apos; | &apos;Advanced&apos;;
  color: string;
}
⋮----
// Modern difficulty badges using brand colors
⋮----
src=
⋮----
// Category section component
⋮----
// The main module display component
⋮----
const toggleCategory = (category: string) =&gt;
⋮----
// Schedule a ScrollTrigger refresh after state updates
⋮----
// Reference to the module display container
⋮----
// Initialize animations using useGSAP for proper cleanup
⋮----
// Create GSAP context for proper cleanup
⋮----
// Only use GSAP for staggered animations that Tailwind can&apos;t handle
⋮----
}, moduleDisplayRef); // Scope to the module display container
⋮----
// The context will automatically clean up when the component unmounts
⋮----
}, []); // Empty dependency array means this runs once on mount
⋮----
// Handle category changes with useGSAP
⋮----
// Create context for animations related to expandedCategories
⋮----
// Set a delay to ensure DOM updates are complete
⋮----
// Refresh ScrollTrigger to ensure any GSAP animations update
⋮----
}, [expandedCategories]); // This runs whenever expandedCategories changes</file><file path="components/pricing.js">/**
 * Pricing Section JavaScript
 */
⋮----
document.addEventListener(&apos;DOMContentLoaded&apos;, function() {
// Slight delay to ensure our pricing implementation takes precedence
setTimeout(() =&gt; {
console.log(&apos;🔄 Initializing enhanced pricing section with corrected data&apos;);
initializePricing();
⋮----
/**
 * Initialize pricing section functionality
 */
function initializePricing() {
console.log(&apos;Initializing pricing section...&apos;);
⋮----
// Setup payment toggle
setupPaymentToggle();
⋮----
// Setup pricing FAQ
setupPricingFAQ();
⋮----
// Initialize value counters
initializeValueCounters();
⋮----
// Populate course value stats
populateCourseValueStats();
⋮----
// Make sure our pricing table is rendered and takes precedence
⋮----
// Render pricing table
renderPricingTable();
⋮----
// Apply our icons after rendering
⋮----
console.log(&apos;🔄 Replacing feather icons in pricing section&apos;);
feather.replace();
⋮----
// Add event listener for the pricing quiz button
const quizButton = document.querySelector(&apos;.pricing-quiz-btn&apos;);
⋮----
quizButton.addEventListener(&apos;click&apos;, function() {
const quiz = document.getElementById(&apos;recommendation-quiz&apos;);
⋮----
quiz.classList.add(&apos;active&apos;);
document.body.classList.add(&apos;quiz-open&apos;);
⋮----
// Initialize module tracks preview with a slight delay to ensure DOM is ready
⋮----
const moduleTracksPreview = document.querySelector(&apos;.module-tracks-preview&apos;);
⋮----
// If the preview is empty, populate it
⋮----
populateModulePreview(moduleCategories);
⋮----
// Add animation for the module tracks
⋮----
gsap.from(&apos;.track-category&apos;, {
⋮----
/**
 * Set up payment toggle functionality
 */
function setupPaymentToggle() {
const toggleSwitch = document.querySelector(&apos;.plan-toggle-switch&apos;);
const monthlyLabel = document.querySelector(&apos;.plan-toggle-monthly&apos;);
const yearlyLabel = document.querySelector(&apos;.plan-toggle-yearly&apos;);
const installmentLabel = document.querySelector(&apos;.plan-toggle-installment&apos;);
⋮----
console.warn(&apos;Payment toggle elements not found&apos;);
⋮----
// Update the toggle labels to match the new requirements
⋮----
// Set initial active state
monthlyLabel.classList.add(&apos;active&apos;);
yearlyLabel.classList.remove(&apos;active&apos;);
installmentLabel.classList.remove(&apos;active&apos;);
⋮----
// Toggle one-time/installment pricing
monthlyLabel.addEventListener(&apos;click&apos;, function() {
setActivePaymentOption(&apos;monthly&apos;); // Keep the same function name for compatibility
⋮----
yearlyLabel.addEventListener(&apos;click&apos;, function() {
setActivePaymentOption(&apos;installment&apos;); // Change to installment directly
⋮----
installmentLabel.addEventListener(&apos;click&apos;, function() {
setActivePaymentOption(&apos;installment&apos;);
⋮----
toggleSwitch.addEventListener(&apos;click&apos;, function() {
const currentActive = document.querySelector(&apos;.plan-toggle-label.active&apos;);
if (currentActive.classList.contains(&apos;plan-toggle-monthly&apos;)) {
setActivePaymentOption(&apos;installment&apos;); // Toggle directly to installment
⋮----
setActivePaymentOption(&apos;monthly&apos;); // Toggle back to one-time
⋮----
function setActivePaymentOption(option) {
// Update active class on toggle labels
document.querySelector(&apos;.plan-toggle-monthly&apos;).classList.toggle(&apos;active&apos;, option === &apos;monthly&apos;);
document.querySelector(&apos;.plan-toggle-yearly&apos;).classList.toggle(&apos;active&apos;, option === &apos;installment&apos;);
⋮----
// Update toggle slider position
const slider = document.querySelector(&apos;.plan-toggle-slider&apos;);
⋮----
// Show/hide appropriate price sections
document.querySelectorAll(&apos;.price-monthly&apos;).forEach(el =&gt; {
⋮----
document.querySelectorAll(&apos;.price-installment&apos;).forEach(el =&gt; {
⋮----
/**
 * Set up FAQ functionality in the pricing section
 */
function setupPricingFAQ() {
const faqItems = document.querySelectorAll(&apos;.pricing-faq .faq-item&apos;);
⋮----
faqItems.forEach(item =&gt; {
const question = item.querySelector(&apos;.faq-question&apos;);
const answer = item.querySelector(&apos;.faq-answer&apos;);
⋮----
question.addEventListener(&apos;click&apos;, function() {
const isOpen = answer.classList.contains(&apos;active&apos;);
⋮----
// Close all answers
document.querySelectorAll(&apos;.pricing-faq .faq-answer&apos;).forEach(a =&gt; {
a.classList.remove(&apos;active&apos;);
⋮----
// Toggle clicked answer
⋮----
answer.classList.add(&apos;active&apos;);
⋮----
/**
 * Initialize value counters for animated number counting
 */
function initializeValueCounters() {
const counters = document.querySelectorAll(&apos;.counter[data-value]&apos;);
⋮----
counters.forEach(number =&gt; {
const targetValue = parseInt(number.getAttribute(&apos;data-value&apos;), 10);
if (isNaN(targetValue)) return;
⋮----
const duration = 2000; // ms
const interval = 20; // ms
⋮----
const counter = setInterval(() =&gt; {
⋮----
clearInterval(counter);
⋮----
number.textContent = Math.floor(currentValue).toLocaleString();
⋮----
/**
 * Add the comprehensive course module information
 */
function populateCourseValueStats() {
// Course structure data from module directory
⋮----
// Calculate totals
const totalCategories = Object.keys(moduleCategories).length;
const totalModules = Object.values(moduleCategories).reduce((acc, modules) =&gt; acc + modules.length, 0);
const totalHours = Math.round(totalModules * 35 / 60); // Estimate 35 minutes per module
⋮----
// Update stats
const statsContainer = document.querySelector(&apos;.course-value-stats&apos;);
⋮----
// Populate the stats with our calculated values
⋮----
// Add a module count highlight to the pricing header
const pricingHeader = document.querySelector(&apos;.pricing-header&apos;);
⋮----
const valueCountElement = document.createElement(&apos;div&apos;);
⋮----
// Insert after the pricing description
const pricingDescription = pricingHeader.querySelector(&apos;.pricing-description&apos;);
⋮----
pricingDescription.parentNode.insertBefore(valueCountElement, pricingDescription.nextSibling);
⋮----
pricingHeader.appendChild(valueCountElement);
⋮----
// Initialize counters
⋮----
// Populate module directory preview
⋮----
/**
 * Populate the module directory preview section
 */
function populateModulePreview(moduleCategories) {
⋮----
// Clear existing content
⋮----
// Create columns for the tracks
⋮----
document.createElement(&apos;div&apos;),
document.createElement(&apos;div&apos;)
⋮----
columns.forEach(col =&gt; {
⋮----
moduleTracksPreview.appendChild(col);
⋮----
// Get all categories and sort them alphabetically
const categoryNames = Object.keys(moduleCategories).sort();
⋮----
// Distribute tracks across columns evenly
const midpoint = Math.ceil(categoryNames.length / 2);
⋮----
// Add tracks to columns
categoryNames.forEach((category, index) =&gt; {
⋮----
const trackElement = document.createElement(&apos;div&apos;);
⋮----
// Add a data attribute for potential filtering
trackElement.setAttribute(&apos;data-category&apos;, category.toLowerCase().replace(/\s+/g, &apos;-&apos;));
⋮----
// Add hover effect with module list tooltip
⋮----
const tooltipContent = document.createElement(&apos;div&apos;);
⋮----
${modules.slice(0, 5).map(module =&gt; `&lt;li&gt;${module}&lt;/li&gt;`).join(&apos;&apos;)}
⋮----
trackElement.appendChild(tooltipContent);
⋮----
// Show tooltip on hover
trackElement.addEventListener(&apos;mouseenter&apos;, () =&gt; {
⋮----
trackElement.addEventListener(&apos;mouseleave&apos;, () =&gt; {
⋮----
columns[columnIndex].appendChild(trackElement);
⋮----
// Add total modules count to the preview
⋮----
const trackValue = document.createElement(&apos;div&apos;);
⋮----
moduleTracksPreview.appendChild(trackValue);
⋮----
/**
 * Render the pricing table with tier-specific offerings
 */
function renderPricingTable() {
console.log(&apos;🔄 Rendering enhanced pricing table with correct data&apos;);
⋮----
// Pricing data with valid Feather icons
⋮----
icon: &quot;book&quot;, // Using a valid Feather icon
⋮----
yearlyPrice: &quot;£2,476&quot;, // 20% discount
installmentPrice: &quot;£1,137&quot;, // 3 payments with 10% premium
⋮----
// Track access for this tier
⋮----
icon: &quot;award&quot;, // Using a valid Feather icon
⋮----
yearlyPrice: &quot;£4,076&quot;, // 20% discount
installmentPrice: &quot;£1,868&quot;, // 3 payments with 10% premium
⋮----
icon: &quot;zap&quot;, // Using a valid Feather icon
⋮----
yearlyPrice: &quot;£6,000&quot;, // 20% discount
installmentPrice: &quot;£2,750&quot;, // 3 payments with 10% premium
⋮----
// Track access for all tracks
⋮----
const pricingContainer = document.querySelector(&apos;.pricing-cards-container&apos;);
⋮----
console.error(&apos;❌ Pricing container not found&apos;);
⋮----
console.log(&apos;✅ Cleared existing pricing cards&apos;);
⋮----
// Add pricing cards
Object.keys(pricingData).forEach(plan =&gt; {
⋮----
// Create features HTML
const featuresHTML = planData.features.map(feature =&gt; `
⋮----
`).join(&apos;&apos;);
⋮----
// Create track access HTML
⋮----
} else if (Array.isArray(planData.trackAccess) &amp;&amp; planData.trackAccess.length &gt; 0) {
⋮----
${planData.trackAccess.map(track =&gt; `&lt;div class=&quot;track-access-item&quot;&gt;${track}&lt;/div&gt;`).join(&apos;&apos;)}
⋮----
// Create pricing card
⋮----
console.log(&apos;✅ Added pricing cards with correct data&apos;);
⋮----
// Initialize the toggle immediately to ensure prices are visible
⋮----
setActivePaymentOption(&apos;monthly&apos;);
⋮----
// Create comparison table
createComparisonTable(pricingData);
console.log(&apos;✅ Enhanced pricing table rendered successfully&apos;);
⋮----
/**
 * Create a comparison table to show features across plans
 */
function createComparisonTable(pricingData) {
const compareContainer = document.querySelector(&apos;.pricing-compare&apos;);
⋮----
const tableBody = document.getElementById(&apos;compare-table-body&apos;);
⋮----
// Course structure data
⋮----
// Add module category rows
Object.keys(moduleCategories).forEach(category =&gt; {
const row = document.createElement(&apos;tr&apos;);
⋮----
// Blueprint has access to first 4 tracks
⋮----
// Automator has access to first 8 tracks
const automatorAccess = blueprintAccess || [&quot;Metrics &amp; Analysis&quot;, &quot;Platform Strategy&quot;, &quot;Authority Building&quot;, &quot;Content Management&quot;].includes(category);
⋮----
// Growth has access to all tracks
⋮----
tableBody.appendChild(row);
⋮----
// Add support features
⋮----
// Add a separator row
const separatorRow = document.createElement(&apos;tr&apos;);
⋮----
tableBody.appendChild(separatorRow);
⋮----
// Add support feature rows
supportFeatures.forEach(feature =&gt; {
⋮----
// Replace icons
⋮----
// Add pulse animation to module count
setInterval(() =&gt; {
const moduleCountHighlight = document.querySelector(&apos;.module-count-highlight&apos;);
⋮----
moduleCountHighlight.classList.add(&apos;pulse-animation&apos;);
⋮----
moduleCountHighlight.classList.remove(&apos;pulse-animation&apos;);</file><file path="components/pricingTable.js">/**
 * Pricing Table Renderer for The Vertical Shortcut
 */
⋮----
// Pricing plans data
⋮----
// Comparison table data
⋮----
/**
 * Renders the pricing table
 */
function renderPricingTable() {
⋮----
console.log(&apos;Rendering pricing table...&apos;);
⋮----
// Find pricing containers
const pricingCardsContainer = document.querySelector(&apos;.pricing-cards-container&apos;);
const comparisonTableContainer = document.querySelector(&apos;.comparison-table-container&apos;);
⋮----
console.error(&apos;Pricing cards container not found&apos;);
⋮----
// Clear existing content
⋮----
// Render pricing cards
pricingPlans.forEach(plan =&gt; {
pricingCardsContainer.appendChild(createPricingCard(plan));
⋮----
// Render comparison table if the container exists
⋮----
comparisonTableContainer.innerHTML = createComparisonTable(pricingPlans);
⋮----
// Initialize Feather icons if available
⋮----
feather.replace();
⋮----
console.log(&apos;✅ Pricing table rendered successfully&apos;);
⋮----
console.error(&apos;❌ Error rendering pricing table:&apos;, error);
⋮----
/**
 * Creates a pricing card element
 */
function createPricingCard(plan) {
const card = document.createElement(&apos;div&apos;);
⋮----
card.classList.add(&apos;popular&apos;);
⋮----
card.style.setProperty(&apos;--plan-color&apos;, plan.color);
⋮----
// Create badge if exists
⋮----
// Create features list
const featuresHTML = plan.features.map(feature =&gt;
⋮----
).join(&apos;&apos;);
⋮----
// Create exclusions list if any
⋮----
plan.exclusions.map(exclusion =&gt;
⋮----
).join(&apos;&apos;) : &apos;&apos;;
⋮----
/**
 * Creates comparison table HTML
 */
function createComparisonTable(plans) {
// Define all features for comparison
⋮----
// Create table header
⋮----
${plans.map(plan =&gt; `
⋮----
`).join(&apos;&apos;)}
⋮----
// Create table rows
const tableRows = allFeatures.map(feature =&gt; {
⋮----
${plans.map(plan =&gt; {
// Check if the plan has this feature
const hasFeature = plan.features.some(f =&gt; f.includes(feature));
⋮----
}).join(&apos;&apos;)}
⋮----
}).join(&apos;&apos;);
⋮----
// Create CTA row
⋮----
// Make function available globally
⋮----
// Function to render pricing cards
function renderPricingCards() {
const container = document.querySelector(&apos;.pricing-cards-container&apos;);
⋮----
plan.features.forEach(feature =&gt; {
⋮----
container.appendChild(card);
⋮----
// Function to render comparison table
function renderComparisonTable() {
const container = document.querySelector(&apos;.comparison-table-container&apos;);
⋮----
comparisonFeatures.forEach(item =&gt; {
⋮----
&lt;td&gt;${renderTableCell(item.selfGuided)}&lt;/td&gt;
&lt;td&gt;${renderTableCell(item.guided)}&lt;/td&gt;
&lt;td&gt;${renderTableCell(item.agency)}&lt;/td&gt;
⋮----
// Helper function to render table cell content
function renderTableCell(value) {
⋮----
return value; // For text content like &quot;1 Session&quot;
⋮----
// Initialize pricing section
document.addEventListener(&apos;DOMContentLoaded&apos;, () =&gt; {
renderPricingCards();
renderComparisonTable();
initializeQuiz();
⋮----
// Update quiz progress indicator
function updateQuizProgress(step) {
const progressBar = document.querySelector(&apos;.quiz-progress-bar&apos;);
⋮----
progressBar.setAttribute(&apos;data-step&apos;, step);
⋮----
// Update step indicators
document.querySelectorAll(&apos;.quiz-step-indicator&apos;).forEach(indicator =&gt; {
indicator.classList.remove(&apos;active&apos;);
⋮----
document.querySelector(`.quiz-step-indicator[data-step=&quot;${step}&quot;]`).classList.add(&apos;active&apos;);
⋮----
// Initialize quiz functionality
function initializeQuiz() {
const quizTriggers = document.querySelectorAll(&apos;.quiz-trigger&apos;);
const recommendationQuiz = document.getElementById(&apos;recommendation-quiz&apos;);
const closeQuiz = document.getElementById(&apos;close-quiz&apos;);
⋮----
quizTriggers.forEach(trigger =&gt; {
trigger.addEventListener(&apos;click&apos;, () =&gt; {
recommendationQuiz.classList.add(&apos;active&apos;);
document.body.style.overflow = &apos;hidden&apos;; // Prevent scrolling when modal is open
⋮----
closeQuiz.addEventListener(&apos;click&apos;, () =&gt; {
recommendationQuiz.classList.remove(&apos;active&apos;);
⋮----
// Close modal when clicking outside the content
recommendationQuiz.addEventListener(&apos;click&apos;, (e) =&gt; {
⋮----
// Quiz navigation
const quizPrev = document.getElementById(&apos;quiz-prev&apos;);
const quizNext = document.getElementById(&apos;quiz-next&apos;);
const quizSteps = document.querySelectorAll(&apos;.quiz-step&apos;);
⋮----
quizNext.addEventListener(&apos;click&apos;, () =&gt; {
⋮----
// Show recommendation
document.querySelector(`.quiz-step[data-step=&quot;${currentStep}&quot;]`).classList.remove(&apos;active&apos;);
document.querySelector(&apos;.quiz-step[data-step=&quot;result&quot;]&apos;).classList.add(&apos;active&apos;);
⋮----
updateQuizProgress(&apos;result&apos;);
⋮----
// Reinitialize Feather icons for the newly added icon
⋮----
document.getElementById(&apos;pricing&apos;).scrollIntoView({ behavior: &apos;smooth&apos; });
⋮----
// Animate the recommended plan card
setTimeout(() =&gt; {
const recommendedPlan = document.querySelector(`.pricing-card.${getRecommendation().toLowerCase().replace(&apos; &apos;, &apos;-&apos;)}`);
⋮----
recommendedPlan.classList.add(&apos;highlight-recommended&apos;);
⋮----
recommendedPlan.classList.remove(&apos;highlight-recommended&apos;);
⋮----
// Validate that an option is selected
const currentOptions = document.querySelectorAll(`.quiz-step[data-step=&quot;${currentStep}&quot;] input[type=&quot;radio&quot;]`);
⋮----
currentOptions.forEach(option =&gt; {
⋮----
showValidationMessage(currentStep);
⋮----
// Transition to next step
⋮----
document.querySelector(`.quiz-step[data-step=&quot;${currentStep}&quot;]`).classList.add(&apos;active&apos;);
⋮----
updateQuizProgress(currentStep);
⋮----
quizPrev.addEventListener(&apos;click&apos;, () =&gt; {
⋮----
// Reinitialize Feather icons
⋮----
// Add option selection event
document.querySelectorAll(&apos;.quiz-option&apos;).forEach(option =&gt; {
option.addEventListener(&apos;click&apos;, () =&gt; {
const radioInput = option.querySelector(&apos;input[type=&quot;radio&quot;]&apos;);
⋮----
// Remove validation message if present
const step = option.closest(&apos;.quiz-step&apos;).getAttribute(&apos;data-step&apos;);
removeValidationMessage(step);
⋮----
// Process answers when all steps are completed
⋮----
processQuizAnswers();
⋮----
// Show validation message for a step
function showValidationMessage(step) {
const stepEl = document.querySelector(`.quiz-step[data-step=&quot;${step}&quot;]`);
if (!stepEl.querySelector(&apos;.validation-message&apos;)) {
const message = document.createElement(&apos;div&apos;);
⋮----
stepEl.querySelector(&apos;h4&apos;).insertAdjacentElement(&apos;afterend&apos;, message);
⋮----
// Initialize feather icons
⋮----
// Add animation
⋮----
// Remove validation message
function removeValidationMessage(step) {
const message = document.querySelector(`.quiz-step[data-step=&quot;${step}&quot;] .validation-message`);
⋮----
message.remove();
⋮----
// Get recommendation based on answers
function getRecommendation() {
const journey = document.querySelector(&apos;input[name=&quot;journey&quot;]:checked&apos;)?.value;
const involvement = document.querySelector(&apos;input[name=&quot;involvement&quot;]:checked&apos;)?.value;
const speed = document.querySelector(&apos;input[name=&quot;speed&quot;]:checked&apos;)?.value;
⋮----
// Simple logic for recommendation (can be more complex)
⋮----
// Process quiz answers and show recommendation
function processQuizAnswers() {
const recommendation = getRecommendation();
⋮----
// Recommendation text based on selected options
⋮----
// Find the relevant plan
const plan = pricingPlans.find(p =&gt; p.title === recommendation);
⋮----
const recommendationElement = document.getElementById(&apos;quiz-recommendation&apos;);
⋮----
${plan.features.slice(0, 3).map(feature =&gt; `
⋮----
// Add CSS to the recommendation CTA
const recommendationCta = recommendationElement.querySelector(&apos;.recommendation-cta&apos;);</file><file path="components/scroll-effect-component.tsx">import React, { useRef, CSSProperties } from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { ScrollTrigger } from &quot;gsap/ScrollTrigger&quot;;
⋮----
// Register the ScrollTrigger plugin
⋮----
interface ScrollTextEffectProps {
  startText?: string;
  words?: string[];
  startHue?: number;
  endHue?: number;
}
⋮----
// Configure GSAP animations
⋮----
// Set initial opacity state
⋮----
// Animation for changing opacity of list items
⋮----
// Create the scroll trigger for the opacity animation
⋮----
// Animation for changing the hue based on scroll position
⋮----
// Create the scroll trigger for the hue animation
⋮----
// Chromatic aberration effect on entry
⋮----
// Chromatic aberration effect on exit
⋮----
// Set up pin for the heading
⋮----
return () =&gt; ctx.revert(); // Cleanup on unmount
⋮----
// Calculate step value for hue interpolation
⋮----
{/* Floating elements - light mode */}
⋮----
{/* Floating elements - dark mode */}</file><file path="components/SectionsAndForms.tsx">import React, { useState } from &apos;react&apos;;
⋮----
// Import all sections from the index file
import { FAQ, Pricing3ColsSubscription } from &apos;./sections&apos;;
⋮----
// Import the form wrapper
import ApplicationFormWrapper from &apos;./form/ApplicationFormWrapper&apos;;
⋮----
const renderComponent = () =&gt;</file><file path="components/SimpleHero.tsx">import React, { useRef, useEffect, useState } from &apos;react&apos;;
import gsap from &apos;gsap&apos;;
⋮----
const SimpleHero: React.FC = () =&gt;
⋮----
const rotateHeading = (): void =&gt;
⋮----
{/* Your logo content */}</file><file path="components/ThemeDemo.tsx">import React, { useState } from &apos;react&apos;;
import { useTheme } from &apos;./ui/theme-provider&apos;;
import { VSThemeWrapper } from &apos;./ui/VSThemeWrapper&apos;;
import { ThemeToggle } from &apos;./ui/theme-toggle&apos;;
⋮----
/**
 * A demo component showcasing the VS theme system implementation
 */
⋮----
{/* Background with proper light/dark mode styling */}
⋮----
{/* Grid pattern background */}
⋮----
{/* Floating elements - light mode */}
⋮----
{/* Floating elements - dark mode */}
⋮----
{/* Theme toggle in top corner */}
⋮----
{/* Main content */}
⋮----
{/* Theme controls */}
⋮----
{/* Demo cards */}
⋮----
{/* Card demonstrating direct CSS variable references */}
⋮----
{/* Card demonstrating VSThemeWrapper */}
⋮----
{/* Color palette demo */}
⋮----
{/* Button examples */}
⋮----
/**
 * Helper component to display a color swatch
 */
⋮----
// Map specific color variables to their inline styles
const getColorStyle = (colorName: string) =&gt;</file><file path="components/ThemeStyleGuide.tsx">import React from &apos;react&apos;;
import { AnimatedButton } from &apos;./marble-buttons/AnimatedButton&apos;;
⋮----
/**
 * Comprehensive Theme Style Guide Component
 * 
 * Shows all theme-aware utility classes organized by category.
 * Includes all available styling options: colors, gradients, shadows, glows, transitions, etc.
 */
⋮----
{/* Typography - Font Sizes */}
⋮----
{/* Typography - Font Weights */}
⋮----
{/* Typography - Letter Spacing */}
⋮----
{/* Typography - Line Height */}
⋮----
{/* Typography - Text Alignment &amp; Decoration */}
⋮----
{/* Typography - Text Transform */}
⋮----
{/* Text Colors */}
⋮----
{/* Coral and Red Color Palette */}
⋮----
{/* Text Colors */}
⋮----
{/* Background Colors */}
⋮----
{/* Gradient Background Colors */}
⋮----
{/* Border Colors */}
⋮----
{/* Opacity Variations */}
⋮----
{/* Coral Buttons */}
⋮----
{/* Hover &amp; Focus Styles */}
⋮----
{/* Coral Box Shadows */}
⋮----
{/* Text Gradients */}
⋮----
{/* Background Colors */}
⋮----
{/* Gradients */}
⋮----
{/* Button Gradients */}
⋮----
{/* Borders */}
⋮----
{/* Border Radius */}
⋮----
{/* Shadows */}
⋮----
{/* Text Shadows */}
⋮----
{/* Glows */}
⋮----
{/* Transitions */}
⋮----
{/* Interactive Elements */}
⋮----
{/* Grid and Patterns */}
⋮----
{/* Floating Elements */}
⋮----
{/* Using the floating classes on the cards themselves */}
⋮----
{/* Chart Components */}
⋮----
{/* Button Components */}
⋮----
{/* Animated Marble Buttons */}
⋮----
{/* Normal Saturation */}
⋮----
{/* High Saturation */}
⋮----
{/* Low Saturation */}
⋮----
{/* Subtle */}
⋮----
{/* Size Variations */}
⋮----
{/* Card Components */}
⋮----
{/* Module Components */}
⋮----
{/* Navigation Components */}
⋮----
{/* Overlay Components */}
⋮----
{/* Carousel Components */}
⋮----
{/* Miscellaneous Components */}
⋮----
{/* Spacing - Padding */}
⋮----
{/* Spacing - Margin */}
⋮----
{/* Layout - Flex */}
⋮----
{/* Layout - Grid */}
⋮----
{/* Responsive Utilities */}
⋮----
{/* Eyeball Component */}</file><file path="components/ThemeTest.tsx">import React, { useEffect, useState } from &apos;react&apos;;
import { useTheme } from &apos;./ui/theme-provider&apos;;
⋮----
export function ThemeTest()
⋮----
// Function to check the current state of theme application
const checkThemeState = () =&gt;
⋮----
// Initial check
⋮----
// Set up an interval to check periodically
⋮----
// Clean up interval on unmount</file><file path="components/VSExampleComponent.tsx">import React, { useRef } from &quot;react&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { CheckCircle, ArrowRightCircle, Zap } from &quot;lucide-react&quot;;
⋮----
/**
 * VSExampleComponent - Demonstrates the proper Tailwind v4 styling patterns
 * for light and dark mode following the VS brand guidelines.
 */
⋮----
// Professional animation implementation with GSAP
⋮----
// Animate the card entries
⋮----
// Animate the heading
⋮----
// Proper cleanup
⋮----
{/* Theme-aware floating elements */}
⋮----
{/* Card 1 */}
⋮----
{/* Card 2 */}
⋮----
{/* Card 3 */}
⋮----
{/* Additional feature table */}
⋮----
{/* Pro tip */}</file><file path="components/VSModalShowcase.tsx">import React from &apos;react&apos;;
import ModalsImplementation from &apos;./modals/ModalsImplementation&apos;;
⋮----
/**
 * VSModalShowcase - Component to showcase the VS modal system
 * 
 * This component is the entry point for the modal system showcase
 * and can be easily integrated into any page of the VS website.
 */
const VSModalShowcase: React.FC = () =&gt;</file><file path="components/WordRoller.tsx">/* Updated return block of the WordRoller component */
⋮----
{/* Screen reader content */}
⋮----
scrollSnapType: &apos;y mandatory&apos;, // More dramatic snapping
height: &apos;100vh&apos;,               // Fixed height to fill screen
⋮----
...getItemStyle(i),
...getLastItemStyle(i),
height: &apos;100vh&apos;,               // Fill viewport height
⋮----
fontSize: &apos;clamp(8rem, 20vw, 30rem)&apos;, // Dramatically larger text
lineHeight: &apos;0.9&apos;,                     // Tighter line height
⋮----
fontWeight: &apos;900&apos;                      // Extra bold for impact</file><file path="data/before-after-examples.ts">// Define the data structure for before/after examples
export interface BeforeAfterExample {
  title: string;
  beforeViews: number;
  afterViews: number;
  beforeDate: string;
  afterDate: string;
  imageBefore?: string;
  imageAfter?: string;
}
⋮----
// Export example data for the BeforeAfterStats component</file><file path="data/course-data.json">{
  &quot;title&quot;: &quot;The Vertical Shortcut: Master Short Form Video&quot;,
  &quot;categories&quot;: [
    {
      &quot;id&quot;: &quot;theory&quot;,
      &quot;name&quot;: &quot;Theory&quot;,
      &quot;color&quot;: &quot;#4A90E2&quot;,
      &quot;sections&quot;: [
        {
          &quot;id&quot;: &quot;basic-theory&quot;,
          &quot;name&quot;: &quot;Basic Theory&quot;,
          &quot;number&quot;: 1,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;intro-founder-specific&quot;,
              &quot;title&quot;: &quot;Introduction to Short Form&quot;,
              &quot;subtitle&quot;: &quot;The BIG picture on short form&quot;,
              &quot;icon&quot;: &quot;lightbulb&quot;,
              &quot;color&quot;: &quot;#4a90e2&quot;,
              &quot;points&quot;: [
                &quot;Short form is the best investment you can make in your brand right now.&quot;,
                &quot;5 billion people spend 2.5 hours a day on these platforms.&quot;,
                &quot;Here&apos;s how to use it to your *unfair* advantage.&quot;
              ],
              &quot;thumbnail&quot;: &quot;01-intro-founder.webp&quot;,
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;
              ],
              &quot;duration&quot;: 0,
              &quot;founderMustWatch&quot;: true,
              &quot;entrepreneurSpecific&quot;: true,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;intro-founder-specific-01&quot;,
                  &quot;title&quot;: &quot;Introduction to Short Form&quot;,
                  &quot;subtitle&quot;: &quot;The BIG picture on short form: why it&apos;s the best investment you can make into your brand. Right. Now.&quot;,
                  &quot;duration&quot;: 0,
                  &quot;Thumbnail&quot;: &quot;01-intro-founder.webp&quot;,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;the-algorithm&quot;,
              &quot;title&quot;: &quot;The Algorithm&quot;,
              &quot;subtitle&quot;: &quot;What actually is &apos;The Algorithm&apos;? And how do you game it? &quot;,
              &quot;icon&quot;: &quot;algorithm&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;01-algorithm.webp&quot;,
              &quot;points&quot;: [
                &quot;Finally get to the bottom of the mysterious &apos;algorithm&apos;.&quot;,
                &quot;Learn how content performance is measured and boosted - for each platform.&quot;,
                &quot;Spoiler: does &apos;algorithm&apos; really just mean &apos;audience&apos;....?&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 22,
              &quot;founderMustWatch&quot;: true,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;the-algorithm-01&quot;,
                  &quot;title&quot;: &quot;What Is The Algorithm?&quot;,
                  &quot;thumbnail&quot;: &quot;01-algorithm-01.webp&quot;,
                  &quot;subtitle&quot;: &quot;Debunking the myths and getting to the bottom of the &apos;algorithm&apos;.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;the-algorithm-02&quot;,
                  &quot;title&quot;: &quot;How Videos Grow&quot;,
                  &quot;thumbnail&quot;: &quot;01-algorithm-02.webp&quot;,
                  &quot;subtitle&quot;: &quot;Understanding the life cycle of a viral video - and how they grow&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;the-algorithm-03&quot;,
                  &quot;title&quot;: &quot;Good VS Bad In Short Form&quot;,
                  &quot;thumbnail&quot;: &quot;01-algorithm-03.webp&quot;,
                  &quot;subtitle&quot;: &quot;Getting to the bottom of the dos and don&apos;ts in short form (what will turn your audience away)&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;the-algorithm-04&quot;,
                  &quot;title&quot;: &quot;How to game the algorithm&quot;,
                  &quot;thumbnail&quot;: &quot;01-algorithm-04.webp&quot;,
                  &quot;subtitle&quot;: &quot;Now you understand it, this is how to play it for millions of views&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;the-algorithm-05&quot;,
                  &quot;title&quot;: &quot;Applying it across platforms&quot;,
                  &quot;thumbnail&quot;: &quot;01-algorithm-05.webp&quot;,
                  &quot;subtitle&quot;: &quot;How to game every algorithm, with one basic strategy&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;cardinal-sins&quot;,
              &quot;title&quot;: &quot;The Cardinal Sins&quot;,
              &quot;subtitle&quot;: &quot;The 3 mistakes killing every single video (trust us) — and how to fix them.&quot;,
              &quot;icon&quot;: &quot;warning&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;01-cardinal-sins.webp&quot;,
              &quot;points&quot;: [
                &quot;What does every failing video have in common? At least one of the 3 cardinal sins.,&quot;,
                &quot;Learn what they are, how to spot them in your own content.,&quot;,
                &quot;And finally master the three virtues to absolve yourself.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;,
                &quot;The Editor&quot;,
                &quot;The Technician&quot;
              ],
              &quot;duration&quot;: 19,
              &quot;founderMustWatch&quot;: true,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;cardinal-sins-01&quot;,
                  &quot;title&quot;: &quot;Three Cardinal Sins Intro&quot;,
                  &quot;thumbnail&quot;: &quot;01-cardinal-sins-01.webp&quot;,
                  &quot;subtitle&quot;: &quot;Introduction to the 3 Cardinal Sins&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;cardinal-sins-02&quot;,
                  &quot;title&quot;: &quot;Sin #1: Being Boring&quot;,
                  &quot;thumbnail&quot;: &quot;01-cardinal-sins-01.webp&quot;,
                  &quot;subtitle&quot;: &quot;Why info heavy, boring content will always tank - short form is supposed to be entertaining&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;cardinal-sins-03&quot;,
                  &quot;thumbnail&quot;: &quot;01-cardinal-sins-02.webp&quot;,
                  &quot;title&quot;: &quot;Sin #2: Being Confusing&quot;,
                  &quot;subtitle&quot;: &quot;Why complexity drives viewers away&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;cardinal-sins-04&quot;,
                  &quot;title&quot;: &quot;Sin #3: Being Corporate&quot;,
                  &quot;thumbnail&quot;: &quot;01-cardinal-sins-03.webp&quot;,
                  &quot;subtitle&quot;: &quot;How to lose trust on the platform of the people - no one likes knowing they&apos;re being sold to &quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;cardinal-sins-05&quot;,
                  &quot;title&quot;: &quot;Virtue #1: Framing&quot;,
                  &quot;thumbnail&quot;: &quot;01-cardinal-sins-04.webp&quot;,
                  &quot;subtitle&quot;: &quot;How to fix being boring, by just fixing how you frame it.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;cardinal-sins-06&quot;,
                  &quot;title&quot;: &quot;Virtue #2: Clarity&quot;,
                  &quot;thumbnail&quot;: &quot;01-cardinal-sins-05.webp&quot;,
                  &quot;subtitle&quot;: &quot;How to avoid the confusion trap, and get people watching your videos&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;cardinal-sins-07&quot;,
                  &quot;title&quot;: &quot;Virtue #3: Authenticity&quot;,
                  &quot;thumbnail&quot;: &quot;01-cardinal-sins-06.webp&quot;,
                  &quot;subtitle&quot;: &quot;How to be real online, and why it matters so much to the audience. &quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;starting-an-account&quot;,
              &quot;title&quot;: &quot;Starting An Account&quot;,
              &quot;subtitle&quot;: &quot;Setup and optimise your social media presence - from day 1.&quot;,
              &quot;icon&quot;: &quot;lightbulb&quot;,
              &quot;color&quot;: &quot;#4a90e2&quot;,
              &quot;thumbnail&quot;: &quot;big-picture.jpg&quot;,
              &quot;points&quot;: [
                &quot;How you setup your account is more important than you think.&quot;,
                &quot;Learn to create the perfect name, bio &amp;&quot;,
                &quot;Tell your story through your links, pins and highlights.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;
              ],
              &quot;duration&quot;: 30,
              &quot;founderMustWatch&quot;: true,
              &quot;entrepreneurSpecific&quot;: true,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;starting-an-account-01&quot;,
                  &quot;title&quot;: &quot;Introduction to Short Form&quot;,
                  &quot;subtitle&quot;: &quot;The crucial step 99% of new creators miss&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;starting-an-account-02&quot;,
                  &quot;title&quot;: &quot;Naming Your Account&quot;,
                  &quot;subtitle&quot;: &quot;How to select a memorable and effective account name (and why it matters)&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;starting-an-account-03&quot;,
                  &quot;title&quot;: &quot;Naming Your Account: Brands&quot;,
                  &quot;subtitle&quot;: &quot;Brand Edition: How to select a memorable and effective account name (and why it matters)&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;starting-an-account-04&quot;,
                  &quot;title&quot;: &quot;Creating Your Bio&quot;,
                  &quot;subtitle&quot;: &quot;Communicate who you are as efficiently as possible, to drive click through and follows.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;starting-an-account-05&quot;,
                  &quot;title&quot;: &quot;Managing Highlights&quot;,
                  &quot;subtitle&quot;: &quot;Use highlights to tell your story - and boost your engagement.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;starting-an-account-06&quot;,
                  &quot;title&quot;: &quot;Managing Your Links&quot;,
                  &quot;subtitle&quot;: &quot;Nothing is off the table: how to utilise your link-space for maximum conversion.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;starting-an-account-07&quot;,
                  &quot;title&quot;: &quot;Manage Pinned Videos&quot;,
                  &quot;subtitle&quot;: &quot;Pinned videos are your best introduction: get them right. &quot;,
                  &quot;duration&quot;: 7,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;starting-an-account-08&quot;,
                  &quot;title&quot;: &quot;The Summary&quot;,
                  &quot;subtitle&quot;: &quot;Review of key takeaways and next steps for account setup.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;posting-and-scheduling&quot;,
              &quot;title&quot;: &quot;Posting and Scheduling&quot;,
              &quot;subtitle&quot;: &quot;How to run a daily posting operation across multiple platforms – with maximum efficiency.&quot;,
              &quot;icon&quot;: &quot;calendar&quot;,
              &quot;color&quot;: &quot;#34c759&quot;,
              &quot;thumbnail&quot;: &quot;posting-and-scheduling.jpg&quot;,
              &quot;points&quot;: [
                &quot;Poorly managed posting and scheduling can be a dealbreaker for most founders - and stop them posting altogether.,&quot;,
                &quot;Implement our purpose-built posting system to eliminate the daily slog.,&quot;,
                &quot;Learn the benefits of community management and captions to maximise engagement.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 25,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;posting-and-scheduling-01&quot;,
                  &quot;title&quot;: &quot;Community Management&quot;,
                  &quot;subtitle&quot;: &quot;The dos and don&apos;ts of managing your community.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;posting-and-scheduling-02&quot;,
                  &quot;title&quot;: &quot;Scheduling&quot;,
                  &quot;subtitle&quot;: &quot;Learn our scheduling process that will remove hours from your week.&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;posting-and-scheduling-03&quot;,
                  &quot;title&quot;: &quot;Debunking the Myths&quot;,
                  &quot;subtitle&quot;: &quot;Tackle the myths around posting and scheduling.&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;posting-and-scheduling-04&quot;,
                  &quot;title&quot;: &quot;Captions &amp; Interaction&quot;,
                  &quot;subtitle&quot;: &quot;Use captions and interaction to boost retention and go VIRAL.&quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;helpful-formats&quot;,
              &quot;title&quot;: &quot;Helpful Formats&quot;,
              &quot;subtitle&quot;: &quot;It&apos;s time to talk video. Specifically: video formats - and how you can use them.  &quot;,
              &quot;icon&quot;: &quot;formats&quot;,
              &quot;color&quot;: &quot;#ffcc00&quot;,
              &quot;thumbnail&quot;: &quot;helpful-formats.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn about the 5 most popular formats on short form, and what to take from them.&quot;,
                &quot;Use these formats for maximum impact (and minimal effort).&quot;,
                &quot;Learn how to find, and create your own formats.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;,
                &quot;The Editor&quot;
              ],
              &quot;duration&quot;: 39,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;helpful-formats-01&quot;,
                  &quot;title&quot;: &quot;Understanding Formats: Intro&quot;,
                  &quot;subtitle&quot;: &quot;What is a format and why would you use one?&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;helpful-formats-02&quot;,
                  &quot;title&quot;: &quot;Format #1: Reacts&quot;,
                  &quot;subtitle&quot;: &quot;The reaction video: when, where and why should you use them?&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;helpful-formats-03&quot;,
                  &quot;title&quot;: &quot;Format #2: The Visual Pacifier&quot;,
                  &quot;subtitle&quot;: &quot;Why slime slaps. How to use this type of visual hook to keep people watching.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;helpful-formats-04&quot;,
                  &quot;title&quot;: &quot;Format #3: The Listicle&quot;,
                  &quot;subtitle&quot;: &quot;Use the age old list to your advantage - and the science for listicles on short form specifically. &quot;,
                  &quot;duration&quot;: 15,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;helpful-formats-05&quot;,
                  &quot;title&quot;: &quot;Format #4: The Podcast Clip&quot;,
                  &quot;subtitle&quot;: &quot;Everyone&apos;s favourite. But should it be? Understand the right time to use podcasts for short-form content.&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;helpful-formats-06&quot;,
                  &quot;title&quot;: &quot;Format #5: The Green Screen&quot;,
                  &quot;subtitle&quot;: &quot;When to use it, and when not to.&quot;,
                  &quot;duration&quot;: 8,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;building-your-content-strategy&quot;,
              &quot;title&quot;: &quot;Building Your Content Strategy&quot;,
              &quot;subtitle&quot;: &quot;Strategy. The what, how, why, when and where of short form content (this one&apos;s important).&quot;,
              &quot;icon&quot;: &quot;strategy&quot;,
              &quot;color&quot;: &quot;#ffcc00&quot;,
              &quot;thumbnail&quot;: &quot;building-your-content-strategy.jpg&quot;,
              &quot;points&quot;: [
                &quot;Follow our systematic approach of pillars, topics and buckets.,&quot;,
                &quot;Learn how to customise it to your needs. &amp;,&quot;,
                &quot;At the end of this module you&apos;ll have your own *unique* and *personal* strategy ready to start posting NOW.,&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 34,
              &quot;founderMustWatch&quot;: true,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;building-your-content-strategy-01&quot;,
                  &quot;title&quot;: &quot;Introducing Strategy&quot;,
                  &quot;subtitle&quot;: &quot;Learn our unique framework that will create the core tenets of your strategy.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;building-your-content-strategy-02&quot;,
                  &quot;title&quot;: &quot;Creating Your Pillars&quot;,
                  &quot;subtitle&quot;: &quot;Establish the core of what you want to be known for on short form.&quot;,
                  &quot;duration&quot;: 7,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;building-your-content-strategy-03&quot;,
                  &quot;title&quot;: &quot;Developing Topics&quot;,
                  &quot;subtitle&quot;: &quot;Expand that core into the deeper topics you want to talk about. &quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;building-your-content-strategy-04&quot;,
                  &quot;title&quot;: &quot;Using Buckets&quot;,
                  &quot;subtitle&quot;: &quot;Turn those topics into content buckets, for that combination of variety and consistency.&quot;,
                  &quot;duration&quot;: 20,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;crafting-compelling-hooks&quot;,
              &quot;title&quot;: &quot;Crafting Compelling Hooks&quot;,
              &quot;subtitle&quot;: &quot;The most important part of your video: How to master the hook. (Sorry, no templates)&quot;,
              &quot;icon&quot;: &quot;hook&quot;,
              &quot;color&quot;: &quot;#50e3c2&quot;,
              &quot;thumbnail&quot;: &quot;crafting-compelling-hooks.jpg&quot;,
              &quot;points&quot;: [
                &quot;Everyone gets &apos;hooks&apos; completely wrong - and it&apos;s why their failing.&quot;,
                &quot;Learn the techniques that capture viewers in the first 3 seconds (they&apos;re not what you think)&quot;,
                &quot;And master how to actually deliver them effectively.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Founder&quot;,
                &quot;The Creator&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;,
                &quot;The Editor&quot;
              ],
              &quot;duration&quot;: 34,
              &quot;founderMustWatch&quot;: true,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;crafting-compelling-hooks-01&quot;,
                  &quot;title&quot;: &quot;Introduction&quot;,
                  &quot;subtitle&quot;: &quot;The most important part of your short form content: what are they? How do you get them right?&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;crafting-compelling-hooks-02&quot;,
                  &quot;title&quot;: &quot;Using Clarity and Intrigue&quot;,
                  &quot;subtitle&quot;: &quot;Sparking curiosity by being as clear as possible... we&apos;ll explain.&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;crafting-compelling-hooks-03&quot;,
                  &quot;title&quot;: &quot;Creating Authority&quot;,
                  &quot;subtitle&quot;: &quot;Understanding what builds authority and how to apply it to your page&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;crafting-compelling-hooks-04&quot;,
                  &quot;title&quot;: &quot;Developing Delivery&quot;,
                  &quot;subtitle&quot;: &quot;Learn how to deliver to camera&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;crafting-compelling-hooks-05&quot;,
                  &quot;title&quot;: &quot;Text Hook Mastery&quot;,
                  &quot;subtitle&quot;: &quot;The most underused hook on all of short form: learn how to use this one right.&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;crafting-compelling-hooks-06&quot;,
                  &quot;title&quot;: &quot;Visual Hook Mastery&quot;,
                  &quot;subtitle&quot;: &quot;A picture speaks 1000 words - so a video must speak millions? Don&apos;t forget about the visuals when stopping the scroll&quot;,
                  &quot;duration&quot;: 9,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;scripting-fundamentals&quot;,
              &quot;title&quot;: &quot;Scripting Fundamentals&quot;,
              &quot;subtitle&quot;: &quot;So you&apos;ve got people hooked - how do you get them to stay for the rest of your video? &quot;,
              &quot;icon&quot;: &quot;script&quot;,
              &quot;color&quot;: &quot;#50e3c2&quot;,
              &quot;thumbnail&quot;: &quot;scripting-fundamentals.jpg&quot;,
              &quot;points&quot;: [
                &quot;Throw everything you know about copywriting out the window,&quot;,
                &quot;In this module you&apos;ll master the 6 rules of scripting to maximise retention,&quot;,
                &quot;And learn to write in a way that actually sounds like YOU.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 22,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;scripting-fundamentals-01&quot;,
                  &quot;title&quot;: &quot;Rule 1: Write Simply&quot;,
                  &quot;subtitle&quot;: &quot;The first rule of script writing? Keep it simple. &quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;scripting-fundamentals-02&quot;,
                  &quot;title&quot;: &quot;Rule 2: Be Concise&quot;,
                  &quot;subtitle&quot;: &quot;The second rule of script writing? Time is money, get to the point.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;scripting-fundamentals-03&quot;,
                  &quot;title&quot;: &quot;Rule 3: Use Rehooks&quot;,
                  &quot;subtitle&quot;: &quot;The third rule of script writing? We&apos;ll get to that later... (it&apos;s rehooks)&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;scripting-fundamentals-04&quot;,
                  &quot;title&quot;: &quot;Rule 4: Be Authentic&quot;,
                  &quot;subtitle&quot;: &quot;The fourth rule of script writing? Sound like a human being. &quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;scripting-fundamentals-05&quot;,
                  &quot;title&quot;: &quot;Rule 5: Tell A Story&quot;,
                  &quot;subtitle&quot;: &quot;The fifth rule of script writing? You&apos;re here to entertain people... tell a story.&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;scripting-fundamentals-06&quot;,
                  &quot;title&quot;: &quot;Rule 6: Would I Watch This?&quot;,
                  &quot;subtitle&quot;: &quot;The sixth rule of script writing? If you don&apos;t like it, no one will.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;scripting-boulder-theory&quot;,
              &quot;title&quot;: &quot;Understanding Attention (Boulder Theory)&quot;,
              &quot;subtitle&quot;: &quot;Noone actually wants to watch your video. Learn how to trick them into it as explained through the Boulder Theory&quot;,
              &quot;icon&quot;: &quot;lightbulb&quot;,
              &quot;color&quot;: &quot;#4a90e2&quot;,
              &quot;thumbnail&quot;: &quot;big-picture.jpg&quot;,
              &quot;points&quot;: [
                &quot;Your audience isn&apos;t as kind as you think.&quot;,
                &quot;Their experience of watching your video is like them pushing a boulder up a hill, literally.&quot;,
                &quot;This is how to use your script to take that weight off.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 20,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;scripting-boulder-theory-01&quot;,
                  &quot;title&quot;: &quot;Scripting Boulder Theory&quot;,
                  &quot;subtitle&quot;: &quot;Understanding the viewer is the way to understand scripting.&quot;,
                  &quot;duration&quot;: 20,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;understanding-the-frame&quot;,
              &quot;title&quot;: &quot;Understanding The Frame&quot;,
              &quot;subtitle&quot;: &quot;A picture speaks 1000 words - communicate the right ones. &quot;,
              &quot;icon&quot;: &quot;frame&quot;,
              &quot;color&quot;: &quot;#4a90e2&quot;,
              &quot;thumbnail&quot;: &quot;understanding-the-frame.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn how to frame your visuals to capture and hold attention.&quot;,
                &quot;Apply the right composition techniques to create a balanced and engaging layout.&quot;,
                &quot;Use visual hierarchy and contrast for effective storytelling.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;,
                &quot;The Editor&quot;
              ],
              &quot;duration&quot;: 15,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;understanding-the-frame-01&quot;,
                  &quot;title&quot;: &quot;Safe Zones &amp; Clutter&quot;,
                  &quot;subtitle&quot;: &quot;Understand the platform safe zones, and to remove what isn&apos;t needed on screen.&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;understanding-the-frame-02&quot;,
                  &quot;title&quot;: &quot;Visual Hierarchy&quot;,
                  &quot;subtitle&quot;: &quot;How to establish a clear order of visual elements to guide the viewer&apos;s eye. &quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;understanding-the-frame-03&quot;,
                  &quot;title&quot;: &quot;Movement &amp; Contrast&quot;,
                  &quot;subtitle&quot;: &quot;How to use dynamic movement and contrast to enhance your visual storytelling, not detract.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;metrics-that-matter&quot;,
              &quot;title&quot;: &quot;Metrics That Matter&quot;,
              &quot;subtitle&quot;: &quot;Likes, comments, shares, etc etc. what on earth do they all mean, and how can you use them to 10x your reach?&quot;,
              &quot;icon&quot;: &quot;metrics&quot;,
              &quot;color&quot;: &quot;#4a90e2&quot;,
              &quot;thumbnail&quot;: &quot;metrics-that-matter.jpg&quot;,
              &quot;points&quot;: [
                &quot;Identify which metrics matter, which metrics don&apos;t (and which are just a nice to have).&quot;,
                &quot;Understand the viewer motivation for each metric specifically: liking, saving, sharing, commenting etc. they&apos;re all different.&quot;,
                &quot;Use this data to optimise your strategy.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 27,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;metrics-that-matter-01&quot;,
                  &quot;title&quot;: &quot;Introducing Metrics&quot;,
                  &quot;subtitle&quot;: &quot;What are the main metrics, and why are they useful?&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;metrics-that-matter-02&quot;,
                  &quot;title&quot;: &quot;Likes&quot;,
                  &quot;subtitle&quot;: &quot;What likes can tell you about your content&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;metrics-that-matter-03&quot;,
                  &quot;title&quot;: &quot;Saves&quot;,
                  &quot;subtitle&quot;: &quot;Why are my saves going up and what does it actually mean?&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;metrics-that-matter-04&quot;,
                  &quot;title&quot;: &quot;Shares&quot;,
                  &quot;subtitle&quot;: &quot;Understand why people share, and get them to do it more. &quot;,
                  &quot;duration&quot;: 9,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;metrics-that-matter-05&quot;,
                  &quot;title&quot;: &quot;Retention&quot;,
                  &quot;subtitle&quot;: &quot;Learn how to study retention graphs to identify issues with your content.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;metrics-that-matter-06&quot;,
                  &quot;title&quot;: &quot;Comments&quot;,
                  &quot;subtitle&quot;: &quot;Why comments are so important and how to drive them.&quot;,
                  &quot;duration&quot;: 7,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;metrics-that-matter-07&quot;,
                  &quot;title&quot;: &quot;Summary&quot;,
                  &quot;subtitle&quot;: &quot;Why understanding metrics can 10x your engagement.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;platform-differences&quot;,
              &quot;title&quot;: &quot;Platform Differences&quot;,
              &quot;subtitle&quot;: &quot;Ok so we&apos;ve got all the tools to make a good video, the strategy to back it - but how does this change platform to platform?&quot;,
              &quot;icon&quot;: &quot;metrics&quot;,
              &quot;color&quot;: &quot;#4a90e2&quot;,
              &quot;thumbnail&quot;: &quot;metrics-that-matter.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn what&apos;s unique about each platform, and what&apos;s the same.&quot;,
                &quot;Understand how audiences don&apos;t change, but how platforms measure their attention does (a bit).&quot;,
                &quot;And learn the universal techniques to captivate audiences - everywhere.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 12,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;platform-differences-01&quot;,
                  &quot;title&quot;: &quot;Understanding Platform Differences&quot;,
                  &quot;subtitle&quot;: &quot;Learn what&apos;s unique about each platform, and how to tailor your strategy.&quot;,
                  &quot;duration&quot;: 12,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;id&quot;: &quot;upskiller-authentic-research-writer&quot;,
          &quot;name&quot;: &quot;Upskiller: The Authentic Researcher Writer&quot;,
          &quot;number&quot;: 1.1,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;advanced-research&quot;,
              &quot;title&quot;: &quot;Advanced Research&quot;,
              &quot;subtitle&quot;: &quot;So you&apos;ve got your research down, the question is now what to keep, and what not to.&quot;,
              &quot;icon&quot;: &quot;pencil&quot;,
              &quot;color&quot;: &quot;#ffcc00&quot;,
              &quot;thumbnail&quot;: &quot;research.jpg&quot;,
              &quot;points&quot;: [
                &quot;Concentrate your research down so each batch is maximum value, minimum fluff.&quot;,
                &quot;Master advanced research techniques.&quot;,
                &quot;Refine your research process so no time is wasted.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 10,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;advanced_research_01&quot;,
                  &quot;title&quot;: &quot;Advanced Research&quot;,
                  &quot;subtitle&quot;: &quot;How to create the most refined batch possible: why is it good? &quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Tia&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;research-basics&quot;,
              &quot;title&quot;: &quot;Basic Research&quot;,
              &quot;subtitle&quot;: &quot;How to research content ideas efficiently - like a pro .&quot;,
              &quot;icon&quot;: &quot;pencil&quot;,
              &quot;color&quot;: &quot;#ffcc00&quot;,
              &quot;thumbnail&quot;: &quot;research.jpg&quot;,
              &quot;points&quot;: [
                &quot;Master our unique research techniques to generate innovative content ideas, all the time.&quot;,
                &quot;Learn to refine your algorithm so your research comes to you.&quot;,
                &quot;Which AI tools are actually good.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 23,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;research-basics-01&quot;,
                  &quot;title&quot;: &quot;Generating Ideas&quot;,
                  &quot;subtitle&quot;: &quot;Master the techniques to brainstorm and develop innovative content ideas, all the time.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Tia&quot;
                },
                {
                  &quot;id&quot;: &quot;research-basics-02&quot;,
                  &quot;title&quot;: &quot;Keyword Mapping&quot;,
                  &quot;subtitle&quot;: &quot;Research on short form platforms is hard, here&apos;s how to best do it with keyword mapping. &quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Tia&quot;
                },
                {
                  &quot;id&quot;: &quot;research-basics-03&quot;,
                  &quot;title&quot;: &quot;Tailoring Your Algorithm&quot;,
                  &quot;subtitle&quot;: &quot;Let your research come to you.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Tia&quot;
                },
                {
                  &quot;id&quot;: &quot;research-basics-04&quot;,
                  &quot;title&quot;: &quot;Varied Inspiration&quot;,
                  &quot;subtitle&quot;: &quot;There is no new idea under the sun. Inspiration is everywhere (but especially in these places)&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Tia&quot;
                },
                {
                  &quot;id&quot;: &quot;research-basics-05&quot;,
                  &quot;title&quot;: &quot;Targeted Search&quot;,
                  &quot;subtitle&quot;: &quot;The second half of research: How to improve the ideas you already have.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Tia&quot;
                },
                {
                  &quot;id&quot;: &quot;research-basics-06&quot;,
                  &quot;title&quot;: &quot;Refining Your Script&quot;,
                  &quot;subtitle&quot;: &quot;And how to refine your research for maximum impact.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Tia&quot;
                },
                {
                  &quot;id&quot;: &quot;research-basics-07&quot;,
                  &quot;title&quot;: &quot;The Research Toolkit&quot;,
                  &quot;subtitle&quot;: &quot;All the tools you can use to streamline the process (yes, there&apos;s a bit of AI)&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;templates&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Tia&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;repurposing&quot;,
              &quot;title&quot;: &quot;Repurposing&quot;,
              &quot;subtitle&quot;: &quot;You don&apos;t have to reinvent the wheel: how to use and reuse all types of content for short form.&quot;,
              &quot;icon&quot;: &quot;recycle&quot;,
              &quot;color&quot;: &quot;#30d158&quot;,
              &quot;thumbnail&quot;: &quot;repurposing.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn how to identify content with a high-potential for your own strategy.&quot;,
                &quot;Learn how to turn other short form videos, long form videos and articles into your own short form content.&quot;,
                &quot;Understand *why* something is good, steal like an artist.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;,
                &quot;The Editor&quot;
              ],
              &quot;duration&quot;: 24,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;repurposing-01&quot;,
                  &quot;title&quot;: &quot;Repurposing Introduction&quot;,
                  &quot;subtitle&quot;: &quot;How to steal like an artist.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;repurposing-02&quot;,
                  &quot;title&quot;: &quot;From Short-Form&quot;,
                  &quot;subtitle&quot;: &quot;How to take inspiration &amp; use what works best from pre-validated videos.&quot;,
                  &quot;duration&quot;: 12,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;repurposing-03&quot;,
                  &quot;title&quot;: &quot;From Long-Form&quot;,
                  &quot;subtitle&quot;: &quot;The fundamentals of translating Podcasts, Youtube videos, or any longer form clip into short form.&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;repurposing-04&quot;,
                  &quot;title&quot;: &quot;From Articles&quot;,
                  &quot;subtitle&quot;: &quot;Adapt written articles for the short form. &quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;repurposing-linkedin&quot;,
              &quot;title&quot;: &quot;Repurposing LinkedIn&quot;,
              &quot;subtitle&quot;: &quot;A founder favourite: turn your LinkedIn content into short form videos that are actually entertaining - 3 worked examples&quot;,
              &quot;icon&quot;: &quot;pencil&quot;,
              &quot;color&quot;: &quot;#30d158&quot;,
              &quot;thumbnail&quot;: &quot;repurposing.jpg&quot;,
              &quot;points&quot;: [
                &quot;You don&apos;t have to reinvent the wheel every time you write a short form video.&quot;,
                &quot;Here are three typical linkedin posts and 3 worked examples for how to convert it for short form.&quot;,
                &quot;PS. No linkedin influencers were harmed in the making of this module.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Founder&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 69,
              &quot;founderMustWatch&quot;: true,
              &quot;entrepreneurSpecific&quot;: true,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;repurposing-linkedin-01&quot;,
                  &quot;title&quot;: &quot;How to make LinkedIn, work on TikTok&quot;,
                  &quot;subtitle&quot;: &quot;LinkedIn is a different beast - but that doesn&apos;t mean you can&apos;t repurpose from it.&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;repurposing-linkedin-02&quot;,
                  &quot;title&quot;: &quot;Repurposing LinkedIn Example 1&quot;,
                  &quot;subtitle&quot;: &quot;How to convert the listicle&quot;,
                  &quot;duration&quot;: 37,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;repurposing-linkedin-03&quot;,
                  &quot;title&quot;: &quot;Repurposing LinkedIn Example 2&quot;,
                  &quot;subtitle&quot;: &quot;How to convert the case study &quot;,
                  &quot;duration&quot;: 16,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;repurposing-linkedin-04&quot;,
                  &quot;title&quot;: &quot;Repurposing LinkedIn Example 3&quot;,
                  &quot;subtitle&quot;: &quot;How to convert the &apos;crazy&apos; business story&quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;id&quot;: &quot;upskiller-shorts-ready-videographer&quot;,
          &quot;name&quot;: &quot;Upskiller: The Shorts Ready Videographer&quot;,
          &quot;number&quot;: 1.2,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;upskiller-intro&quot;,
              &quot;title&quot;: &quot;Upskiller Introduction&quot;,
              &quot;subtitle&quot;: &quot;Mastering techniques to capture professional-quality short form video&quot;,
              &quot;icon&quot;: &quot;camera&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;shooting-for-short-form.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn essential techniques for shooting high-quality short form videos.&quot;,
                &quot;Master camera settings and lighting.&quot;,
                &quot;Understand the nuances of shooting and studio setups.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 1,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;upskiller-intro-01&quot;,
                  &quot;title&quot;: &quot;Introduction&quot;,
                  &quot;subtitle&quot;: &quot;Overview of short form shooting techniques and best practices.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Aydan&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;solo-shooter&quot;,
              &quot;title&quot;: &quot;Solo Shooting for Short Form&quot;,
              &quot;subtitle&quot;: &quot;Mastering techniques to capture professional-quality short form video, with just a phone&quot;,
              &quot;icon&quot;: &quot;camera&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;shooting-for-short-form.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn essential techniques for shooting high-quality short form video, on your phone.&quot;,
                &quot;Master your phone settings and basic lighting.&quot;,
                &quot;Understand the nuances of solo shooting and studio setups.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 14,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;solo-shooter-01&quot;,
                  &quot;title&quot;: &quot;Shooting Solo&quot;,
                  &quot;subtitle&quot;: &quot;Achieve professional results through self-recording and solo shooting.&quot;,
                  &quot;duration&quot;: 14,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Aydan&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;videography-pro&quot;,
              &quot;title&quot;: &quot;Videography Pro&quot;,
              &quot;subtitle&quot;: &quot;The advanced techniques to capture professional-quality short form video.&quot;,
              &quot;icon&quot;: &quot;camera&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;shooting-for-short-form.jpg&quot;,
              &quot;points&quot;: [
                &quot;Advanced techniques for shooting high-quality short form videos.&quot;,
                &quot;Master camera settings and lighting.&quot;,
                &quot;Understand the nuances of solo shooting and studio setups.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 0,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;videography-pro-01&quot;,
                  &quot;title&quot;: &quot;Videography Pro&quot;,
                  &quot;subtitle&quot;: &quot;Learn the short form shooting techniques and best practices.&quot;,
                  &quot;duration&quot;: null,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Aydan&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;camera-confidence&quot;,
              &quot;title&quot;: &quot;Camera Confidence&quot;,
              &quot;subtitle&quot;: &quot;How to actually be in front of a camera, and look good.&quot;,
              &quot;icon&quot;: &quot;camera&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;camera-confidence.jpg&quot;,
              &quot;points&quot;: [
                &quot;Tips and tricks to come across well on camera.&quot;,
                &quot;And how to make the talent come across well too.&quot;,
                &quot;The reality of short form filming (don&apos;t be scared).&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 6,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;camera-confidence-01&quot;,
                  &quot;title&quot;: &quot;Camera Confidence&quot;,
                  &quot;subtitle&quot;: &quot;How to be in front of camera, and still come across like yourself (not a news presenter)&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Aydan&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;studio-setup&quot;,
              &quot;title&quot;: &quot;Setting Up Your Studio&quot;,
              &quot;subtitle&quot;: &quot;How to make a professional studio set up.&quot;,
              &quot;icon&quot;: &quot;camera&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;camera-confidence.jpg&quot;,
              &quot;points&quot;: [
                &quot;What to buy and where to buy it&quot;,
                &quot;The basics of a good studio setup.&quot;,
                &quot;How to install it all.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 0,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;studio-setup-01&quot;,
                  &quot;title&quot;: &quot;Setting Up Your Studio&quot;,
                  &quot;subtitle&quot;: &quot;Guidelines for creating a professional home studio for video production.&quot;,
                  &quot;duration&quot;: null,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Aydan&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;producing-podcast-clips&quot;,
              &quot;title&quot;: &quot;Producing a Podcast for Clips&quot;,
              &quot;subtitle&quot;: &quot;How to produce a long form podcast, for short form clips.&quot;,
              &quot;icon&quot;: &quot;camera&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;camera-confidence.jpg&quot;,
              &quot;points&quot;: [
                &quot;The essentials of podcast clips&quot;,
                &quot;How to control the clipping, before any filming is done.&quot;,
                &quot;Make podcast clips guaranteed to go viral.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 7,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;producing-podcast-clips-01&quot;,
                  &quot;title&quot;: &quot;Producing a Podcast for Clips&quot;,
                  &quot;subtitle&quot;: &quot;Techniques for capturing engaging content from podcast recordings.&quot;,
                  &quot;duration&quot;: 7,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;workshop&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Aydan&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;id&quot;: &quot;upskiller-vertical-video-editors&quot;,
          &quot;name&quot;: &quot;Upskiller: Vertical Video Editors&quot;,
          &quot;number&quot;: 1.3,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;editing-basics&quot;,
              &quot;title&quot;: &quot;Editing Basics&quot;,
              &quot;subtitle&quot;: &quot;The basics of turning raw footage into retention optimised content through our in house editing framework.&quot;,
              &quot;icon&quot;: &quot;scissors&quot;,
              &quot;color&quot;: &quot;#34c759&quot;,
              &quot;thumbnail&quot;: &quot;editing.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn the editing techniques that ADD (and don&apos;t detract) from your content.&quot;,
                &quot;Understand the art of &apos;unseen&apos; editing in short form.&quot;,
                &quot;Master advanced editing skills to nail the final deliverable efficiently.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Editor&quot;
              ],
              &quot;duration&quot;: 0,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;editing-basics-01&quot;,
                  &quot;title&quot;: &quot;Editing Basics&quot;,
                  &quot;subtitle&quot;: &quot;Understand the basics, for speed and efficiency.&quot;,
                  &quot;duration&quot;: 0,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;workshop&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;editing-advanced&quot;,
              &quot;title&quot;: &quot;Editing Advanced&quot;,
              &quot;subtitle&quot;: &quot;Advanced techniques to edit efficiently&quot;,
              &quot;icon&quot;: &quot;scissors&quot;,
              &quot;color&quot;: &quot;#34c759&quot;,
              &quot;thumbnail&quot;: &quot;editing.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn our in house editing techniques so your content &apos;feels&apos; professional.&quot;,
                &quot;Master the art of &apos;unseen&apos; editing in short form.&quot;,
                &quot;Get to grips with our in house editing pipeline to generate hundreds of videos a month.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Editor&quot;
              ],
              &quot;duration&quot;: 0,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;editing-advanced-01&quot;,
                  &quot;title&quot;: &quot;Advanced Editing Techniques&quot;,
                  &quot;subtitle&quot;: &quot;Building on basics, find the 1% with training for pros.&quot;,
                  &quot;duration&quot;: 0,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;workshop&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;editing-team&quot;,
              &quot;title&quot;: &quot;Editing Team&quot;,
              &quot;subtitle&quot;: &quot;Our in house system for a team to edit content: efficiently and proffessionally&quot;,
              &quot;icon&quot;: &quot;scissors&quot;,
              &quot;color&quot;: &quot;#34c759&quot;,
              &quot;thumbnail&quot;: &quot;editing.jpg&quot;,
              &quot;points&quot;: [
                &quot;Systematise your in house editing team so they&apos;re actually efficient.&quot;,
                &quot;Exclusive access to our in house editing pipeline.&quot;,
                &quot;We learnt this one the hard way (so you don&apos;t have to).&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Editor&quot;
              ],
              &quot;duration&quot;: 0,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;editing-team-01&quot;,
                  &quot;title&quot;: &quot;Team Collaboration&quot;,
                  &quot;subtitle&quot;: &quot;The best (and we think the only) system for team short form edit collaboration.&quot;,
                  &quot;duration&quot;: 0,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;podcast-clipping&quot;,
              &quot;title&quot;: &quot;Podcast Clipping&quot;,
              &quot;subtitle&quot;: &quot;The best ways to cut up a podcast for short form clips&quot;,
              &quot;icon&quot;: &quot;scissors&quot;,
              &quot;color&quot;: &quot;#34C759&quot;,
              &quot;thumbnail&quot;: &quot;editing.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn advanced editing techniques&quot;,
                &quot;Systematise podcast clipping so its actually efficient&quot;,
                &quot;When to use AI (and when not to)&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Editor&quot;
              ],
              &quot;duration&quot;: 0,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;podcast-clipping-01&quot;,
                  &quot;title&quot;: &quot;Podcast Clipping&quot;,
                  &quot;subtitle&quot;: &quot;Extract key moments from podcasts and transform them into viral clips&quot;,
                  &quot;duration&quot;: null,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;id&quot;: &quot;pr-authority&quot;,
          &quot;name&quot;: &quot;PR and Authority&quot;,
          &quot;number&quot;: 2,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;authority-brand-holism&quot;,
              &quot;title&quot;: &quot;Authority and Brand Holism&quot;,
              &quot;subtitle&quot;: &quot;How to become an authority in your niche on short-form.&quot;,
              &quot;icon&quot;: &quot;authority&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;scripting-for-authority.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn how to convey authority in every video.&quot;,
                &quot;Master the principles that elevate your personal brand.&quot;,
                &quot;Become &apos;the guy who&apos;.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;
              ],
              &quot;duration&quot;: 33,
              &quot;founderMustWatch&quot;: true,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;authority-brand-holism-01&quot;,
                  &quot;title&quot;: &quot;Introduction&quot;,
                  &quot;subtitle&quot;: &quot;Intro to authority and brand holism on short form - how to become an authority in your niche.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;authority-brand-holism-02&quot;,
                  &quot;title&quot;: &quot;Scripting Authority&quot;,
                  &quot;subtitle&quot;: &quot;The 6 ways to script authority.&quot;,
                  &quot;duration&quot;: 18,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;authority-brand-holism-03&quot;,
                  &quot;title&quot;: &quot;Brand Holism&quot;,
                  &quot;subtitle&quot;: &quot;Understanding your brand and how to represent it.&quot;,
                  &quot;duration&quot;: 13,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;managing-comments&quot;,
              &quot;title&quot;: &quot;Managing Comments&quot;,
              &quot;subtitle&quot;: &quot;The eyes are the window to the soul. The comments are the window to your audience. This is how to manage them to boost your own authority. &quot;,
              &quot;icon&quot;: &quot;comments&quot;,
              &quot;color&quot;: &quot;#30d158&quot;,
              &quot;thumbnail&quot;: &quot;managing-comments.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn the importance, and value that can come from effectively engaging with your audience in the comments.&quot;,
                &quot;Understand viewer emotion to build a supportive community.&quot;,
                &quot;Develop strategies to moderate debates and maintain constructive dialogue (for when sh*t inevitably hits the fan)&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 39,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;managing-comments-01&quot;,
                  &quot;title&quot;: &quot;Introduction&quot;,
                  &quot;subtitle&quot;: &quot;Why you need to manage comments, and their impact on engagement.&quot;,
                  &quot;duration&quot;: 11,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;managing-comments-02&quot;,
                  &quot;title&quot;: &quot;Using Emotion&quot;,
                  &quot;subtitle&quot;: &quot;How to use emotional cues (in your script and your replies) to enhance community interaction.&quot;,
                  &quot;duration&quot;: 18,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;managing-comments-03&quot;,
                  &quot;title&quot;: &quot;Managing Debate&quot;,
                  &quot;subtitle&quot;: &quot;If things go wrong, that&apos;s ok, it&apos;s part of the game. This is how to navigate and moderate contentious discussions.&quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;id&quot;: &quot;advanced-theory&quot;,
          &quot;name&quot;: &quot;Advanced Theory&quot;,
          &quot;number&quot;: 3,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;using-complex-formats&quot;,
              &quot;title&quot;: &quot;Using Complex Formats&quot;,
              &quot;subtitle&quot;: &quot;All those formats we covered last time? Let&apos;s take it up a notch. Here&apos;s how to combine formats to create *original* content that flies.&quot;,
              &quot;icon&quot;: &quot;remix&quot;,
              &quot;color&quot;: &quot;#ff9500&quot;,
              &quot;thumbnail&quot;: &quot;using-complex-formats.jpg&quot;,
              &quot;points&quot;: [
                &quot;Combining formats can make your content more unique and engaging.&quot;,
                &quot;But combining the wrong ones, can just confuse your audience.&quot;,
                &quot;Here&apos;s how to break expectations and captivate your audience.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 18,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;using-complex-formats-01&quot;,
                  &quot;title&quot;: &quot;Remixing Formats&quot;,
                  &quot;subtitle&quot;: &quot;How to combine multiple formats to create compelling, fresh and unique content.&quot;,
                  &quot;duration&quot;: 9,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;using-complex-formats-02&quot;,
                  &quot;title&quot;: &quot;Breaking Expectations&quot;,
                  &quot;subtitle&quot;: &quot;How to surprise your audience by defying conventional content norms.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;using-complex-formats-03&quot;,
                  &quot;title&quot;: &quot;The Unexpected Pivot&quot;,
                  &quot;subtitle&quot;: &quot;Make strategic last-minute changes that drive engagement.&quot;,
                  &quot;duration&quot;: 7,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;data-led-iteration&quot;,
              &quot;title&quot;: &quot;Data Led Iteration&quot;,
              &quot;subtitle&quot;: &quot;No strategy starts off perfect, this module covers how to use data to constantly iterate and improve.&quot;,
              &quot;icon&quot;: &quot;data&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;data-led-iteration.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn what to do when it all goes wrong.&quot;,
                &quot;Analyse engagement data like retention and comments to identify what needs improving&quot;,
                &quot;Spoiler: It&apos;s not always what you&apos;d think.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 57,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;data-led-iteration-01&quot;,
                  &quot;title&quot;: &quot;What To Do When It Goes Wrong&quot;,
                  &quot;subtitle&quot;: &quot;The steps to diagnose and address under-performance&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;data-led-iteration-02&quot;,
                  &quot;title&quot;: &quot;Studying Retention&quot;,
                  &quot;subtitle&quot;: &quot;How to iterate towards better retention.&quot;,
                  &quot;duration&quot;: 18,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;data-led-iteration-03&quot;,
                  &quot;title&quot;: &quot;Using Comments&quot;,
                  &quot;subtitle&quot;: &quot;Creating content that incites comments.&quot;,
                  &quot;duration&quot;: 14,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;data-led-iteration-04&quot;,
                  &quot;title&quot;: &quot;Followers, Saves and Shares&quot;,
                  &quot;subtitle&quot;: &quot;Diving into the rest of the metrics&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;data-led-iteration-05&quot;,
                  &quot;title&quot;: &quot;Saving Your Page&quot;,
                  &quot;subtitle&quot;: &quot;Using data to turn around a struggling page.&quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;data-led-iteration-06&quot;,
                  &quot;title&quot;: &quot;Conclusion&quot;,
                  &quot;subtitle&quot;: &quot;Why data is your insight into the audience. &quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;using-nuanced-hooks&quot;,
              &quot;title&quot;: &quot;Using Nuanced Hooks&quot;,
              &quot;subtitle&quot;: &quot;We said no templates, no hook lists - we weren&apos;t lying - but there are some structures that just WORK.&quot;,
              &quot;icon&quot;: &quot;advanced-hook&quot;,
              &quot;color&quot;: &quot;#ff9500&quot;,
              &quot;thumbnail&quot;: &quot;using-nuanced-hooks.jpg&quot;,
              &quot;points&quot;: [
                &quot;Understand the hook structures that hit, every time - because they&apos;re rooted in psychology,&quot;,
                &quot;Why we have SUCH an aversion to hook lists (because they tire quickly),&quot;,
                &quot;And avoid clickbait, whilst nailing hooks that really do the job.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 25,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;using-nuanced-hooks-01&quot;,
                  &quot;title&quot;: &quot;Introduction&quot;,
                  &quot;subtitle&quot;: &quot;Overview of nuanced hook strategies and their benefits.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;using-nuanced-hooks-02&quot;,
                  &quot;title&quot;: &quot;BIG small&quot;,
                  &quot;subtitle&quot;: &quot;Why the BIG small structure hits every time.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;using-nuanced-hooks-03&quot;,
                  &quot;title&quot;: &quot;False Assumptions&quot;,
                  &quot;subtitle&quot;: &quot;Why challenging a viewers expectation can drive comments and retention&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;using-nuanced-hooks-04&quot;,
                  &quot;title&quot;: &quot;The Impossible Question&quot;,
                  &quot;subtitle&quot;: &quot;Why leading with questions on the edge of believability keeps viewers guessing.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;using-nuanced-hooks-05&quot;,
                  &quot;title&quot;: &quot;The Contrarian Statement&quot;,
                  &quot;subtitle&quot;: &quot;Rage bait, without the morality issues.&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;using-nuanced-hooks-06&quot;,
                  &quot;title&quot;: &quot;This Just Happened?!&quot;,
                  &quot;subtitle&quot;: &quot;We JUST updated this module , you have to watch it now (people respond to urgency)&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;script-mastery&quot;,
              &quot;title&quot;: &quot;Script Mastery&quot;,
              &quot;subtitle&quot;: &quot;If you paid attention if basics, you know how to write a good script, but how do you write a great one? You pre-empt the audience.&quot;,
              &quot;icon&quot;: &quot;script-pro&quot;,
              &quot;color&quot;: &quot;#50e3c2&quot;,
              &quot;thumbnail&quot;: &quot;script-mastery.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn the hacks that top creators use to generate engagement in every single script.&quot;,
                &quot;Pre-empt audience responses to drive comments every time.&quot;,
                &quot;Use emotional techniques to drive FOMO.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 37,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;script-mastery-01&quot;,
                  &quot;title&quot;: &quot;Intro&quot;,
                  &quot;subtitle&quot;: &quot;How to become a master of scripting - for engagement.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;script-mastery-02&quot;,
                  &quot;title&quot;: &quot;Getting it Wrong (On Purpose)&quot;,
                  &quot;subtitle&quot;: &quot;How a mistake can become an asset.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;script-mastery-03&quot;,
                  &quot;title&quot;: &quot;The FOMO Comment Section&quot;,
                  &quot;subtitle&quot;: &quot;No-one wants to feel left out - use that to your advantage.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;script-mastery-04&quot;,
                  &quot;title&quot;: &quot;Using Controversy&quot;,
                  &quot;subtitle&quot;: &quot;Incorporate controlled controversy to spark conversations (ethically, of course)&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;script-mastery-05&quot;,
                  &quot;title&quot;: &quot;The Best Type Of Comment&quot;,
                  &quot;subtitle&quot;: &quot;Not all comments are created equal - this type drives the most retention&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;script-mastery-06&quot;,
                  &quot;title&quot;: &quot;Optimising For Conversion&quot;,
                  &quot;subtitle&quot;: &quot;The secret to CTAs that actually work.&quot;,
                  &quot;duration&quot;: 9,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;script-mastery-07&quot;,
                  &quot;title&quot;: &quot;Optimising For Watch Time&quot;,
                  &quot;subtitle&quot;: &quot;The final step in creating a video that is retention optimised.&quot;,
                  &quot;duration&quot;: 9,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;advanced-metrics-analytics&quot;,
              &quot;title&quot;: &quot;Advanced Metrics &amp; Analytics&quot;,
              &quot;subtitle&quot;: &quot;The metrics we taught you earlier? There&apos;s actually a few more... promise we&apos;re done after this.&quot;,
              &quot;icon&quot;: &quot;analytics&quot;,
              &quot;color&quot;: &quot;#4a90e2&quot;,
              &quot;thumbnail&quot;: &quot;advanced-metrics-analytics.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn the exact reasons certain metrics peak and trough and a framework to manipulate them.&quot;,
                &quot;Learn how to convert followers through data.&quot;,
                &quot;Analyse watch time, demographics, and traffic sources to fundamentally steer your approach.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 45,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;advanced-metrics-analytics-01&quot;,
                  &quot;title&quot;: &quot;Introduction to Advanced Metrics&quot;,
                  &quot;subtitle&quot;: &quot;It&apos;s time to go deeper on metrics.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;advanced-metrics-analytics-02&quot;,
                  &quot;title&quot;: &quot;Follower Conversion&quot;,
                  &quot;subtitle&quot;: &quot;How to track and maximise follower conversion.&quot;,
                  &quot;duration&quot;: 16,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;advanced-metrics-analytics-03&quot;,
                  &quot;title&quot;: &quot;Completed Watch Time&quot;,
                  &quot;subtitle&quot;: &quot;Watch time vs retention, what&apos;s more important and how can I use both?&quot;,
                  &quot;duration&quot;: 9,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;advanced-metrics-analytics-04&quot;,
                  &quot;title&quot;: &quot;Demographics&quot;,
                  &quot;subtitle&quot;: &quot;What demographics mean about your page, your views, and the creator fund. &quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;advanced-metrics-analytics-05&quot;,
                  &quot;title&quot;: &quot;Understanding Traffic Sources&quot;,
                  &quot;subtitle&quot;: &quot;Learn how people find your content, and how it will impact reach.&quot;,
                  &quot;duration&quot;: 13,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;lofi-hifi-paradox&quot;,
              &quot;title&quot;: &quot;The importance of Lo-Fi and the Founder&apos;s Paradox&quot;,
              &quot;subtitle&quot;: &quot;Short form platforms don&apos;t get the respect they deserve. Here&apos;s how to marry lo-fi with brand vision to solve the &apos;founder&apos;s paradox&apos;&quot;,
              &quot;icon&quot;: &quot;authentic&quot;,
              &quot;color&quot;: &quot;#ff9500&quot;,
              &quot;thumbnail&quot;: &quot;content-fidelity.jpg&quot;,
              &quot;points&quot;: [
                &quot;Respect the platforms your on: they&apos;re annoying, but there&apos;s a lot to learn from influencers.&quot;,
                &quot;Balance production quality with genuine storytelling.&quot;,
                &quot;Ensure your content remains true to your brand voice.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 63,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;lofi-hifi-paradox-01&quot;,
                  &quot;title&quot;: &quot;Semantics: Understanding Content Fidelity&quot;,
                  &quot;subtitle&quot;: &quot;What do we even mean by lo-fi and hi-fi? How does this apply to video? &quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;lofi-hifi-paradox-02&quot;,
                  &quot;title&quot;: &quot;Lo-Fi: Respecting the Medium - part 1&quot;,
                  &quot;subtitle&quot;: &quot;Adopt a lo-fi approach to enhance authenticity without overproduction&quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;lofi-hifi-paradox-03&quot;,
                  &quot;title&quot;: &quot;Lo-Fi: Respecting the Medium - part 2&quot;,
                  &quot;subtitle&quot;: &quot;Adopt a lo-fi approach to enhance authenticity without overproduction&quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;lofi-hifi-paradox-04&quot;,
                  &quot;title&quot;: &quot;Lo-Fi: Respecting the Medium - part 3&quot;,
                  &quot;subtitle&quot;: &quot;Adopt a lo-fi approach to enhance authenticity without overproduction&quot;,
                  &quot;duration&quot;: 9,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;lofi-hifi-paradox-05&quot;,
                  &quot;title&quot;: &quot;Hi-Fi: Navigating the Founder&apos;s Paradox&quot;,
                  &quot;subtitle&quot;: &quot;Balance high production values with authenticity to meet founder expectations&quot;,
                  &quot;duration&quot;: 28,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;serialisation&quot;,
              &quot;title&quot;: &quot;Serialisation&quot;,
              &quot;subtitle&quot;: &quot;Finally, you&apos;ve had a viral video. Here&apos;s how to create consistent series that build audience anticipation and loyalty.&quot;,
              &quot;icon&quot;: &quot;series&quot;,
              &quot;color&quot;: &quot;#ffcc00&quot;,
              &quot;thumbnail&quot;: &quot;serialisation.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn when to turn a video into a series.&quot;,
                &quot;Discover how to effectively create a successful series.&quot;,
                &quot;Learn how to pace a series.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 81,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;serialisation-01&quot;,
                  &quot;title&quot;: &quot;Why Use Series?&quot;,
                  &quot;subtitle&quot;: &quot;Understand the strategic benefits of creating content series.&quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;serialisation-02&quot;,
                  &quot;title&quot;: &quot;Why Can&apos;t All Buckets Be Series?&quot;,
                  &quot;subtitle&quot;: &quot;Learn why not every content bucket is suited for serialisation.&quot;,
                  &quot;duration&quot;: 8,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;serialisation-03&quot;,
                  &quot;title&quot;: &quot;Types Of Series&quot;,
                  &quot;subtitle&quot;: &quot;Explore different formats and structures for content series.&quot;,
                  &quot;duration&quot;: 15,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;serialisation-04&quot;,
                  &quot;title&quot;: &quot;Comment Ideas&quot;,
                  &quot;subtitle&quot;: &quot;Generate ideas to encourage audience interaction through series.&quot;,
                  &quot;duration&quot;: 8,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;serialisation-05&quot;,
                  &quot;title&quot;: &quot;When Does Success Become a Series&quot;,
                  &quot;subtitle&quot;: &quot;Determine the right moment to expand a viral hit into a series.&quot;,
                  &quot;duration&quot;: 40,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;serialisation-06&quot;,
                  &quot;title&quot;: &quot;Efficiency &amp; Getting it Right&quot;,
                  &quot;subtitle&quot;: &quot;Streamline your series production and ensure consistent quality.&quot;,
                  &quot;duration&quot;: 0,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;emotional-positioning-for-impact&quot;,
              &quot;title&quot;: &quot;Emotional Positioning for Impact&quot;,
              &quot;subtitle&quot;: &quot;When and how to evoke emotions in your scripts.&quot;,
              &quot;icon&quot;: &quot;script-pro&quot;,
              &quot;color&quot;: &quot;#50e3c2&quot;,
              &quot;thumbnail&quot;: &quot;emotional-positioning-for-impact.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn to evoke emotions that drive engagement.&quot;,
                &quot;Craft scripts that resonate on a personal level.&quot;,
                &quot;Find catharsis in your topics.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Writer&quot;
              ],
              &quot;duration&quot;: 19,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: true,
              &quot;featured&quot;: true,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;emotional-positioning-for-impact-01&quot;,
                  &quot;title&quot;: &quot;Emotional Positioning Part 1&quot;,
                  &quot;subtitle&quot;: &quot;Introduction and foundational techniques for emotional engagement.&quot;,
                  &quot;duration&quot;: 13,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                },
                {
                  &quot;id&quot;: &quot;emotional-positioning-for-impact-02&quot;,
                  &quot;title&quot;: &quot;Emotional Positioning Part 2&quot;,
                  &quot;subtitle&quot;: &quot;Advanced strategies to deepen emotional connection.&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: true,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;id&quot;: &quot;delegation&quot;,
          &quot;name&quot;: &quot;Delegation&quot;,
          &quot;number&quot;: 4,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;intro-to-delegation&quot;,
              &quot;title&quot;: &quot;Introduction to Delegation&quot;,
              &quot;subtitle&quot;: &quot;Remove the time burden of content and build a team that can take it on.&quot;,
              &quot;icon&quot;: &quot;team&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;team-building-delegation.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn how to get over the problems of delegation, without having to experience them yourself.&quot;,
                &quot;Implement systems for self-sustaining content production.&quot;,
                &quot;Establish a robust pipeline architecture for efficient workflow.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 2,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;intro-to-delegation-01&quot;,
                  &quot;title&quot;: &quot;Introduction to Delegation&quot;,
                  &quot;subtitle&quot;: &quot;Delegating content doesn&apos;t have to be scary. &quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;first-bottlenecks&quot;,
              &quot;title&quot;: &quot;First Bottlenecks and Setup&quot;,
              &quot;subtitle&quot;: &quot;Implement our system designed to avoid the first bottlenecks.&quot;,
              &quot;icon&quot;: &quot;team&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;team-building-delegation.jpg&quot;,
              &quot;points&quot;: [
                &quot;Identify the problems of content delegation.&quot;,
                &quot;Implement systems to overcome them.&quot;,
                &quot;Establish a robust pipeline architecture for efficient workflow.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 4,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;first-bottlenecks-01&quot;,
                  &quot;title&quot;: &quot;Identifying First Bottlenecks&quot;,
                  &quot;subtitle&quot;: &quot;Start removing yourself from the process (almost) entirely.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;managing-creative-team&quot;,
              &quot;title&quot;: &quot;Managing a Creative Team&quot;,
              &quot;subtitle&quot;: &quot;How to hire, and manage, the right kind of talent.&quot;,
              &quot;icon&quot;: &quot;team&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;team-building-delegation.jpg&quot;,
              &quot;points&quot;: [
                &quot;Learn who to hire.&quot;,
                &quot;How to hire them.&quot;,
                &quot;And how to manage them to get the best content possible.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 7,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;managing-creative-team-01&quot;,
                  &quot;title&quot;: &quot;Introduction&quot;,
                  &quot;subtitle&quot;: &quot;Creating structure and leading creative teams.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;managing-creative-team-02&quot;,
                  &quot;title&quot;: &quot;Managing a Writer&quot;,
                  &quot;subtitle&quot;: &quot;Creating structure and leading creative teams.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;managing-creative-team-03&quot;,
                  &quot;title&quot;: &quot;Managing a Video Producer&quot;,
                  &quot;subtitle&quot;: &quot;Creating structure and leading creative teams.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;managing-creative-team-04&quot;,
                  &quot;title&quot;: &quot;Managing a Videographer&quot;,
                  &quot;subtitle&quot;: &quot;Creating structure and leading creative teams.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;managing-creative-team-05&quot;,
                  &quot;title&quot;: &quot;Managing a Video Editor&quot;,
                  &quot;subtitle&quot;: &quot;Creating structure and leading creative teams.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;managing-creative-team-06&quot;,
                  &quot;title&quot;: &quot;Managing a Social Media Manager&quot;,
                  &quot;subtitle&quot;: &quot;Creating structure and leading creative teams.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;managing-creative-team-07&quot;,
                  &quot;title&quot;: &quot;Managing a General Manager&quot;,
                  &quot;subtitle&quot;: &quot;Creating structure and leading creative teams.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;content-run-itself&quot;,
              &quot;title&quot;: &quot;How to make your content run itself&quot;,
              &quot;subtitle&quot;: &quot;Content creation is... long. This module will give you the tools to build it - and leave it.&quot;,
              &quot;icon&quot;: &quot;team&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;team-building-delegation.jpg&quot;,
              &quot;points&quot;: [
                &quot;How to build an efficient content pipeline.&quot;,
                &quot;That runs itself.&quot;,
                &quot;With minimal founder input, that still. represents. you.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 13,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;content-run-itself-01&quot;,
                  &quot;title&quot;: &quot;Creating Self-Sustaining Content System: Intro&quot;,
                  &quot;subtitle&quot;: &quot;Build systems that allow your content operation to run smoothly with minimal oversight.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;content-run-itself-02&quot;,
                  &quot;title&quot;: &quot;Editor&quot;,
                  &quot;subtitle&quot;: &quot;The role of the editor, how to hire, what talents to look for.&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;content-run-itself-03&quot;,
                  &quot;title&quot;: &quot;Videographer&quot;,
                  &quot;subtitle&quot;: &quot;The role of the videographer, how to hire, what talents to look for.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;content-run-itself-04&quot;,
                  &quot;title&quot;: &quot;Producer&quot;,
                  &quot;subtitle&quot;: &quot;The role of the video producer, how to hire, what talents to look for.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;content-run-itself-05&quot;,
                  &quot;title&quot;: &quot;Writer&quot;,
                  &quot;subtitle&quot;: &quot;The role of the writer, how to hire, what talents to look for with minimal oversight.&quot;,
                  &quot;duration&quot;: 2,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;creating-team-workflow&quot;,
              &quot;title&quot;: &quot;Creating a Team Workflow&quot;,
              &quot;subtitle&quot;: &quot;Use our custom in-house pipeline to make your team run smoothly.&quot;,
              &quot;icon&quot;: &quot;team&quot;,
              &quot;color&quot;: &quot;#5856d6&quot;,
              &quot;thumbnail&quot;: &quot;team-building-delegation.jpg&quot;,
              &quot;points&quot;: [
                &quot;How to build an efficient content pipeline.&quot;,
                &quot;That runs itself.&quot;,
                &quot;With minimal founder input, that still. represents. you.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 0,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;creating-team-workflow-01&quot;,
                  &quot;title&quot;: &quot;Team Pipeline Architecture&quot;,
                  &quot;subtitle&quot;: &quot;Design an efficient workflow to manage and scale your creative team.&quot;,
                  &quot;duration&quot;: null,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Joden&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;id&quot;: &quot;monetisation&quot;,
          &quot;name&quot;: &quot;Monetisation&quot;,
          &quot;number&quot;: 5,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;monetisation&quot;,
              &quot;title&quot;: &quot;Monetisation&quot;,
              &quot;subtitle&quot;: &quot;Expand revenue streams and scale your business through strategic monetisation.&quot;,
              &quot;icon&quot;: &quot;money-pro&quot;,
              &quot;color&quot;: &quot;#FF9500&quot;,
              &quot;thumbnail&quot;: &quot;monetisation-evolving.jpg&quot;,
              &quot;points&quot;: [
                &quot;Unlock multiple revenue streams from your content.&quot;,
                &quot;Leverage partnerships and product opportunities.&quot;,
                &quot;Build a sustainable business model through strategic monetisation.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;Founders&quot;,
                &quot;Content Creator Growth&quot;
              ],
              &quot;duration&quot;: 9,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: true,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;monetisation-01&quot;,
                  &quot;title&quot;: &quot;Platform Revenue Streams&quot;,
                  &quot;subtitle&quot;: &quot;Understand when and how platforms pay for your viewership.&quot;,
                  &quot;duration&quot;: 6,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Aydan&quot;
                },
                {
                  &quot;id&quot;: &quot;monetisation-02&quot;,
                  &quot;title&quot;: &quot;Strategic Partnerships&quot;,
                  &quot;subtitle&quot;: &quot;How brand deals work and what you can do to get the right ones.&quot;,
                  &quot;duration&quot;: null,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Aydan&quot;
                },
                {
                  &quot;id&quot;: &quot;monetisation-03&quot;,
                  &quot;title&quot;: &quot;Building Business&quot;,
                  &quot;subtitle&quot;: &quot;Understand the wider opportunities a large online following brings, with an exploration of business models that are built for the internet.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            }
          ]
        },
        {
          &quot;id&quot;: &quot;conversion&quot;,
          &quot;name&quot;: &quot;Conversion&quot;,
          &quot;number&quot;: 6,
          &quot;modules&quot;: [
            {
              &quot;id&quot;: &quot;taking-people-off-platform&quot;,
              &quot;title&quot;: &quot;Taking People Off Platform&quot;,
              &quot;subtitle&quot;: &quot;Views aren&apos;t enough - this is how to turn them into actual leads.&quot;,
              &quot;icon&quot;: &quot;funnel&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;building-your-funnel.jpg&quot;,
              &quot;points&quot;: [
                &quot;Build a funnel that converts stranger to paying customer.&quot;,
                &quot;Understand the most effective call to actions, lead magnets and more.&quot;,
                &quot;An inventory of every tool you have to pull leads down the funnel.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 1,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;taking-people-off-platform-01&quot;,
                  &quot;title&quot;: &quot;Taking People Off Platform&quot;,
                  &quot;subtitle&quot;: &quot;How to transition your audience to channels you control.&quot;,
                  &quot;duration&quot;: 1,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;lead-magnets&quot;,
              &quot;title&quot;: &quot;Lead Magnets&quot;,
              &quot;subtitle&quot;: &quot;Creating effective lead magnets that people will actually engage with&quot;,
              &quot;icon&quot;: &quot;funnel&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;building-your-funnel.jpg&quot;,
              &quot;points&quot;: [
                &quot;The lead magnets people will actually click on.&quot;,
                &quot;How to use ctas to efficiently get people clicking on them.&quot;,
                &quot;The importance of owning your own data.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 5,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;lead-magnets-01&quot;,
                  &quot;title&quot;: &quot;Creating Effective Lead Magnets&quot;,
                  &quot;subtitle&quot;: &quot;Design irresistible offers to capture and convert leads.&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;podcasting&quot;,
              &quot;title&quot;: &quot;Podcasting&quot;,
              &quot;subtitle&quot;: &quot;How to use podcasts to increase your reach&quot;,
              &quot;icon&quot;: &quot;funnel&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;building-your-funnel.jpg&quot;,
              &quot;points&quot;: [
                &quot;How to use short form to get more podcast listeners.&quot;,
                &quot;How to use your podcast to get more short form viewers.&quot;,
                &quot;And get the perfect synergy between them for maximum views across ALL platforms.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 8,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;podcasting-01&quot;,
                  &quot;title&quot;: &quot;Using Podcasts&quot;,
                  &quot;subtitle&quot;: &quot;Understand the different ways you can use podcasts to develop your community.&quot;,
                  &quot;duration&quot;: 8,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;youtube&quot;,
              &quot;title&quot;: &quot;YouTube Conversion&quot;,
              &quot;subtitle&quot;: &quot;How to funnel short form views into long form views.&quot;,
              &quot;icon&quot;: &quot;funnel&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;building-your-funnel.jpg&quot;,
              &quot;points&quot;: [
                &quot;YouTube is a different beast entirely.&quot;,
                &quot;Using your short form to boost your long form is the BEST way to grow on YouTube fast.&quot;,
                &quot;Here are the tools you need to do that effectively.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 5,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;youtube-01&quot;,
                  &quot;title&quot;: &quot;Building for long form: YouTube&quot;,
                  &quot;subtitle&quot;: &quot;Using long form to develop your audience relationship.&quot;,
                  &quot;duration&quot;: 5,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;speaking-engagements&quot;,
              &quot;title&quot;: &quot;Securing Speaking Engagements&quot;,
              &quot;subtitle&quot;: &quot;How to take short form presence, and use it to become an industry authority (that pays well).&quot;,
              &quot;icon&quot;: &quot;funnel&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;building-your-funnel.jpg&quot;,
              &quot;points&quot;: [
                &quot;How to build your feed to secure speaking engagements.&quot;,
                &quot;Payment expectations and management.&quot;,
                &quot;How to leverage your speaking engagements in short form.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 3,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;speaking-engagements-01&quot;,
                  &quot;title&quot;: &quot;Securing Speaking Engagements&quot;,
                  &quot;subtitle&quot;: &quot;Understand the best approach to secure high profile speaking engagements, and how to use them to build your personal brand.&quot;,
                  &quot;duration&quot;: 3,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;leveraging-for-sales&quot;,
              &quot;title&quot;: &quot;Leveraging Your Platform for Sales&quot;,
              &quot;subtitle&quot;: &quot;Understand how to actually convert your audience.&quot;,
              &quot;icon&quot;: &quot;funnel&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;building-your-funnel.jpg&quot;,
              &quot;points&quot;: [
                &quot;Turn viewers into actual paying customers&quot;,
                &quot;What viewers love (and hate) about short form selling.&quot;,
                &quot;The step by step process to pull them down your funnel.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 7,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;leveraging-for-sales-01&quot;,
                  &quot;title&quot;: &quot;Leveraging Your Platform for Sales&quot;,
                  &quot;subtitle&quot;: &quot;Understand how to convert your audience.&quot;,
                  &quot;duration&quot;: 7,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            },
            {
              &quot;id&quot;: &quot;newsletter&quot;,
              &quot;title&quot;: &quot;Newsletter&quot;,
              &quot;subtitle&quot;: &quot;How to create an engaging newsletter .&quot;,
              &quot;icon&quot;: &quot;funnel&quot;,
              &quot;color&quot;: &quot;#ff3b30&quot;,
              &quot;thumbnail&quot;: &quot;building-your-funnel.jpg&quot;,
              &quot;points&quot;: [
                &quot;The best way to own your own data&quot;,
                &quot;The benefits of a newsletter for your short form (and vice versa).&quot;,
                &quot;How to actually write a newsletter that people will follow - and make it better each week.&quot;
              ],
              &quot;tracks&quot;: [
                &quot;The Creator&quot;,
                &quot;The Founder&quot;,
                &quot;The Producer&quot;
              ],
              &quot;duration&quot;: 14,
              &quot;founderMustWatch&quot;: false,
              &quot;entrepreneurSpecific&quot;: false,
              &quot;popular&quot;: false,
              &quot;featured&quot;: false,
              &quot;submodules&quot;: [
                {
                  &quot;id&quot;: &quot;newsletter-01&quot;,
                  &quot;title&quot;: &quot;Creating An Engaged Newsletter pt 1&quot;,
                  &quot;subtitle&quot;: &quot;Grow and nurture your email list with content that converts.&quot;,
                  &quot;duration&quot;: 10,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                },
                {
                  &quot;id&quot;: &quot;newsletter-02&quot;,
                  &quot;title&quot;: &quot;Creating An Engaged Newsletter pt 2&quot;,
                  &quot;subtitle&quot;: &quot;Grow and nurture your email list with content that converts.&quot;,
                  &quot;duration&quot;: 4,
                  &quot;difficulty&quot;: 1,
                  &quot;resources&quot;: [
                    &quot;pdf&quot;,
                    &quot;worksheets&quot;
                  ],
                  &quot;highValue&quot;: false,
                  &quot;week&quot;: 1,
                  &quot;instructor&quot;: &quot;Alex&quot;
                }
              ]
            }
          ]
        }
      ]
    },
    {
      &quot;tracks&quot;: [
        {
          &quot;name&quot;: &quot;The Creator&quot;,
          &quot;icon&quot;: &quot;rocket&quot;,
          &quot;color&quot;: &quot;#4A90E2&quot;,
          &quot;description&quot;: &quot;The fastest path to growing your audience from zero to millions of views.&quot;
        },
        {
          &quot;name&quot;: &quot;The Founder&quot;,
          &quot;icon&quot;: &quot;briefcase&quot;,
          &quot;color&quot;: &quot;#FF3B30&quot;,
          &quot;description&quot;: &quot;The essential pathway for entrepreneurs and business leaders to build their brands.&quot;
        },
        {
          &quot;name&quot;: &quot;The Writer&quot;,
          &quot;icon&quot;: &quot;pencil&quot;,
          &quot;color&quot;: &quot;#FFCC00&quot;,
          &quot;description&quot;: &quot;Hooks, curiosity and retention. Learn how to keep a viewer engaged with everything you need to know as a short form writer.&quot;
        },
        {
          &quot;name&quot;: &quot;The Editor&quot;,
          &quot;icon&quot;: &quot;scissors&quot;,
          &quot;color&quot;: &quot;#34C759&quot;,
          &quot;description&quot;: &quot;Everything an editor needs to know to create viral content.&quot;
        },
        {
          &quot;name&quot;: &quot;The Producer&quot;,
          &quot;icon&quot;: &quot;camera&quot;,
          &quot;color&quot;: &quot;#5856D6&quot;,
          &quot;description&quot;: &quot;Managing the end-to-end creative process.&quot;
        }
      ]
    },
    {
      &quot;infrastructure&quot;: [
        {
          &quot;id&quot;: &quot;content-management-framework&quot;,
          &quot;title&quot;: &quot;Content Management Framework&quot;,
          &quot;emoji&quot;: &quot;💾&quot;,
          &quot;tagline&quot;: &quot;The Quantity and Quality Notion system&quot;,
          &quot;description&quot;: &quot;**Never stare at a blank content calendar again.** Our Notion-based command center lets a 3-person team have the power of 20, managing hundreds of videos monthly with military precision and creative freedom. Say goodbye to missed deadlines and chaotic workflows forever.&quot;,
          &quot;features&quot;: [
            &quot;Manage hundreds of scripts and videos a month&quot;,
            &quot;Have a super slick team workflow&quot;,
            &quot;With Custom Code&quot;,
            &quot;Complete delegation and tracking solution&quot;
          ],
          &quot;hasCustomCode&quot;: true,
          &quot;hasTemplates&quot;: true,
          &quot;hasAutomation&quot;: true,
          &quot;implementationTime&quot;: &quot;medium&quot;,
          &quot;complexityLevel&quot;: &quot;moderate&quot;
        },
        {
          &quot;id&quot;: &quot;production-automation-suite&quot;,
          &quot;title&quot;: &quot;Production Automation Suite&quot;,
          &quot;emoji&quot;: &quot;🏭&quot;,
          &quot;tagline&quot;: &quot;The Home-Delivered Engine Room&quot;,
          &quot;description&quot;: &quot;**Transform 8 hours of production work into 90 minutes flat.** Stop drowning in file management and tedious setup. This automation powerhouse connects your planning directly to production, automatically ingesting footage and laying out projects so you can focus exclusively on what humans do best—creating.&quot;,
          &quot;features&quot;: [
            &quot;Video Ingest app that speaks to notion scripts &amp; camera log&quot;,
            &quot;Premiere Pro extension that lays out footage&quot;,
            &quot;Automated file management and organization&quot;,
            &quot;Production pipeline acceleration tools&quot;
          ],
          &quot;hasCustomCode&quot;: true,
          &quot;hasTemplates&quot;: true,
          &quot;hasAutomation&quot;: true,
          &quot;implementationTime&quot;: &quot;medium&quot;,
          &quot;complexityLevel&quot;: &quot;moderate&quot;
        },
        {
          &quot;id&quot;: &quot;video-editing-ecosystem&quot;,
          &quot;title&quot;: &quot;Video Editing Ecosystem&quot;,
          &quot;emoji&quot;: &quot;🖥️&quot;,
          &quot;tagline&quot;: &quot;The Viral Video OS&quot;,
          &quot;description&quot;: &quot;**Cut your editing time in half while doubling video quality.** Never waste hours on repetitive edits or struggle with amateur-looking content again. This complete editing arsenal gives you Hollywood-level production values with push-button simplicity, including AI-powered smart cutting that intuitively knows exactly where to make the perfect edit.&quot;,
          &quot;features&quot;: [
            &quot;Premiere Pro assets and templates library&quot;,
            &quot;Time saving plugins for editors&quot;,
            &quot;Presets, think less!&quot;,
            &quot;Auto-cutter with semantic detection and &apos;flow&apos; recognition&quot;
          ],
          &quot;hasCustomCode&quot;: true,
          &quot;hasTemplates&quot;: true,
          &quot;hasAutomation&quot;: true,
          &quot;implementationTime&quot;: &quot;short&quot;,
          &quot;complexityLevel&quot;: &quot;moderate&quot;
        },
        {
          &quot;id&quot;: &quot;content-operations-protocol&quot;,
          &quot;title&quot;: &quot;Content Operations Protocol&quot;,
          &quot;emoji&quot;: &quot;📋&quot;,
          &quot;tagline&quot;: &quot;The exact day-to-day content review, delegation, and checking structure&quot;,
          &quot;description&quot;: &quot;**Never let another video fall through the cracks again.** Turn content chaos into a precision operation that runs like clockwork—even when you&apos;re not in the room. This bulletproof system ensures every piece of content meets your standards before hitting publish, with crystal-clear accountability that prevents the &apos;I thought someone else was handling that&apos; syndrome forever.&quot;,
          &quot;features&quot;: [
            &quot;Comprehensive review and approval workflow&quot;,
            &quot;Clear delegation framework with accountability&quot;,
            &quot;Quality control checkpoints and metrics&quot;,
            &quot;Team coordination and communication structure&quot;
          ],
          &quot;hasCustomCode&quot;: true,
          &quot;hasTemplates&quot;: true,
          &quot;hasAutomation&quot;: true,
          &quot;implementationTime&quot;: &quot;medium&quot;,
          &quot;complexityLevel&quot;: &quot;moderate&quot;
        },
        {
          &quot;id&quot;: &quot;lifetime-updates&quot;,
          &quot;title&quot;: &quot;Lifetime Infrastructure Updates&quot;,
          &quot;emoji&quot;: &quot;🔄&quot;,
          &quot;tagline&quot;: &quot;Continuous Evolution, One-Time Investment&quot;,
          &quot;description&quot;: &quot;**Future-proof your content operation forever.** By joining the legacy cohort, you receive permanent access to all future updates of these infrastructure systems at no added cost. As we enhance and expand these tools based on evolving platforms and technologies, you&apos;ll automatically get every upgrade, refinement, and new feature without ever paying another penny.&quot;,
          &quot;features&quot;: [
            &quot;Permanent access to all infrastructure updates&quot;,
            &quot;First access to new tools and features&quot;,
            &quot;Grandfathered benefits for legacy members&quot;,
            &quot;No additional costs for future versions&quot;
          ],
          &quot;hasCustomCode&quot;: true,
          &quot;hasTemplates&quot;: true,
          &quot;hasAutomation&quot;: true,
          &quot;implementationTime&quot;: &quot;ongoing&quot;,
          &quot;complexityLevel&quot;: &quot;variable&quot;
        }
      ]
    }
  ]
}</file><file path="data/extract-thumbnails-script.cjs">// This script extracts thumbnail names from a JSON file and saves them to a text file
// along with the information on whether each thumbnail is part of a module or a submodule.
⋮----
// Function to extract thumbnails given the known course structure
function extractThumbnails(jsonFilePath, outputFilePath) {
⋮----
// Read and parse the JSON file
const jsonData = JSON.parse(fs.readFileSync(jsonFilePath, &apos;utf8&apos;));
⋮----
// Array to store results
⋮----
// Check if this JSON conforms to the Course structure
if (jsonData.categories &amp;&amp; Array.isArray(jsonData.categories)) {
// Iterate through all categories, sections, modules, and submodules as defined in the interfaces.
jsonData.categories.forEach((category) =&gt; {
if (category.sections &amp;&amp; Array.isArray(category.sections)) {
category.sections.forEach((section) =&gt; {
if (section.modules &amp;&amp; Array.isArray(section.modules)) {
section.modules.forEach((module) =&gt; {
// If the module has a thumbnail, add it with the module&apos;s title.
⋮----
thumbnailEntries.push({
⋮----
// Process all submodules if available.
if (module.submodules &amp;&amp; Array.isArray(module.submodules)) {
module.submodules.forEach((submodule) =&gt; {
// Some submodules may also have thumbnails.
⋮----
// Fallback to a generic recursive search if the structure is not as expected
function processObject(obj, moduleName = &quot;&quot;) {
if (Array.isArray(obj)) {
obj.forEach(item =&gt; {
if (typeof item === &apos;object&apos; &amp;&amp; item !== null) processObject(item, moduleName);
⋮----
if (obj.hasOwnProperty(&apos;thumbnail&apos;)) {
⋮----
if (obj.hasOwnProperty(key) &amp;&amp; typeof obj[key] === &apos;object&apos; &amp;&amp; obj[key] !== null) {
const newModule = key.toLowerCase().includes(&apos;module&apos;) ? key : moduleName;
processObject(obj[key], newModule);
⋮----
processObject(jsonData);
⋮----
// Format the output to include thumbnail and its location information
const outputContent = thumbnailEntries.map(entry =&gt;
⋮----
).join(&apos;\n&apos;);
⋮----
// Write the results to the output file
fs.writeFileSync(outputFilePath, outputContent);
console.log(`Successfully extracted ${thumbnailEntries.length} thumbnails to ${outputFilePath}`);
⋮----
console.error(&apos;Error processing JSON file:&apos;, error);
⋮----
// Example usage: Replace these paths with your actual file paths.
⋮----
extractThumbnails(jsonFilePath, outputFilePath);</file><file path="data/fixed-course-editor.html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;UTF-8&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
  &lt;title&gt;Course Data Editor&lt;/title&gt;
  &lt;style&gt;
    :root {
      --primary-color: #4A90E2;
      --secondary-color: #FF3B30;
      --success-color: #30D158;
      --warning-color: #FFCC00;
      --purple-color: #5856D6;
      --orange-color: #FF9500;
      --background-color: #f5f7fa;
      --sidebar-bg: #fff;
      --card-bg: #fff;
      --border-color: #e1e4e8;
      --text-color: #333;
      --text-muted: #6c757d;
    }
    body {
      font-family: -apple-system, BlinkMacSystemFont, &apos;Segoe UI&apos;, Roboto, Oxygen, Ubuntu, Cantarell, &apos;Open Sans&apos;, &apos;Helvetica Neue&apos;, sans-serif;
      margin: 0;
      padding: 0;
      background-color: var(--background-color);
      color: var(--text-color);
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }
    header {
      background-color: var(--primary-color);
      color: white;
      padding: 1rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .app-title {
      margin: 0;
      font-size: 1.5rem;
      font-weight: 600;
    }
    .header-actions {
      display: flex;
      gap: 0.5rem;
    }
    .btn {
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-weight: 500;
      transition: all 0.2s;
    }
    .btn-primary {
      background-color: white;
      color: var(--primary-color);
    }
    .btn-secondary {
      background-color: rgba(255, 255, 255, 0.2);
      color: white;
    }
    .btn:hover {
      opacity: 0.9;
      transform: translateY(-1px);
    }
    .container {
      display: flex;
      flex: 1;
      overflow: hidden;
    }
    .sidebar {
      width: 300px;
      background-color: var(--sidebar-bg);
      border-right: 1px solid var(--border-color);
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }
    .search-container {
      padding: 1rem;
      border-bottom: 1px solid var(--border-color);
    }
    .search-input {
      width: 100%;
      padding: 0.5rem;
      border: 1px solid var(--border-color);
      border-radius: 4px;
    }
    .tree-view {
      flex: 1;
      overflow-y: auto;
      padding: 0.5rem;
    }
    .tree-item {
      margin-bottom: 0.25rem;
    }
    .tree-item-header {
      display: flex;
      align-items: center;
      padding: 0.5rem;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.2s;
    }
    .tree-item-header:hover {
      background-color: rgba(0, 0, 0, 0.05);
    }
    .tree-item-header.active {
      background-color: rgba(74, 144, 226, 0.1);
      font-weight: 500;
    }
    .tree-item-children {
      margin-left: 1.5rem;
      overflow: hidden;
      max-height: 0;
      transition: max-height 0.3s ease-out;
    }
    .tree-item-children.expanded {
      max-height: 1000px;
    }
    .color-indicator {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      margin-right: 0.5rem;
    }
    .main-content {
      flex: 1;
      padding: 1rem;
      overflow-y: auto;
    }
    .editor-container {
      background-color: var(--card-bg);
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      overflow: hidden;
    }
    .editor-tabs {
      display: flex;
      border-bottom: 1px solid var(--border-color);
      background-color: #f8f9fa;
    }
    .editor-tab {
      padding: 0.75rem 1rem;
      cursor: pointer;
      font-weight: 500;
      border-bottom: 2px solid transparent;
    }
    .editor-tab.active {
      border-bottom-color: var(--primary-color);
      color: var(--primary-color);
    }
    .editor-content {
      padding: 1.5rem;
    }
    .form-group {
      margin-bottom: 1rem;
    }
    .form-label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
    }
    .form-control {
      width: 100%;
      padding: 0.5rem;
      border: 1px solid var(--border-color);
      border-radius: 4px;
      font-family: inherit;
    }
    textarea.form-control {
      min-height: 80px;
      resize: vertical;
    }
    .form-row {
      display: flex;
      gap: 1rem;
    }
    .form-col {
      flex: 1;
    }
    .action-buttons {
      display: flex;
      justify-content: flex-end;
      gap: 0.5rem;
      margin-top: 1rem;
    }
    .btn-success {
      background-color: var(--success-color);
      color: white;
    }
    .btn-danger {
      background-color: var(--secondary-color);
      color: white;
    }
    .stats-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 1rem;
      margin-bottom: 1.5rem;
    }
    .stat-card {
      background-color: var(--card-bg);
      border-radius: 8px;
      padding: 1rem;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      text-align: center;
    }
    .stat-value {
      font-size: 2rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
      color: var(--primary-color);
    }
    .stat-label {
      color: var(--text-muted);
      font-weight: 500;
    }
    .notification {
      position: fixed;
      bottom: 20px;
      right: 20px;
      padding: 1rem;
      background-color: var(--success-color);
      color: white;
      border-radius: 4px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      transform: translateY(100px);
      opacity: 0;
      transition: all 0.3s;
    }
    .notification.show {
      transform: translateY(0);
      opacity: 1;
    }
    .array-item {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
    }
    .array-item .form-control {
      flex: 1;
    }
    .btn-sm {
      padding: 0.25rem 0.5rem;
      font-size: 0.875rem;
    }
    .array-actions {
      margin-top: 0.5rem;
    }
    .checkbox-container {
      display: flex;
      align-items: center;
    }
    .checkbox-container input {
      margin-right: 0.5rem;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;header&gt;
    &lt;h1 class=&quot;app-title&quot;&gt;Course Data Editor&lt;/h1&gt;
    &lt;div class=&quot;header-actions&quot;&gt;
      &lt;button id=&quot;saveBtn&quot; class=&quot;btn btn-primary&quot;&gt;Save Data&lt;/button&gt;
      &lt;button id=&quot;exportBtn&quot; class=&quot;btn btn-secondary&quot;&gt;Export JSON&lt;/button&gt;
      &lt;label for=&quot;importFile&quot; class=&quot;btn btn-secondary&quot; style=&quot;cursor: pointer;&quot;&gt;Import JSON&lt;/label&gt;
      &lt;input type=&quot;file&quot; id=&quot;importFile&quot; accept=&quot;.json&quot; style=&quot;display: none;&quot;&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;div class=&quot;container&quot;&gt;
    &lt;div class=&quot;sidebar&quot;&gt;
      &lt;div class=&quot;search-container&quot;&gt;
        &lt;input type=&quot;text&quot; id=&quot;searchInput&quot; class=&quot;search-input&quot; placeholder=&quot;Search...&quot;&gt;
      &lt;/div&gt;
      &lt;div class=&quot;tree-view&quot; id=&quot;treeView&quot;&gt;
        &lt;div id=&quot;tree-container&quot;&gt;&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;main-content&quot; id=&quot;mainContent&quot;&gt;
      &lt;div class=&quot;stats-container&quot;&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;totalCategories&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Categories&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;totalSections&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Sections&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;totalModules&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Modules&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;totalSubmodules&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Submodules&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;totalDuration&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Total Minutes&lt;/div&gt;
        &lt;/div&gt;
        &lt;!-- Boolean true counts --&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;founderMustWatchTrue&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Founder Must Watch (true)&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;entrepreneurSpecificTrue&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Entrepreneur Specific (true)&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;popularTrue&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Popular (true)&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;featuredTrue&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Featured (true)&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;highValueTrue&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;High Value (true)&lt;/div&gt;
        &lt;/div&gt;
        &lt;!-- Resource counts --&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;pdfCount&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;PDFs&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;worksheetsCount&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Worksheets&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;stat-card&quot;&gt;
          &lt;div class=&quot;stat-value&quot; id=&quot;workshopCount&quot;&gt;0&lt;/div&gt;
          &lt;div class=&quot;stat-label&quot;&gt;Workshops&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;editor-container&quot;&gt;
        &lt;div class=&quot;editor-content&quot;&gt;
          &lt;h2&gt;Welcome to the Course Data Editor&lt;/h2&gt;
          &lt;p&gt;Select an item from the sidebar to begin editing or use the search to find specific content.&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;notification&quot; id=&quot;notification&quot;&gt;
    Changes saved successfully!
  &lt;/div&gt;
  &lt;script&gt;
    // Get element references
    const saveBtn = document.getElementById(&apos;saveBtn&apos;);
    const exportBtn = document.getElementById(&apos;exportBtn&apos;);
    const importFile = document.getElementById(&apos;importFile&apos;);
    const searchInput = document.getElementById(&apos;searchInput&apos;);
    const treeView = document.getElementById(&apos;treeView&apos;);
    const editorContainer = document.querySelector(&apos;.editor-container&apos;);
    
    let courseData = null;
    let currentSelectedItem = null;
    let searchTimeout = null;
    let currentEditPath = null;
    
    // Utility function to escape HTML special characters
    function escapeHtml(text) {
      if (!text) return &apos;&apos;;
      return String(text)
        .replace(/&amp;/g, &apos;&amp;amp;&apos;)
        .replace(/&lt;/g, &apos;&amp;lt;&apos;)
        .replace(/&gt;/g, &apos;&amp;gt;&apos;)
        .replace(/&quot;/g, &apos;&amp;quot;&apos;)
        .replace(/&apos;/g, &apos;&amp;#039;&apos;);
    }
    
    // Initialize the application
    function init() {
      console.log(&apos;Initializing application...&apos;);
      setupEventListeners();
      loadJSONData();
    }
    
    window.onload = init;
    
    // Load JSON data from localStorage or default
    function loadJSONData() {
      const defaultCourse = {
        &quot;title&quot;: &quot;New Course&quot;,
        &quot;categories&quot;: []
      };
      console.log(&apos;Attempting to load course data...&apos;);
      try {
        // If you previously saved data, load it from localStorage.
        // Otherwise, use convertedCourseData (if defined) or default.
        const storedData = localStorage.getItem(&apos;courseData&apos;);
        if (storedData) {
          courseData = JSON.parse(storedData);
        } else {
          courseData = (typeof convertedCourseData !== &apos;undefined&apos;) ? convertedCourseData : defaultCourse;
        }
        console.log(&apos;Course data loaded successfully!&apos;);
        renderTreeView();
        updateStatistics();
        showNotification(&apos;Course data loaded successfully&apos;);
      } catch (error) {
        console.error(&apos;Error loading course data:&apos;, error);
        courseData = defaultCourse;
        showNotification(&apos;Error loading course data. Using empty template.&apos;, &apos;error&apos;);
        renderTreeView();
        updateStatistics();
      }
    }
    
    // Import data from file
    function importData(event) {
      const file = event.target.files[0];
      if (!file) return;
      const reader = new FileReader();
      reader.onload = function(e) {
        try {
          const jsonData = JSON.parse(e.target.result);
          courseData = jsonData;
          // Also save to localStorage so changes persist
          localStorage.setItem(&apos;courseData&apos;, JSON.stringify(courseData));
          renderTreeView();
          updateStatistics();
          showNotification(&apos;Course data imported successfully&apos;);
        } catch (error) {
          console.error(&apos;Error parsing JSON&apos;, error);
          showNotification(&apos;Error parsing JSON&apos;, &apos;error&apos;);
        }
      };
      reader.readAsText(file);
    }
    
    // Export updated data as a file
    function exportData() {
      try {
        const dataStr = JSON.stringify(courseData, null, 2);
        const blob = new Blob([dataStr], { type: &apos;application/json&apos; });
        const url = URL.createObjectURL(blob);
        const a = document.createElement(&apos;a&apos;);
        a.href = url;
        a.download = &apos;course-data.json&apos;;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        showNotification(&apos;Data exported successfully&apos;);
      } catch (error) {
        console.error(&apos;Error exporting data&apos;, error);
        showNotification(&apos;Error exporting data&apos;, &apos;error&apos;);
      }
    }
    
    // Update statistics, including booleans and resources
    function updateStatistics() {
      let totalCategories = 0;
      let totalSections = 0;
      let totalModules = 0;
      let totalSubmodules = 0;
      let totalDuration = 0;
      
      let countFounderMustWatchTrue = 0;
      let countEntrepreneurSpecificTrue = 0;
      let countPopularTrue = 0;
      let countFeaturedTrue = 0;
      let countHighValueTrue = 0;
      
      let countPdf = 0;
      let countWorksheets = 0;
      let countWorkshop = 0;
      
      if (courseData &amp;&amp; Array.isArray(courseData.categories)) {
        totalCategories = courseData.categories.length;
        courseData.categories.forEach(category =&gt; {
          if (Array.isArray(category.sections)) {
            totalSections += category.sections.length;
            category.sections.forEach(section =&gt; {
              if (Array.isArray(section.modules)) {
                totalModules += section.modules.length;
                section.modules.forEach(module =&gt; {
                  if (typeof module.duration === &apos;number&apos;) {
                    totalDuration += module.duration;
                  }
                  if (module.founderMustWatch === true) countFounderMustWatchTrue++;
                  if (module.entrepreneurSpecific === true) countEntrepreneurSpecificTrue++;
                  if (module.popular === true) countPopularTrue++;
                  if (module.featured === true) countFeaturedTrue++;
                  
                  if (Array.isArray(module.submodules)) {
                    totalSubmodules += module.submodules.length;
                    module.submodules.forEach(sub =&gt; {
                      if (typeof sub.duration === &apos;number&apos;) {
                        totalDuration += sub.duration;
                      }
                      if (sub.highValue === true) countHighValueTrue++;
                      if (Array.isArray(sub.resources)) {
                        sub.resources.forEach(resource =&gt; {
                          const res = resource.toLowerCase();
                          if (res === &apos;pdf&apos;) countPdf++;
                          else if (res === &apos;worksheets&apos;) countWorksheets++;
                          else if (res === &apos;workshop&apos;) countWorkshop++;
                        });
                      }
                    });
                  }
                });
              }
            });
          }
        });
      }
      
      document.getElementById(&apos;totalCategories&apos;).textContent = totalCategories;
      document.getElementById(&apos;totalSections&apos;).textContent = totalSections;
      document.getElementById(&apos;totalModules&apos;).textContent = totalModules;
      document.getElementById(&apos;totalSubmodules&apos;).textContent = totalSubmodules;
      document.getElementById(&apos;totalDuration&apos;).textContent = totalDuration;
      
      document.getElementById(&apos;founderMustWatchTrue&apos;).textContent = countFounderMustWatchTrue;
      document.getElementById(&apos;entrepreneurSpecificTrue&apos;).textContent = countEntrepreneurSpecificTrue;
      document.getElementById(&apos;popularTrue&apos;).textContent = countPopularTrue;
      document.getElementById(&apos;featuredTrue&apos;).textContent = countFeaturedTrue;
      document.getElementById(&apos;highValueTrue&apos;).textContent = countHighValueTrue;
      
      document.getElementById(&apos;pdfCount&apos;).textContent = countPdf;
      document.getElementById(&apos;worksheetsCount&apos;).textContent = countWorksheets;
      document.getElementById(&apos;workshopCount&apos;).textContent = countWorkshop;
    }
    
    // Render the tree view based on courseData
    function renderTreeView() {
      const treeContainer = document.getElementById(&apos;tree-container&apos;);
      treeContainer.innerHTML = &apos;&apos;;
      
      // Create the course header
      const courseHeader = document.createElement(&apos;div&apos;);
      courseHeader.className = &apos;tree-item&apos;;
      courseHeader.innerHTML = `
        &lt;div class=&quot;tree-item-header&quot;&gt;
          &lt;span class=&quot;tree-icon&quot;&gt;📚&lt;/span&gt;
          &lt;span class=&quot;tree-label&quot;&gt;${courseData.title || &apos;Course&apos;}&lt;/span&gt;
        &lt;/div&gt;
      `;
      treeContainer.appendChild(courseHeader);
      
      // Create the categories container
      const categoriesContainer = document.createElement(&apos;div&apos;);
      categoriesContainer.className = &apos;tree-item-children expanded&apos;;
      treeContainer.appendChild(categoriesContainer);
      
      // Add the tracks section
      if (courseData.tracks &amp;&amp; courseData.tracks.length &gt; 0) {
        const tracksContainer = document.createElement(&apos;div&apos;);
        tracksContainer.className = &apos;tree-item&apos;;
        tracksContainer.innerHTML = `
          &lt;div class=&quot;tree-item-header&quot;&gt;
            &lt;span class=&quot;tree-icon&quot;&gt;🛤️&lt;/span&gt;
            &lt;span class=&quot;tree-label&quot;&gt;Tracks (${courseData.tracks.length})&lt;/span&gt;
          &lt;/div&gt;
        `;
        categoriesContainer.appendChild(tracksContainer);
        
        const tracksItemsContainer = document.createElement(&apos;div&apos;);
        tracksItemsContainer.className = &apos;tree-item-children&apos;;
        tracksContainer.appendChild(tracksItemsContainer);
        
        courseData.tracks.forEach((track, tIndex) =&gt; {
          const trackItem = document.createElement(&apos;div&apos;);
          trackItem.className = &apos;tree-item&apos;;
          trackItem.innerHTML = `
            &lt;div class=&quot;tree-item-header&quot; data-id=&quot;track_${tIndex}&quot;&gt;
              &lt;span class=&quot;tree-icon&quot; style=&quot;color: ${track.color || &apos;#888&apos;}&quot;&gt;${track.icon || &apos;🔹&apos;}&lt;/span&gt;
              &lt;span class=&quot;tree-label&quot;&gt;${track.name || `Track ${tIndex + 1}`}&lt;/span&gt;
            &lt;/div&gt;
          `;
          tracksItemsContainer.appendChild(trackItem);
        });
      }
      
      // Add the infrastructure section
      if (courseData.infrastructure &amp;&amp; courseData.infrastructure.length &gt; 0) {
        const infraContainer = document.createElement(&apos;div&apos;);
        infraContainer.className = &apos;tree-item&apos;;
        infraContainer.innerHTML = `
          &lt;div class=&quot;tree-item-header&quot;&gt;
            &lt;span class=&quot;tree-icon&quot;&gt;🏗️&lt;/span&gt;
            &lt;span class=&quot;tree-label&quot;&gt;Infrastructure (${courseData.infrastructure.length})&lt;/span&gt;
          &lt;/div&gt;
        `;
        categoriesContainer.appendChild(infraContainer);
        
        const infraItemsContainer = document.createElement(&apos;div&apos;);
        infraItemsContainer.className = &apos;tree-item-children&apos;;
        infraContainer.appendChild(infraItemsContainer);
        
        courseData.infrastructure.forEach((infra, infIndex) =&gt; {
          const infraItem = document.createElement(&apos;div&apos;);
          infraItem.className = &apos;tree-item&apos;;
          infraItem.innerHTML = `
            &lt;div class=&quot;tree-item-header&quot; data-id=&quot;infrastructure_${infIndex}&quot;&gt;
              &lt;span class=&quot;tree-icon&quot; style=&quot;color: ${infra.color || &apos;#888&apos;}&quot;&gt;${infra.icon || &apos;🔧&apos;}&lt;/span&gt;
              &lt;span class=&quot;tree-label&quot;&gt;${infra.title || `Component ${infIndex + 1}`}&lt;/span&gt;
            &lt;/div&gt;
          `;
          infraItemsContainer.appendChild(infraItem);
        });
      }
      
      // Render categories
      if (courseData.categories &amp;&amp; courseData.categories.length &gt; 0) {
        courseData.categories.forEach((category, catIndex) =&gt; {
          const categoryItem = document.createElement(&apos;div&apos;);
          categoryItem.className = &apos;tree-item&apos;;
          const categoryHeader = document.createElement(&apos;div&apos;);
          categoryHeader.className = &apos;tree-item-header&apos;;
          categoryHeader.setAttribute(&apos;data-id&apos;, `category_${catIndex}`);
          const colorIndicator = document.createElement(&apos;div&apos;);
          colorIndicator.className = &apos;color-indicator&apos;;
          colorIndicator.style.backgroundColor = category.color || &apos;#4A90E2&apos;;
          const nameSpan = document.createElement(&apos;span&apos;);
          nameSpan.textContent = category.name || `Category ${catIndex + 1}`;
          categoryHeader.appendChild(colorIndicator);
          categoryHeader.appendChild(nameSpan);
          categoryItem.appendChild(categoryHeader);
          
          const childrenContainer = document.createElement(&apos;div&apos;);
          childrenContainer.className = &apos;tree-item-children&apos;;
          if (Array.isArray(category.sections)) {
            category.sections.forEach((section, secIndex) =&gt; {
              const sectionItem = document.createElement(&apos;div&apos;);
              sectionItem.className = &apos;tree-item&apos;;
              const sectionHeader = document.createElement(&apos;div&apos;);
              sectionHeader.className = &apos;tree-item-header&apos;;
              sectionHeader.setAttribute(&apos;data-id&apos;, `section_${catIndex}_${secIndex}`);
              const sectionName = document.createElement(&apos;span&apos;);
              sectionName.textContent = `${section.number}. ${section.name}`;
              sectionHeader.appendChild(sectionName);
              sectionItem.appendChild(sectionHeader);
              
              const modulesContainer = document.createElement(&apos;div&apos;);
              modulesContainer.className = &apos;tree-item-children&apos;;
              if (Array.isArray(section.modules)) {
                section.modules.forEach((module, modIndex) =&gt; {
                  const moduleItem = document.createElement(&apos;div&apos;);
                  moduleItem.className = &apos;tree-item&apos;;
                  const moduleHeader = document.createElement(&apos;div&apos;);
                  moduleHeader.className = &apos;tree-item-header&apos;;
                  moduleHeader.setAttribute(&apos;data-id&apos;, `module_${catIndex}_${secIndex}_${modIndex}`);
                  const modColor = document.createElement(&apos;div&apos;);
                  modColor.className = &apos;color-indicator&apos;;
                  modColor.style.backgroundColor = module.color || &apos;#000000&apos;;
                  const modName = document.createElement(&apos;span&apos;);
                  modName.textContent = module.title;
                  moduleHeader.appendChild(modColor);
                  moduleHeader.appendChild(modName);
                  moduleItem.appendChild(moduleHeader);
                  
                  const submodulesContainer = document.createElement(&apos;div&apos;);
                  submodulesContainer.className = &apos;tree-item-children&apos;;
                  if (Array.isArray(module.submodules)) {
                    module.submodules.forEach((submodule, subIndex) =&gt; {
                      const subItem = document.createElement(&apos;div&apos;);
                      subItem.className = &apos;tree-item&apos;;
                      const subHeader = document.createElement(&apos;div&apos;);
                      subHeader.className = &apos;tree-item-header&apos;;
                      subHeader.setAttribute(&apos;data-id&apos;, `submodule_${catIndex}_${secIndex}_${modIndex}_${subIndex}`);
                      const subName = document.createElement(&apos;span&apos;);
                      subName.textContent = submodule.title;
                      subHeader.appendChild(subName);
                      subItem.appendChild(subHeader);
                      submodulesContainer.appendChild(subItem);
                    });
                  }
                  moduleItem.appendChild(submodulesContainer);
                  modulesContainer.appendChild(moduleItem);
                });
              }
              sectionItem.appendChild(modulesContainer);
              childrenContainer.appendChild(sectionItem);
            });
          }
          categoryItem.appendChild(childrenContainer);
          categoriesContainer.appendChild(categoryItem);
        });
      }
    }
    
    // Handle clicks in the tree view
    function handleTreeViewClick(event) {
      const target = event.target.closest(&apos;.tree-item-header&apos;);
      if (!target) return;

      // Check if we should toggle a branch
      const parent = target.parentElement;
      const children = parent.querySelector(&apos;.tree-item-children&apos;);
      if (children) {
        children.classList.toggle(&apos;expanded&apos;);
        return;
      }

      // Otherwise, we should open an editor
      const itemId = target.getAttribute(&apos;data-id&apos;);
      if (!itemId) return;

      console.log(&apos;Opening editor for:&apos;, itemId);
      const [type, indexStr] = itemId.split(&apos;_&apos;);
      const index = parseInt(indexStr, 10);

      if (type === &apos;category&apos;) {
        renderCategoryEditor(index);
      } else if (type === &apos;section&apos;) {
        const [categoryIndex, sectionIndex] = indexStr.split(&apos;-&apos;).map(n =&gt; parseInt(n, 10));
        renderSectionEditor(categoryIndex, sectionIndex);
      } else if (type === &apos;module&apos;) {
        const [categoryIndex, sectionIndex, moduleIndex] = indexStr.split(&apos;-&apos;).map(n =&gt; parseInt(n, 10));
        renderModuleEditor(categoryIndex, sectionIndex, moduleIndex);
      } else if (type === &apos;submodule&apos;) {
        const [categoryIndex, sectionIndex, moduleIndex, submoduleIndex] = indexStr.split(&apos;-&apos;).map(n =&gt; parseInt(n, 10));
        renderSubmoduleEditor(categoryIndex, sectionIndex, moduleIndex, submoduleIndex);
      } else if (type === &apos;track&apos;) {
        renderTrackEditor(index);
      } else if (type === &apos;infrastructure&apos;) {
        renderInfrastructureEditor(index);
      }
    }
    
    // Module editor: renders module and its submodules for editing
    function renderModuleEditor(catIndex, secIndex, modIndex) {
      const module = courseData.categories[catIndex].sections[secIndex].modules[modIndex];
      editorContainer.querySelector(&apos;.editor-content&apos;).innerHTML = `
        &lt;h2&gt;Edit Module&lt;/h2&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Module Title&lt;/label&gt;
          &lt;input type=&quot;text&quot; name=&quot;moduleTitle&quot; value=&quot;${module.title}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Module Subtitle&lt;/label&gt;
          &lt;input type=&quot;text&quot; name=&quot;moduleSubtitle&quot; value=&quot;${module.subtitle}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Icon&lt;/label&gt;
          &lt;input type=&quot;text&quot; name=&quot;moduleIcon&quot; value=&quot;${module.icon}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Color&lt;/label&gt;
          &lt;input type=&quot;color&quot; name=&quot;moduleColor&quot; value=&quot;${module.color}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Thumbnail&lt;/label&gt;
          &lt;input type=&quot;text&quot; name=&quot;moduleThumbnail&quot; value=&quot;${module.thumbnail}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Duration (minutes)&lt;/label&gt;
          &lt;input type=&quot;number&quot; name=&quot;moduleDuration&quot; value=&quot;${module.duration}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;checkbox-group&quot;&gt;
          &lt;label&gt;
            &lt;input type=&quot;checkbox&quot; name=&quot;founderMustWatch&quot; ${module.founderMustWatch ? &apos;checked&apos; : &apos;&apos;} /&gt;
            Founder Must Watch
          &lt;/label&gt;
          &lt;label&gt;
            &lt;input type=&quot;checkbox&quot; name=&quot;entrepreneurSpecific&quot; ${module.entrepreneurSpecific ? &apos;checked&apos; : &apos;&apos;} /&gt;
            Entrepreneur Specific
          &lt;/label&gt;
          &lt;label&gt;
            &lt;input type=&quot;checkbox&quot; name=&quot;popular&quot; ${module.popular ? &apos;checked&apos; : &apos;&apos;} /&gt;
            Popular
          &lt;/label&gt;
          &lt;label&gt;
            &lt;input type=&quot;checkbox&quot; name=&quot;featured&quot; ${module.featured ? &apos;checked&apos; : &apos;&apos;} /&gt;
            Featured
          &lt;/label&gt;
        &lt;/div&gt;
        &lt;h3&gt;Submodules&lt;/h3&gt;
        &lt;div class=&quot;submodules-list&quot;&gt;
          ${ module.submodules.map((sub, subIndex) =&gt; `
            &lt;div class=&quot;submodule-item&quot; data-submodule-index=&quot;${subIndex}&quot;&gt;
              &lt;div class=&quot;form-group&quot;&gt;
                &lt;label&gt;Title&lt;/label&gt;
                &lt;input type=&quot;text&quot; name=&quot;subTitle&quot; value=&quot;${sub.title}&quot; /&gt;
              &lt;/div&gt;
              &lt;div class=&quot;form-group&quot;&gt;
                &lt;label&gt;Subtitle&lt;/label&gt;
                &lt;input type=&quot;text&quot; name=&quot;subSubtitle&quot; value=&quot;${sub.subtitle}&quot; /&gt;
              &lt;/div&gt;
              &lt;div class=&quot;form-group&quot;&gt;
                &lt;label&gt;Duration&lt;/label&gt;
                &lt;input type=&quot;number&quot; name=&quot;subDuration&quot; value=&quot;${sub.duration}&quot; /&gt;
              &lt;/div&gt;
              &lt;div class=&quot;form-group&quot;&gt;
                &lt;label&gt;Difficulty&lt;/label&gt;
                &lt;input type=&quot;number&quot; name=&quot;subDifficulty&quot; value=&quot;${sub.difficulty}&quot; /&gt;
              &lt;/div&gt;
              &lt;div class=&quot;form-group&quot;&gt;
                &lt;label&gt;Resources (comma-separated)&lt;/label&gt;
                &lt;input type=&quot;text&quot; name=&quot;subResources&quot; value=&quot;${(sub.resources || []).join(&apos;,&apos;)}&quot; /&gt;
              &lt;/div&gt;
              &lt;div class=&quot;form-group&quot;&gt;
                &lt;label&gt;High Value&lt;/label&gt;
                &lt;input type=&quot;checkbox&quot; name=&quot;subHighValue&quot; ${sub.highValue ? &apos;checked&apos; : &apos;&apos;} /&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          `).join(&apos;&apos;) }
          &lt;button id=&quot;addSubmoduleBtn&quot;&gt;Add Submodule&lt;/button&gt;
        &lt;/div&gt;
        &lt;button class=&quot;save-changes-button&quot;&gt;Save Module Changes&lt;/button&gt;
      `;
      
      // Save changes for module and its submodules
      const saveChangesBtn = editorContainer.querySelector(&apos;.save-changes-button&apos;);
      saveChangesBtn.addEventListener(&apos;click&apos;, () =&gt; {
        // Update module properties
        module.title = editorContainer.querySelector(&apos;input[name=&quot;moduleTitle&quot;]&apos;).value;
        module.subtitle = editorContainer.querySelector(&apos;input[name=&quot;moduleSubtitle&quot;]&apos;).value;
        module.icon = editorContainer.querySelector(&apos;input[name=&quot;moduleIcon&quot;]&apos;).value;
        module.color = editorContainer.querySelector(&apos;input[name=&quot;moduleColor&quot;]&apos;).value;
        module.thumbnail = editorContainer.querySelector(&apos;input[name=&quot;moduleThumbnail&quot;]&apos;).value;
        module.duration = parseInt(editorContainer.querySelector(&apos;input[name=&quot;moduleDuration&quot;]&apos;).value, 10) || 0;
        module.founderMustWatch = editorContainer.querySelector(&apos;input[name=&quot;founderMustWatch&quot;]&apos;).checked;
        module.entrepreneurSpecific = editorContainer.querySelector(&apos;input[name=&quot;entrepreneurSpecific&quot;]&apos;).checked;
        module.popular = editorContainer.querySelector(&apos;input[name=&quot;popular&quot;]&apos;).checked;
        module.featured = editorContainer.querySelector(&apos;input[name=&quot;featured&quot;]&apos;).checked;
        
        // Update submodules
        const subItems = editorContainer.querySelectorAll(&apos;.submodule-item&apos;);
        subItems.forEach(item =&gt; {
          const index = parseInt(item.getAttribute(&apos;data-submodule-index&apos;), 10);
          const sub = module.submodules[index];
          sub.title = item.querySelector(&apos;input[name=&quot;subTitle&quot;]&apos;).value;
          sub.subtitle = item.querySelector(&apos;input[name=&quot;subSubtitle&quot;]&apos;).value;
          sub.duration = parseInt(item.querySelector(&apos;input[name=&quot;subDuration&quot;]&apos;).value, 10) || 0;
          sub.difficulty = parseInt(item.querySelector(&apos;input[name=&quot;subDifficulty&quot;]&apos;).value, 10) || 1;
          const resourcesStr = item.querySelector(&apos;input[name=&quot;subResources&quot;]&apos;).value;
          sub.resources = resourcesStr.split(&apos;,&apos;).map(r =&gt; r.trim()).filter(Boolean);
          sub.highValue = item.querySelector(&apos;input[name=&quot;subHighValue&quot;]&apos;).checked;
        });
        
        // Save updated data to localStorage (optional)
        localStorage.setItem(&apos;courseData&apos;, JSON.stringify(courseData));
        updateStatistics();
        renderTreeView();
        showNotification(&apos;Module updated successfully!&apos;);
      });
      
      // (Optional) Add a button to add a new submodule
      const addSubBtn = editorContainer.querySelector(&apos;#addSubmoduleBtn&apos;);
      addSubBtn.addEventListener(&apos;click&apos;, () =&gt; {
        // Append a new submodule to the module&apos;s submodules array
        const newSub = {
          id: `new_${Date.now()}`,
          title: &apos;New Submodule&apos;,
          subtitle: &apos;&apos;,
          duration: 0,
          difficulty: 1,
          resources: [],
          highValue: false,
          week: 0,
          instructor: &apos;&apos;
        };
        module.submodules.push(newSub);
        // Re-render the module editor to show the new submodule
        renderModuleEditor(catIndex, secIndex, modIndex);
      });
    }
    
    // Track editor: allows editing track properties
    function renderTrackEditor(trackIndex) {
      const track = courseData.tracks[trackIndex];
      editorContainer.querySelector(&apos;.editor-content&apos;).innerHTML = `
        &lt;h2&gt;Edit Track&lt;/h2&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Name&lt;/label&gt;
          &lt;input type=&quot;text&quot; name=&quot;trackName&quot; value=&quot;${track.name || &apos;&apos;}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;ID&lt;/label&gt;
          &lt;input type=&quot;text&quot; name=&quot;trackId&quot; value=&quot;${track.id || &apos;&apos;}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Description&lt;/label&gt;
          &lt;textarea name=&quot;trackDescription&quot; class=&quot;form-control&quot;&gt;${track.description || &apos;&apos;}&lt;/textarea&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Color&lt;/label&gt;
          &lt;input type=&quot;color&quot; name=&quot;trackColor&quot; value=&quot;${track.color || &apos;#154D59&apos;}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Order&lt;/label&gt;
          &lt;input type=&quot;number&quot; name=&quot;trackOrder&quot; value=&quot;${track.order || trackIndex + 1}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Icon&lt;/label&gt;
          &lt;input type=&quot;text&quot; name=&quot;trackIcon&quot; value=&quot;${track.icon || &apos;⚙️&apos;}&quot; /&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
          &lt;label&gt;Required&lt;/label&gt;
          &lt;input type=&quot;checkbox&quot; name=&quot;trackRequired&quot; ${track.required ? &apos;checked&apos; : &apos;&apos;} /&gt;
        &lt;/div&gt;
        &lt;h3&gt;Associated Modules&lt;/h3&gt;
        &lt;div id=&quot;trackModules&quot; class=&quot;associated-modules&quot;&gt;
          ${displayAssociatedModules(track)}
        &lt;/div&gt;
        &lt;button class=&quot;save-track-button&quot;&gt;Save Track Changes&lt;/button&gt;
      `;
      
      // Function to display modules associated with this track
      function displayAssociatedModules(track) {
        let modulesHTML = &apos;&lt;div class=&quot;module-list&quot;&gt;&apos;;
        let associatedModuleIds = track.moduleIds || [];
        
        // Loop through categories, sections, and modules to find modules with matching IDs
        courseData.categories.forEach(category =&gt; {
          if (Array.isArray(category.sections)) {
            category.sections.forEach(section =&gt; {
              if (Array.isArray(section.modules)) {
                section.modules.forEach(module =&gt; {
                  const isAssociated = associatedModuleIds.includes(module.id);
                  modulesHTML += `
                    &lt;div class=&quot;module-item&quot;&gt;
                      &lt;input type=&quot;checkbox&quot; name=&quot;module_${module.id}&quot; ${isAssociated ? &apos;checked&apos; : &apos;&apos;} data-module-id=&quot;${module.id}&quot; /&gt;
                      &lt;span&gt;${module.title}&lt;/span&gt;
                      &lt;span class=&quot;module-path&quot;&gt;${category.title} &gt; ${section.title}&lt;/span&gt;
                    &lt;/div&gt;
                  `;
                });
              }
            });
          }
        });
        modulesHTML += &apos;&lt;/div&gt;&apos;;
        return modulesHTML;
      }
      
      // Add event listener for the Save button
      const saveTrackBtn = editorContainer.querySelector(&apos;.save-track-button&apos;);
      saveTrackBtn.addEventListener(&apos;click&apos;, () =&gt; {
        track.name = editorContainer.querySelector(&apos;input[name=&quot;trackName&quot;]&apos;).value;
        track.id = editorContainer.querySelector(&apos;input[name=&quot;trackId&quot;]&apos;).value;
        track.description = editorContainer.querySelector(&apos;textarea[name=&quot;trackDescription&quot;]&apos;).value;
        track.color = editorContainer.querySelector(&apos;input[name=&quot;trackColor&quot;]&apos;).value;
        track.order = parseInt(editorContainer.querySelector(&apos;input[name=&quot;trackOrder&quot;]&apos;).value, 10) || (trackIndex + 1);
        track.icon = editorContainer.querySelector(&apos;input[name=&quot;trackIcon&quot;]&apos;).value;
        track.required = editorContainer.querySelector(&apos;input[name=&quot;trackRequired&quot;]&apos;).checked;
        
        // Update associated modules
        track.moduleIds = [];
        const moduleCheckboxes = editorContainer.querySelectorAll(&apos;#trackModules input[type=&quot;checkbox&quot;]&apos;);
        moduleCheckboxes.forEach(checkbox =&gt; {
          if (checkbox.checked) {
            track.moduleIds.push(checkbox.getAttribute(&apos;data-module-id&apos;));
          }
        });
        
        // Save to localStorage
        localStorage.setItem(&apos;courseData&apos;, JSON.stringify(courseData));
        updateStatistics();
        renderTreeView();
        showNotification(&apos;Track updated successfully!&apos;);
      });
    }
    
    function renderInfrastructureEditor(index) {
      const infrastructure = courseData.infrastructure[index];
      if (!infrastructure) {
        console.error(&apos;Infrastructure not found at index:&apos;, index);
        return;
      }
      
      // Store the current component we&apos;re editing
      currentEditPath = {
        type: &apos;infrastructure&apos;,
        index: index
      };
      
      editorContainer.innerHTML = `
        &lt;h2&gt;Edit Infrastructure Component&lt;/h2&gt;
        &lt;form id=&quot;infrastructure-form&quot;&gt;
          &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;infra-title&quot;&gt;Title&lt;/label&gt;
            &lt;input type=&quot;text&quot; id=&quot;infra-title&quot; value=&quot;${escapeHtml(infrastructure.title || &apos;&apos;)}&quot; required&gt;
          &lt;/div&gt;
          &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;infra-id&quot;&gt;ID&lt;/label&gt;
            &lt;input type=&quot;text&quot; id=&quot;infra-id&quot; value=&quot;${escapeHtml(infrastructure.id || &apos;&apos;)}&quot; required&gt;
          &lt;/div&gt;
          &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;infra-tagline&quot;&gt;Tagline&lt;/label&gt;
            &lt;input type=&quot;text&quot; id=&quot;infra-tagline&quot; value=&quot;${escapeHtml(infrastructure.tagline || &apos;&apos;)}&quot;&gt;
          &lt;/div&gt;
          &lt;div class=&quot;form-group&quot;&gt;
            &lt;label for=&quot;infra-description&quot;&gt;Description&lt;/label&gt;
            &lt;textarea id=&quot;infra-description&quot; rows=&quot;3&quot;&gt;${escapeHtml(infrastructure.description || &apos;&apos;)}&lt;/textarea&gt;
          &lt;/div&gt;
          &lt;div class=&quot;form-row&quot;&gt;
            &lt;div class=&quot;form-group&quot;&gt;
              &lt;label for=&quot;infra-order&quot;&gt;Order&lt;/label&gt;
              &lt;input type=&quot;number&quot; id=&quot;infra-order&quot; value=&quot;${infrastructure.order || 0}&quot; min=&quot;0&quot;&gt;
            &lt;/div&gt;
            &lt;div class=&quot;form-group&quot;&gt;
              &lt;label for=&quot;infra-complexity&quot;&gt;Complexity Level&lt;/label&gt;
              &lt;select id=&quot;infra-complexity&quot;&gt;
                &lt;option value=&quot;1&quot; ${infrastructure.complexityLevel === 1 ? &apos;selected&apos; : &apos;&apos;}&gt;1 - Basic&lt;/option&gt;
                &lt;option value=&quot;2&quot; ${infrastructure.complexityLevel === 2 ? &apos;selected&apos; : &apos;&apos;}&gt;2 - Intermediate&lt;/option&gt;
                &lt;option value=&quot;3&quot; ${infrastructure.complexityLevel === 3 ? &apos;selected&apos; : &apos;&apos;}&gt;3 - Advanced&lt;/option&gt;
                &lt;option value=&quot;4&quot; ${infrastructure.complexityLevel === 4 ? &apos;selected&apos; : &apos;&apos;}&gt;4 - Expert&lt;/option&gt;
                &lt;option value=&quot;5&quot; ${infrastructure.complexityLevel === 5 ? &apos;selected&apos; : &apos;&apos;}&gt;5 - Master&lt;/option&gt;
              &lt;/select&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class=&quot;form-row&quot;&gt;
            &lt;div class=&quot;form-group&quot;&gt;
              &lt;label for=&quot;infra-icon&quot;&gt;Icon&lt;/label&gt;
              &lt;input type=&quot;text&quot; id=&quot;infra-icon&quot; value=&quot;${escapeHtml(infrastructure.icon || &apos;🔧&apos;)}&quot; placeholder=&quot;Emoji or icon code&quot;&gt;
            &lt;/div&gt;
            &lt;div class=&quot;form-group&quot;&gt;
              &lt;label for=&quot;infra-color&quot;&gt;Color&lt;/label&gt;
              &lt;input type=&quot;color&quot; id=&quot;infra-color&quot; value=&quot;${infrastructure.color || &apos;#154D59&apos;}&quot;&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          
          &lt;div class=&quot;form-section&quot;&gt;
            &lt;h3&gt;Features&lt;/h3&gt;
            &lt;div id=&quot;features-container&quot;&gt;
              ${renderInfrastructureFeatures(infrastructure.features || [])}
            &lt;/div&gt;
            &lt;button type=&quot;button&quot; id=&quot;add-feature-btn&quot; class=&quot;btn-secondary&quot;&gt;+ Add Feature&lt;/button&gt;
          &lt;/div&gt;
          
          &lt;div class=&quot;form-section&quot;&gt;
            &lt;h3&gt;Implementation Details&lt;/h3&gt;
            &lt;div id=&quot;implementation-container&quot;&gt;
              ${renderImplementationDetails(infrastructure.implementationDetails || [])}
            &lt;/div&gt;
            &lt;button type=&quot;button&quot; id=&quot;add-implementation-btn&quot; class=&quot;btn-secondary&quot;&gt;+ Add Implementation Step&lt;/button&gt;
          &lt;/div&gt;
          
          &lt;div class=&quot;form-actions&quot;&gt;
            &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot;&gt;Save Changes&lt;/button&gt;
            &lt;button type=&quot;button&quot; id=&quot;delete-infra-btn&quot; class=&quot;btn-danger&quot;&gt;Delete Component&lt;/button&gt;
          &lt;/div&gt;
        &lt;/form&gt;
      `;
      
      // Add event listeners for the form
      document.getElementById(&apos;infrastructure-form&apos;).addEventListener(&apos;submit&apos;, function(e) {
        e.preventDefault();
        saveInfrastructureChanges(index);
      });
      
      // Add event listener for adding features
      document.getElementById(&apos;add-feature-btn&apos;).addEventListener(&apos;click&apos;, function() {
        const featuresContainer = document.getElementById(&apos;features-container&apos;);
        const featureIndex = featuresContainer.children.length;
        
        const featureItem = document.createElement(&apos;div&apos;);
        featureItem.className = &apos;array-item&apos;;
        featureItem.innerHTML = `
          &lt;input type=&quot;text&quot; name=&quot;feature_${featureIndex}&quot; placeholder=&quot;Feature description&quot; class=&quot;feature-input&quot;&gt;
          &lt;button type=&quot;button&quot; class=&quot;btn-icon remove-feature&quot; data-index=&quot;${featureIndex}&quot;&gt;✕&lt;/button&gt;
        `;
        featuresContainer.appendChild(featureItem);
        
        // Add event listener for the remove button
        featureItem.querySelector(&apos;.remove-feature&apos;).addEventListener(&apos;click&apos;, function() {
          featuresContainer.removeChild(featureItem);
        });
      });
      
      // Add event listener for adding implementation details
      document.getElementById(&apos;add-implementation-btn&apos;).addEventListener(&apos;click&apos;, function() {
        const implementationContainer = document.getElementById(&apos;implementation-container&apos;);
        const implIndex = implementationContainer.children.length;
        
        const implItem = document.createElement(&apos;div&apos;);
        implItem.className = &apos;array-item&apos;;
        implItem.innerHTML = `
          &lt;input type=&quot;text&quot; name=&quot;implementation_${implIndex}&quot; placeholder=&quot;Implementation step&quot; class=&quot;implementation-input&quot;&gt;
          &lt;button type=&quot;button&quot; class=&quot;btn-icon remove-implementation&quot; data-index=&quot;${implIndex}&quot;&gt;✕&lt;/button&gt;
        `;
        implementationContainer.appendChild(implItem);
        
        // Add event listener for the remove button
        implItem.querySelector(&apos;.remove-implementation&apos;).addEventListener(&apos;click&apos;, function() {
          implementationContainer.removeChild(implItem);
        });
      });
      
      // Add event listeners for remove buttons
      document.querySelectorAll(&apos;.remove-feature&apos;).forEach(button =&gt; {
        button.addEventListener(&apos;click&apos;, function() {
          const featureItem = this.closest(&apos;.array-item&apos;);
          featureItem.parentElement.removeChild(featureItem);
        });
      });
      
      document.querySelectorAll(&apos;.remove-implementation&apos;).forEach(button =&gt; {
        button.addEventListener(&apos;click&apos;, function() {
          const implItem = this.closest(&apos;.array-item&apos;);
          implItem.parentElement.removeChild(implItem);
        });
      });
      
      // Add event listener for delete button
      document.getElementById(&apos;delete-infra-btn&apos;).addEventListener(&apos;click&apos;, function() {
        if (confirm(&apos;Are you sure you want to delete this infrastructure component?&apos;)) {
          courseData.infrastructure.splice(index, 1);
          saveToLocalStorage();
          showNotification(&apos;Infrastructure component deleted successfully&apos;);
          renderTreeView();
          editorContainer.innerHTML = &apos;&apos;;
        }
      });
    }
    
    // Helper function to render infrastructure features
    function renderInfrastructureFeatures(features) {
      if (!Array.isArray(features) || features.length === 0) {
        return &apos;&lt;div class=&quot;empty-message&quot;&gt;No features added yet&lt;/div&gt;&apos;;
      }
      
      return features.map((feature, index) =&gt; `
        &lt;div class=&quot;array-item&quot;&gt;
          &lt;input type=&quot;text&quot; name=&quot;feature_${index}&quot; value=&quot;${escapeHtml(feature)}&quot; class=&quot;feature-input&quot;&gt;
          &lt;button type=&quot;button&quot; class=&quot;btn-icon remove-feature&quot; data-index=&quot;${index}&quot;&gt;✕&lt;/button&gt;
        &lt;/div&gt;
      `).join(&apos;&apos;);
    }
    
    // Helper function to render implementation details
    function renderImplementationDetails(details) {
      if (!Array.isArray(details) || details.length === 0) {
        return &apos;&lt;div class=&quot;empty-message&quot;&gt;No implementation details added yet&lt;/div&gt;&apos;;
      }
      
      return details.map((detail, index) =&gt; `
        &lt;div class=&quot;array-item&quot;&gt;
          &lt;input type=&quot;text&quot; name=&quot;implementation_${index}&quot; value=&quot;${escapeHtml(detail)}&quot; class=&quot;implementation-input&quot;&gt;
          &lt;button type=&quot;button&quot; class=&quot;btn-icon remove-implementation&quot; data-index=&quot;${index}&quot;&gt;✕&lt;/button&gt;
        &lt;/div&gt;
      `).join(&apos;&apos;);
    }
    
    // Function to save infrastructure changes
    function saveInfrastructureChanges(index) {
      const infrastructure = courseData.infrastructure[index] || {};
      
      // Update basic information
      infrastructure.title = document.getElementById(&apos;infra-title&apos;).value;
      infrastructure.id = document.getElementById(&apos;infra-id&apos;).value;
      infrastructure.tagline = document.getElementById(&apos;infra-tagline&apos;).value;
      infrastructure.description = document.getElementById(&apos;infra-description&apos;).value;
      infrastructure.order = parseInt(document.getElementById(&apos;infra-order&apos;).value, 10) || 0;
      infrastructure.complexityLevel = parseInt(document.getElementById(&apos;infra-complexity&apos;).value, 10) || 1;
      infrastructure.icon = document.getElementById(&apos;infra-icon&apos;).value;
      infrastructure.color = document.getElementById(&apos;infra-color&apos;).value;
      
      // Update features
      infrastructure.features = [];
      document.querySelectorAll(&apos;.feature-input&apos;).forEach(input =&gt; {
        if (input.value.trim()) {
          infrastructure.features.push(input.value.trim());
        }
      });
      
      // Update implementation details
      infrastructure.implementationDetails = [];
      document.querySelectorAll(&apos;.implementation-input&apos;).forEach(input =&gt; {
        if (input.value.trim()) {
          infrastructure.implementationDetails.push(input.value.trim());
        }
      });
      
      // Update the courseData
      courseData.infrastructure[index] = infrastructure;
      
      // Save changes and update UI
      saveToLocalStorage();
      showNotification(&apos;Infrastructure component updated successfully&apos;);
      renderTreeView();
    }
    
    // Set up global event listeners
    function setupEventListeners() {
      console.log(&apos;Setting up event listeners...&apos;);
      treeView.addEventListener(&apos;click&apos;, handleTreeViewClick);
      saveBtn.addEventListener(&apos;click&apos;, saveData);
      exportBtn.addEventListener(&apos;click&apos;, exportData);
      if (importFile) {
        importFile.addEventListener(&apos;change&apos;, importData);
      } else {
        console.error(&apos;Import file element not found!&apos;);
      }
      searchInput.addEventListener(&apos;input&apos;, handleSearch);
      console.log(&apos;Event listeners set up successfully.&apos;);
    }
    
    // Stub: Save data to localStorage
    function saveData() {
      localStorage.setItem(&apos;courseData&apos;, JSON.stringify(courseData));
      showNotification(&apos;Data saved locally&apos;);
    }
    
    // Helper function to save data to localStorage
    function saveToLocalStorage() {
      localStorage.setItem(&apos;courseData&apos;, JSON.stringify(courseData));
    }
    
    // Stub: Export data function (already defined above)
    // Already implemented in exportData()
    
    // Stub: Search handler
    function handleSearch(event) {
      console.log(&apos;Search input changed&apos;);
      // You can add search logic here.
    }
    
    function showNotification(message, type) {
      const notification = document.getElementById(&apos;notification&apos;);
      notification.textContent = message;
      notification.classList.add(&apos;show&apos;);
      setTimeout(() =&gt; {
        notification.classList.remove(&apos;show&apos;);
      }, 3000);
    }
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</file><file path="data/pricing.ts">// src/data/pricing.ts
⋮----
export interface PricingTier {
  id: string;
  name: string;
  icon: string;
  description: string;
  basePrice: number;
  popular: boolean;
  badge?: string;
  features: string[];
  trackAccess: string[] | &quot;all&quot;;
  color: string;
  ctaText: string;
}
⋮----
export interface PricingConfig {
  showThirdTierPrice: boolean;
  promotionalOffer: boolean;
  promotionalDiscount: number;
  discountIncludesInstallment: boolean;
  promotionalOfferTiers: boolean[];
  installmentMarkup: number; // Default 10%
  installmentMonths: number; // Default 3
  lowestVisiblePrice: number;
}
⋮----
installmentMarkup: number; // Default 10%
installmentMonths: number; // Default 3
⋮----
// Module categories data
⋮----
// Support feature comparison data
⋮----
// Pricing configuration
⋮----
showThirdTierPrice: true, // Set to false to hide tier 3 price
⋮----
promotionalDiscount: 0.15, // 15% discount
⋮----
promotionalOfferTiers: [true, true, false], // Which tiers the promo applies to
installmentMarkup: 0.1, // 10% markup for installment plans
installmentMonths: 3, // 3 month installments
lowestVisiblePrice: 3095 // For &quot;prices from £X&quot; text
⋮----
// Pricing tiers data
⋮----
// Quiz data
⋮----
// Calculate total modules and other stats
export function calculateCourseStats()
⋮----
const totalHours = Math.round((totalModules * 35) / 60); // Estimate 35 minutes per module
⋮----
bonusResources: 12 // Fixed number of bonus resources</file><file path="lib/course-utils.ts">import { Briefcase, Compass, Pencil, Camera, Scissors, Rocket, Wrench } from &apos;lucide-react&apos;;
⋮----
// Import the thumbnail mapper to use instead of direct path construction
import { getThumbnail } from &apos;@/utils/thumbnailMapper&apos;;
import { findImageByBasename } from &apos;@/utils/importImages&apos;;
⋮----
// Types for course data structure matching the JSON format
export interface Submodule {
  id: string;
  title: string;
  duration: number;
  formattedDuration?: string;
  subtitle?: string;
  instructor?: string;
  week?: number;
  difficulty: number;
  resources?: unknown[];
}
⋮----
// Types for creator/case study data
export interface CreatorDataPoint {
  month: string;
  views: number;
  followers: number;
  interactions: number;
}
⋮----
export interface CreatorTotals {
  views: number;
  followers: number;
  interactions: number;
}
⋮----
export interface Creator {
  id: number;
  name: string;
  avatar: string;
  description: string;
  data: CreatorDataPoint[];
  totals: CreatorTotals;
}
⋮----
export interface Module {
  id: string;
  title: string;
  subtitle: string;
  icon: string;
  color: string;
  thumbnail: string;
  points: string[];
  tracks: string[];
  duration: number;
  founderMustWatch: boolean;
  entrepreneurSpecific: boolean;
  popular: boolean;
  featured: boolean;
  submodules: Submodule[];
  key?: string; // Optional key for React rendering
}
⋮----
key?: string; // Optional key for React rendering
⋮----
// Helper function to get the full path for a thumbnail
export const getThumbnailPath = (thumbnailName: string): string =&gt;
⋮----
// Use the thumbnailMapper&apos;s getThumbnail function which handles
// Vite imports properly and integrates with imageMap.js
⋮----
// Helper function to get avatar path properly
export const getAvatarPath = (avatarPath: string): string =&gt;
⋮----
// Try to find the avatar in the explicitly imported images
⋮----
// If not found, return the original path (warning will be shown in console)
⋮----
// Helper function to get submodule thumbnail path with caching
⋮----
export const getSubmoduleThumbnail = (submoduleId: string, moduleId?: string): string =&gt;
⋮----
// Create a cache key that combines submoduleId and moduleId (if provided)
⋮----
// Check if we have a cached result
⋮----
// Try to find the submodule to get its explicit thumbnail
⋮----
// If no moduleId is provided, search through all modules - use more efficient indexing
⋮----
// Use a flat map approach to reduce nesting
⋮----
// If no explicit thumbnail found, derive from submodule ID or use parent module&apos;s
⋮----
// Try the parent module&apos;s thumbnail
⋮----
// Cache the result
⋮----
// If we found a thumbnail or we&apos;re falling back to a default
⋮----
// Cache the result
⋮----
export interface Section {
  id: string;
  name: string;
  number: number;
  modules: Module[];
}
⋮----
export interface Category {
  id: string;
  name: string;
  color: string;
  sections: Section[];
}
⋮----
export interface Track {
  name: string;
  icon: string;
  color: string;
  description: string;
}
⋮----
export interface Course {
  title: string;
  categories: Category[];
  tracks: Track[];
  creators?: Creator[]; // Add creators/case studies to the course data structure
}
⋮----
creators?: Creator[]; // Add creators/case studies to the course data structure
⋮----
// Import course data from JSON file
import courseDataJson from &apos;../data/course-data.json&apos;;
⋮----
// Use the course data from JSON
⋮----
// Log for debugging
⋮----
// Helper function to get icon component by name
export const getTrackIcon = (iconName: string) =&gt;
⋮----
/**
 * Course statistics - calculated from the actual course data
 */
⋮----
// Calculate statistics from actual course data
get totalModules()
⋮----
get totalHours()
⋮----
// Calculate total resources across all submodules
get resources()
⋮----
// Count modules that mention &quot;workshop&quot; in title or subtitle
get workshops()
⋮----
// Count modules that have &quot;workshop&quot; in their title or subtitle (case insensitive)
⋮----
// Count PDF resources in submodules
get pdfs()
⋮----
// Count resources that contain &quot;pdf&quot;, &quot;guide&quot;, &quot;worksheet&quot;, or &quot;template&quot; (case insensitive)
⋮----
// Count template resources in submodules
get templates()
⋮----
// Count resources that contain &quot;template&quot; or &quot;framework&quot; (case insensitive)
⋮----
// Count number of systems from the systemDataMap
get systems()
⋮----
// Get all available tracks from course data
const getTracks = (): Track[] =&gt;
⋮----
// Only return actual data, no fallbacks
⋮----
// Get all tracks from course data
⋮----
// Get all sections for navigation, including both regular and system sections
const getAllSections = () =&gt;
⋮----
// Add system sections first
// These are special sections that represent systems described in getSystemData
// They&apos;re included separately because they may not be in the course JSON
⋮----
// Add system sections to result
⋮----
// Add regular sections from course data
⋮----
// Create a section entry with basic properties
⋮----
// Log for debugging
⋮----
// Sort by section number
⋮----
// Get all sections for navigation
⋮----
// Get all featured modules across all sections with safety checks
export const getFeaturedModules = (): Module[] =&gt;
⋮----
// Mapping from ModuleHUD section IDs to course data section IDs
⋮----
// Map UI section IDs to actual data section IDs - EXACT MATCHES to course-data.json
⋮----
// Systems are handled separately
⋮----
// Helper function to map UI section ID to actual data section ID
export const mapSectionId = (sectionId: string, displayKey?: string): string =&gt;
⋮----
// For handling systems and compound IDs
⋮----
// Return a special identifier for system sections
⋮----
// Handle duplicate section IDs with display keys
⋮----
return &quot;business_delegation&quot;; // Use a consistent ID for all delegation sections
⋮----
// Map the section ID if it exists in the map
⋮----
// For debugging
⋮----
// Return as is if no mapping exists
⋮----
// Section ID to modules mapping cache
⋮----
// Get modules for a specific section with improved section ID mapping
export const getModulesForSection = (sectionId: string, displayKey?: string): Module[] =&gt;
⋮----
// Create a cache key that combines sectionId and displayKey (if provided)
⋮----
// Check if we have a cached result
⋮----
// Handle system sections separately
⋮----
// For system sections, we would normally return modules from the corresponding section
// Since this appears to be handled outside the normal course data, we&apos;ll use the system data
⋮----
// Create mock modules for system sections if not in course data
⋮----
// Cache the result
⋮----
// Cache empty array for not found
⋮----
// Map the section ID to the actual ID in the data
⋮----
// Debugging: Check if the mapped section ID exists in courseData
⋮----
// Check if this section ID exists in the course data
⋮----
// If not found, log all available sections to help diagnose
⋮----
// Use a more efficient flat-map approach to find the section
⋮----
// Cache the result
⋮----
// For system sections, create a module from the system data
// This isn&apos;t a fallback, but rather a special case for system sections
// that are defined in the systemDataMap but not in the JSON
⋮----
// Use the global systemDataMap for consistency
⋮----
// Get the correct system data ID
⋮----
// Cache the result
⋮----
// Log for debugging when section not found
⋮----
// No placeholders - if section not found, return empty array
// Cache empty result
⋮----
// Cache for sections by ID
⋮----
// Get section by ID with safety checks and ID mapping
export const getSection = (sectionId: string, displayKey?: string): Section | null =&gt;
⋮----
// Create a cache key that combines sectionId and displayKey (if provided)
⋮----
// Check if we have a cached result
⋮----
// Handle system sections separately
⋮----
// For system sections, create a mock section using system data
⋮----
// Use the global systemDataMap for consistency
⋮----
// Get the correct system data ID
⋮----
// Create a mock section with a module from the system data
⋮----
number: 99, // High number for systems
⋮----
// Cache the mock section
⋮----
// Cache the null result for not found
⋮----
// Map the section ID to the actual ID in the data
⋮----
// Use a more efficient flat-map approach to find the section
⋮----
// Cache the found section
⋮----
// Log for debugging when section not found
⋮----
// Cache the null result for not found
⋮----
// Get modules that are marked for founders with safety checks
// Only checking for founderMustWatch property as per user clarification
export const getFounderModules = (): Module[] =&gt;
⋮----
// Check for specific priority modules first
⋮----
// Prioritize the specified modules
⋮----
// Add priority modules first if found
⋮----
// Add other founder modules
⋮----
// If no founder modules found, return an empty array
// No fallbacks - only show actual data
⋮----
// Get modules by track name with safety checks
export const getModulesByTrack = (trackName: string): Module[] =&gt;
⋮----
// Get all unique instructors from submodules with safety checks
export const getAllInstructors = (): string[] =&gt;
⋮----
// Get case study creators data with no fallbacks
export const getCreators = (): Creator[] =&gt;
⋮----
// Only return actual data from JSON, no fallbacks
⋮----
// Calculate total duration of all modules with safety checks
export const calculateTotalDuration = (): number =&gt;
⋮----
// Section descriptions for ModuleBreakdown with no fallbacks
export const getSectionDescription = (sectionId: string): string =&gt;
⋮----
// Try to find the section in the data with safety checks
⋮----
// If section is found and it has modules with a subtitle, return that subtitle
⋮----
// Handle system sections specifically
⋮----
// Return first sentence of description for system sections
⋮----
return firstSentence.replace(/\*\*/g, &apos;&apos;); // Remove markdown formatting
⋮----
// Log that we couldn&apos;t find a description
⋮----
// Return the section ID as a last resort, not a hardcoded generic description
// This makes it obvious in the UI that actual data is missing rather than hiding it
⋮----
// Get a specific module by ID with safety checks
export const getModuleById = (moduleId: string): Module | null =&gt;
⋮----
// Return the module with a key for React rendering
⋮----
key: `module-${moduleId}` // Add a key for React
⋮----
// Get all categories with safety check
export const getCategories = (): Category[] =&gt;
⋮----
// Get a specific submodule by IDs
export const getSubmodule = (sectionId: string, moduleId: string, submoduleId: string): Submodule | null =&gt;
⋮----
// Get all submodules for a specific module with enhanced data
export const getSubmodulesForModule = (moduleId: string): Submodule[] =&gt;
⋮----
// Add a key property to each submodule for React rendering
// and ensure thumbnail paths are properly set
⋮----
// Convert duration from minutes to &quot;MM:SS&quot; format if it&apos;s a number
⋮----
// Get thumbnail for this submodule
⋮----
key: `${moduleId}-submodule-${submodule.id || index}`, // Unique key for React rendering
formattedDuration, // Add formatted duration for display
thumbnailUrl: thumbnailPath, // Add processed thumbnail URL
⋮----
// Get content hierarchy for navigation and course viewer
export const getContentHierarchy = () =&gt;
⋮----
key: string; // Added key for React rendering
⋮----
key: `${category.id}-${section.id}-${module.id || moduleIndex}` // Unique key for React
⋮----
// Filter modules by various criteria
export const filterModules = (filters: {
  difficulty?: number,
  instructor?: string,
  highValue?: boolean,
  featured?: boolean,
  track?: string
}): Module[] =&gt;
⋮----
// Apply filters
⋮----
// Search modules by text content
export const searchModules = (searchTerm: string): Module[] =&gt;
⋮----
// Search in title, subtitle, and points
⋮----
// Note: The original getThumbnailPath is declared above, this is just a comment
// to explain that the function has been enhanced with better error handling
⋮----
// Get module title by ID with safety check
export const getModuleTitle = (moduleId: string): string =&gt;
⋮----
// Get module thumbnail by ID with safety check
export const getModuleThumbnail = (moduleId: string): string =&gt;
⋮----
// System information for ModuleHUD
interface SystemData {
  id: string;
  title: string;
  description: string;
  features: string[];
  subtitle?: string; // Short description for small block display
  emoji?: string; // Emoji for the system
  tagline?: string; // Tagline for the system
  hasCustomCode?: boolean;
  hasTemplates?: boolean;
  hasAutomation?: boolean;
  implementationTime?: string;
  complexityLevel?: string;
}
⋮----
subtitle?: string; // Short description for small block display
emoji?: string; // Emoji for the system
tagline?: string; // Tagline for the system
⋮----
// Get system data for the Systems blocks in ModuleHUD
export const getSystemData = (systemId: string): SystemData | null =&gt;
⋮----
// This data would ideally come from the course-data.json file
// For now, we&apos;ll define it here but it could be moved to the JSON later
⋮----
// Export the system data mapping for consistent use across components
⋮----
// Export default object with all utils
⋮----
getCreators, // Add the new case study/creators function
getModuleTitle, // Helper for modal
getModuleThumbnail, // Helper for modal
getSubmoduleThumbnail, // Helper for submodule thumbnails
getSystemData, // System data for ModuleHUD
systemDataMap, // Exported system data mapping
mapSectionId // Add this line to export the mapSectionId function</file><file path="lib/utils.ts">import { clsx, type ClassValue } from &quot;clsx&quot;
import { twMerge } from &quot;tailwind-merge&quot;
⋮----
export function cn(...inputs: ClassValue[])</file><file path="pages/DebugPage.tsx">// File: src/pages/DebugPage.tsx
import { Link } from &apos;react-router-dom&apos;;
import { DirectTest } from &apos;../components/DirectTest&apos;;
import { DirectClassTest } from &apos;../components/DirectClassTest&apos;;
⋮----
export default function DebugPage()
⋮----
{/* All the links */}
⋮----
{/* Include all other links from the original code */}
{/* ... */}</file><file path="pages/NotFoundPage.tsx">// File: src/pages/NotFound.tsx
import { Link } from &apos;react-router-dom&apos;;
⋮----
export default function NotFound()</file><file path="Qualification_components/modal-components/recommendation/FoundationRecommendation.tsx">import React from &apos;react&apos;;
import { Button } from &quot;../../../components/ui/button&quot;;
import { CheckCircle } from &apos;lucide-react&apos;;
⋮----
interface FoundationRecommendationProps {
  recommendation: any;
  onUpgradeSelect: () =&gt; void;
  onPurchase: () =&gt; void;
  answers: any;
}
⋮----
{/* LEFT COLUMN - Recommended Foundation Program */}
⋮----
{/* RIGHT COLUMN - Executive Partnership (what they&apos;re missing) */}</file><file path="Qualification_components/modal-components/recommendation/PremiumRecommendation.tsx">import React, { useState } from &apos;react&apos;;
import { Button } from &quot;../../../components/ui/button&quot;;
import { CheckCircle, Check } from &apos;lucide-react&apos;;
⋮----
interface PremiumRecommendationProps {
  recommendation: any;
  showCalendly: boolean;
  onClose: () =&gt; void;
  answers: any;
}
⋮----
interface Enhancement {
  id: string;
  name: string;
  price: string;
}
⋮----
// Handle enhancement toggles
const toggleEnhancement = (id: string) =&gt;
⋮----
// Available enhancements based on recommendation type
⋮----
{/* Left side - Features and enhancements */}
⋮----
{/* Core features */}
⋮----
{/* Optional enhancements */}
⋮----
{/* Right side - Calendly */}
⋮----
{/* Calendly header */}
⋮----
{/* Calendly Widget - Takes up remaining height */}</file><file path="Qualification_components/modal-components/AnalysisAnimation.tsx">import React, { useState, useRef } from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
import { Check } from &apos;lucide-react&apos;;
⋮----
interface AnalysisAnimationProps {
  onComplete: () =&gt; void;
}
⋮----
const AnalysisAnimation: React.FC&lt;AnalysisAnimationProps&gt; = (
⋮----
// GSAP animation sequence
⋮----
// Delay the completion callback to ensure loading bar is seen completing
⋮----
// Animation for analysis steps
⋮----
// Progress bar animation - faster to ensure it completes
⋮----
// Loading bar shimmer effect
⋮----
// Animate data connection lines
⋮----
// Particle/dot animations with more varied colors
const createParticles = () =&gt;
⋮----
// Array of theme-aware colors for particles
⋮----
// Randomly select a color from the array
⋮----
// Random position
⋮----
// Animate dot
⋮----
// Trigger particles multiple times
⋮----
{/* Colorful background gradient overlay */}
⋮----
{/* Tech pattern overlay */}
⋮----
{/* Technical circuit-like animation elements */}
⋮----
{/* Animated &quot;data&quot; connections */}
⋮----
{/* Centered, wider progress bar with shimmer effect */}
⋮----
{/* Shimmer effect */}
⋮----
{/* Completion message that appears when the bar is full */}
⋮----
{/* Minimized floating elements */}</file><file path="Qualification_components/modal-components/AnalysisBreakdown.tsx">import React from &apos;react&apos;;
import { Button } from &quot;../../components/ui/button&quot;;
⋮----
interface AnalysisBreakdownProps {
  answers: any;
  score: number;
  onContinue: () =&gt; void;
}
⋮----
// Calculate individual scores for visualization
⋮----
// Calculate percentage scores for visualization
⋮----
// Get appropriate background color based on score
⋮----
{/* Factor breakdown - more visually appealing */}
⋮----
{/* Implementation match - improved visual appearance */}
⋮----
{/* Visual score indicator */}</file><file path="Qualification_components/modal-components/ContactStage.tsx">import React from &apos;react&apos;;
import { Mail, ChevronRight, CheckCircle } from &apos;lucide-react&apos;;
import { Button } from &quot;../../components/ui/button&quot;;
⋮----
interface ContactStageProps {
  answers: {
    name: string;
    email: string;
    company: string;
    position: string;
  };
  errors: {
    name: string;
    email: string;
    company: string;
  };
  onChange: (field: string, value: string) =&gt; void;
  onNext: () =&gt; void;
  onBack: () =&gt; void;
  canProceed: boolean;
}
⋮----
{/* Stage illustration */}
⋮----
{/* Form header */}
⋮----
{/* Form fields - responsive layout */}
⋮----
{/* Left Column - About You */}
⋮----
{/* Right Column - About the Brand */}
⋮----
{/* Security message and buttons */}</file><file path="Qualification_components/modal-components/index.ts">// Recommendation components</file><file path="Qualification_components/modal-components/IntroStage.tsx">import React from &apos;react&apos;;
import { BarChart4, Clock, Award, Users, Compass, ChevronRight } from &apos;lucide-react&apos;;
import { Button } from &quot;../../components/ui/button&quot;;
⋮----
interface IntroStageProps {
  onNext: () =&gt; void;
  onClose: () =&gt; void;
}
⋮----
{/* Main title section with more vibrant styling */}
⋮----
{/* Social proof badge with enhanced styling */}
⋮----
{/* Mini Feature Showcase - Improved with more vibrant styling */}
⋮----
{/* Feature 1 */}
⋮----
{/* Feature 2 */}
⋮----
{/* Feature 3 */}
⋮----
{/* Process steps - more streamlined and informative */}
⋮----
{/* Call to action section */}</file><file path="Qualification_components/modal-components/ModalContainer.tsx">import React, { useRef } from &apos;react&apos;;
import { X } from &apos;lucide-react&apos;;
import { Button } from &quot;../../components/ui/button&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
⋮----
interface ModalContainerProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  stage: string;
  children: React.ReactNode;
  showProgressBar?: boolean;
  progress?: number;
  stageIcon: React.ReactNode;
  stageTitle: string;
}
⋮----
// Refs for GSAP animations
⋮----
// Handle animation with GSAP
⋮----
// Get computed theme variables for animation
⋮----
// Initial modal animation
⋮----
// Animate overlay
⋮----
// Animate modal
⋮----
// Floating elements animation
⋮----
// Animate progress bar if shown
⋮----
// Handle modal close animation
const handleClose = () =&gt;
⋮----
// Animate overlay
⋮----
// Animate modal
⋮----
{/* Overlay backdrop */}
⋮----
{/* Modal content - responsive sizing */}
⋮----
{/* Visual elements */}
⋮----
{/* Theme-aware patterns */}
⋮----
{/* Modal header */}
⋮----
{/* Progress bar - only show when indicated */}
⋮----
{/* Add decorative elements within the progress bar */}
⋮----
{/* Modal content area */}</file><file path="Qualification_components/modal-components/ModalFooter.tsx">import React from &apos;react&apos;;
import { Button } from &quot;../../components/ui/button&quot;;
import { ChevronRight } from &apos;lucide-react&apos;;
⋮----
interface ModalFooterProps {
  stage: string;
  canProceed: boolean;
  handleClose: () =&gt; void;
  goToPreviousStage: () =&gt; void;
  goToNextStage: () =&gt; void;
  isFirstStage?: boolean;
  isLastStage?: boolean;
  nextButtonText?: string;
  backButtonText?: string;
  closeButtonText?: string;
}
⋮----
{/* Back button - only show if not on first or last stage */}
⋮----
{/* Cancel button - only on first stage or last stage */}
⋮----
{/* Continue button - don&apos;t show on analysis stages */}</file><file path="Qualification_components/modal-components/QuestionStage.tsx">import React from &apos;react&apos;;
import { CheckCircle } from &apos;lucide-react&apos;;
⋮----
interface QuestionOption {
  id: string;
  label: string;
  description: string;
  value: string;
}
⋮----
interface QuestionStageProps {
  title: string;
  description: string;
  icon: React.ReactNode;
  gradientClass: string;
  options: QuestionOption[];
  selectedValue: string;
  onSelect: (value: string) =&gt; void;
  isAnimating: boolean;
  selectedChoice: string | null;
}
⋮----
{/* Stage illustration */}
⋮----
{/* Question header */}
⋮----
{/* Options list */}</file><file path="Qualification_components/modal-components/StageIcon.tsx">import React from &apos;react&apos;;
import { 
  X, ChevronRight, Check, Info, Calendar, CheckCircle, Moon, Sun,
  Users, Compass, Clock, BarChart4, Mail, Award, Briefcase
} from &apos;lucide-react&apos;;
⋮----
interface StageIconProps {
  stage: string;
  className?: string;
  size?: number;
}
⋮----
const StageIcon: React.FC&lt;StageIconProps&gt; = (</file><file path="Qualification_components/integration-guide.md"># Qualification Modal Implementation Guide

## Overview

This guide explains how to implement the Qualification Modal system for your high-ticket product landing page. The system follows the &quot;solution spectrum&quot; approach outlined in the implementation strategy document, presenting different implementation options based on user responses to qualification questions.

## Components Included

1. **VSQualificationModal.jsx** - The main modal component that handles the qualification journey
2. **ModalImplementation.jsx** - Example implementation showing how to integrate the modal with your landing page

## Key Features

- **Multi-stage qualification process** that gathers strategic information
- **Dynamic recommendation engine** that scores responses to determine the right implementation approach
- **Theme-aware styling** that works seamlessly with your VS design system in both light and dark modes
- **Engagement tracking** to factor user engagement into recommendation calculations
- **Calendly integration** for seamless booking with prefilled qualification data

## Implementation Instructions

### Step 1: Install Dependencies

Make sure you have the required dependencies installed:

```bash
npm install @calendly/react-calendly lucide-react
```

### Step 2: Integrate the Modal Component

1. Copy the `VSQualificationModal.jsx` component to your project&apos;s components directory.
2. Import the component in your landing page:

```jsx
import VSQualificationModal from &apos;./components/VSQualificationModal&apos;;
```

3. Add state management for opening and closing the modal:

```jsx
const [isModalOpen, setIsModalOpen] = useState(false);

const openModal = () =&gt; {
  setIsModalOpen(true);
  // Disable scroll on body when modal is open
  document.body.style.overflow = &apos;hidden&apos;;
};

const closeModal = () =&gt; {
  setIsModalOpen(false);
  // Re-enable scroll on body when modal is closed
  document.body.style.overflow = &apos;auto&apos;;
};
```

4. Add the modal component to your page:

```jsx
&lt;VSQualificationModal 
  isOpen={isModalOpen} 
  onClose={closeModal} 
/&gt;
```

5. Create CTA buttons that open the modal:

```jsx
&lt;button
  onClick={openModal}
  className=&quot;bg-[var(--theme-primary)] hover:bg-[var(--theme-primary-hover)] text-white font-medium py-2 px-4 rounded-lg transition-colors&quot;
&gt;
  Find Your Implementation Strategy
&lt;/button&gt;
```

### Step 3: Customize the Calendly Integration

1. Replace the placeholder Calendly URL in the VSQualificationModal.jsx file:

```jsx
&lt;PopupModal
  url=&quot;https://calendly.com/your-calendly-link&quot; // Replace with your actual Calendly link
  // other props...
/&gt;
```

2. Customize the custom fields mapping if needed. By default, the component maps:
   - `a1`: Team size
   - `a2`: Implementation preference
   - `a3`: Timeline
   - `a4`: Content volume
   - `a5`: Recommendation type
   - `a6`: Engagement metrics

### Step 4: Customize Recommendation Scoring

You can adjust the recommendation scoring logic in the `processAnswers` function to match your specific product tiers. The current implementation follows this logic:

- Team Size (1-3 points)
  - Large team (20+): 3 points
  - Medium team (10-19): 2 points
  - Small team (1-9): 1 point

- Implementation Support (1-3 points)
  - Full service: 3 points
  - Guided implementation: 2 points
  - Self-directed: 1 point

- Timeline (0-2 points)
  - Immediate (0-1 month): 2 points
  - Next quarter: 1 point
  - Exploratory: 0 points

- Content Volume (0-2 points)
  - High volume (50+/mo): 2 points
  - Medium volume (10-49): 1 point
  - Low volume (&lt;10): 0 points

- Engagement Bonus (0-1 point)
  - High engagement: 1 point
  - Standard engagement: 0 points

**Recommendation Thresholds:**
- Executive (8-11 points)
- Comprehensive (5-7 points)
- Foundation (1-4 points)

### Step 5: Customize Recommendation Content

Modify the recommendation descriptions and features in the VSQualificationModal.jsx file to match your specific implementation approaches:

1. Update the base explanations in the `processAnswers` function:

```jsx
const baseExplanations = {
  foundation: &quot;Your custom foundation tier explanation&quot;,
  comprehensive: &quot;Your custom comprehensive tier explanation&quot;,
  executive: &quot;Your custom executive tier explanation&quot;
};
```

2. Update the pricing in the `processAnswers` function:

```jsx
pricing: recommendationType === &apos;executive&apos; ? &apos;£9,500&apos; : 
        recommendationType === &apos;comprehensive&apos; ? &apos;£5,500&apos; : 
        &apos;£1,950&apos;
```

3. Update the feature lists in the Recommendation Stage section of the modal.

## CRM Integration

The component currently stores qualification data in sessionStorage. For actual CRM integration:

1. Add your CRM&apos;s API endpoints and calls in the `handleBookCall` function:

```jsx
// Example CRM integration
const saveToCRM = async (leadData) =&gt; {
  try {
    const response = await fetch(&apos;your-crm-endpoint&apos;, {
      method: &apos;POST&apos;,
      headers: {
        &apos;Content-Type&apos;: &apos;application/json&apos;,
      },
      body: JSON.stringify(leadData),
    });
    return await response.json();
  } catch (error) {
    console.error(&apos;Error saving to CRM:&apos;, error);
  }
};

// Then call this in handleBookCall
saveToCRM(leadData);
```

## Abandoned Journey Recovery

To implement abandoned journey recovery:

1. When the user starts the qualification process, store their progress in localStorage.
2. Create an email capture in the first step.
3. If they abandon the process, send a recovery email with a link to continue.
4. When they return, check localStorage and restore their progress.

## Testing

Test the qualification journey on different devices and in both light and dark modes to ensure the theme-aware styling works correctly.

## Advanced Customization

### Analytics Integration

The component tracks engagement metrics that can be sent to your analytics platform:

```jsx
// Example analytics integration in handleBookCall
const sendToAnalytics = (data) =&gt; {
  // Your analytics code here
  window.dataLayer = window.dataLayer || [];
  window.dataLayer.push({
    event: &apos;qualificationCompleted&apos;,
    qualification: data.qualification,
    engagement: data.engagement
  });
};

// Then call this in handleBookCall
sendToAnalytics(leadData);
```

### A/B Testing

You can implement A/B testing by creating variants of the qualification questions or scoring algorithm:

```jsx
// Example A/B test implementation
const abTestVariant = Math.random() &gt; 0.5 ? &apos;A&apos; : &apos;B&apos;;

// Use different scoring for each variant
const processAnswers = () =&gt; {
  if (abTestVariant === &apos;A&apos;) {
    // Original scoring logic
  } else {
    // Alternative scoring logic
  }
};
```

## Troubleshooting

### Modal Not Appearing

- Verify that you&apos;re correctly updating the `isOpen` state.
- Check for console errors related to React rendering.

### Calendly Integration Issues

- Ensure you have the correct Calendly URL.
- Verify that the prefill fields match your Calendly custom questions.
- Test the integration in an incognito window to avoid caching issues.

### Styling Inconsistencies

- Make sure your app has the theme CSS variables defined in globals.css.
- Test in both light and dark modes to ensure proper theme transitions.

## Conclusion

This qualification modal system provides a sophisticated, personalized experience for your website visitors while helping you guide them to the most appropriate implementation approach for their needs. By collecting strategic information rather than focusing on budget constraints upfront, it creates a consultative sales process that feels premium and tailored.</file><file path="Qualification_components/modal-implementation.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import VSQualificationModal from &apos;./qualification-modal&apos;;
⋮----
/**
 * Example implementation of the VSQualificationModal component
 * This shows how to integrate the qualification modal into your landing page
 */
⋮----
const openModal = () =&gt;
⋮----
// Disable scroll on body when modal is open
⋮----
const closeModal = () =&gt;
⋮----
// Re-enable scroll on body when modal is closed
⋮----
// Enable test mode with keyboard shortcut (Ctrl+Shift+T)
⋮----
const handleKeyDown = (event: KeyboardEvent) =&gt;
⋮----
// Listen for ESC key to close modal
⋮----
const handleEscKey = (event: KeyboardEvent) =&gt;
⋮----
{/* Example usage in your landing page */}
⋮----
{/* Hero section with CTA button */}
⋮----
{/* Example section with another CTA */}
⋮----
{/* Card 1 */}
⋮----
{/* Card 2 */}
⋮----
{/* Card 3 */}
⋮----
{/* Modal component with test mode (press Ctrl+Shift+T to toggle test mode) */}
⋮----
{/* Test mode indicator */}</file><file path="Qualification_components/qualification-modal.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import {
  Users, Compass, Clock, BarChart4, Mail, Award, Briefcase, Sun, Moon
} from &apos;lucide-react&apos;;
⋮----
import {
  ModalContainer,
  ModalFooter,
  StageIcon,
  IntroStage,
  QuestionStage,
  ContactStage,
  AnalysisAnimation,
  AnalysisBreakdown,
  FoundationRecommendation,
  PremiumRecommendation
} from &apos;./modal-components&apos;;
⋮----
interface VSQualificationModalProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  /** Optional testing mode flag that shows debug info, defaults to false */
  testMode?: boolean; 
}
⋮----
/** Optional testing mode flag that shows debug info, defaults to false */
⋮----
/**
 * VSQualificationModal - A theme-aware qualification journey component
 * 
 * This component implements a multi-stage qualification process that:
 * 1. Collects user information through strategic questions
 * 2. Scores responses to determine the appropriate implementation approach
 * 3. Provides a personalized recommendation
 * 4. Enables direct Calendly booking
 *
 * The component uses theme-aware styling to ensure proper appearance in both
 * light and dark modes according to the VS design system.
 */
⋮----
// Modal state management
⋮----
// Define the sequence of stages
⋮----
// State for analysis data
⋮----
// Animation state
⋮----
// Tracking modal engagement for analytics and scoring
⋮----
// Timer for tracking time spent in qualification process
⋮----
// Track analytics events
const trackEvent = (eventName: string, properties =
⋮----
// In production, this would send to your analytics platform
// Example: window.analytics.track(eventName, properties);
⋮----
// For development, log to console
⋮----
// Handle user answers with validation, animation, and auto-advance
const handleAnswerChange = (key: string, value: string) =&gt;
⋮----
// Special handling for form fields (name, email, company, position)
⋮----
// For form fields, we don&apos;t want animation or blocking during animation
⋮----
// Only set animation state for multiple choice options, not form fields
⋮----
// Simulate the animation completion for multiple-choice questions
⋮----
// Get the next stage in the sequence
⋮----
// Reset animation state
⋮----
// Update actual answer
⋮----
// Clear error for this field if it exists
⋮----
// Track interaction for engagement metrics
⋮----
// Track answer changed event
⋮----
// Validate form fields
const validateFields = (): boolean =&gt;
⋮----
// Validate based on current stage
⋮----
// Name validation
⋮----
// Email validation
⋮----
// Company validation
⋮----
// Save progress and implement abandoned journey recovery
⋮----
// Keep data for 30 minutes in case user returns
⋮----
}, 1800000); // 30 minutes
⋮----
// Save progress after each stage change for abandoned journey recovery
⋮----
// Handle saved progress quietly without alert
⋮----
// Check for abandoned journey
⋮----
// If journey was abandoned recently (within 24 hours)
// and user is beyond intro stage, we might restore progress
⋮----
// For now, just always continue - no need to interrupt
⋮----
// Clear old progress
⋮----
// Calendly script loading
⋮----
// Load Calendly script when needed
⋮----
// Clean up script when component unmounts
⋮----
// Calculate recommendation based on answers and engagement
const processAnswers = () =&gt;
⋮----
// Parse team size to number
⋮----
// Initialize score
⋮----
// 1. Team size factor (1-3 points)
⋮----
// 2. Implementation support preference (1-3 points)
⋮----
// 3. Timeline factor (0-2 points)
⋮----
// &apos;exploratory&apos; adds 0 points
⋮----
// 4. Content volume (0-2 points)
⋮----
// &apos;low&apos; adds 0 points
⋮----
// 5. Engagement bonus (0-1 point)
⋮----
// Determine recommendation based on score (1-11 points possible)
⋮----
showCalendly = false; // No Calendly for Foundation tier
⋮----
// Generate personalized explanation based on needs
⋮----
// Check for specific needs to personalize the message
⋮----
// Base explanations for each recommendation type
⋮----
// Start with the base explanation
⋮----
// Add specifics for a more personalized touch
⋮----
// Add recommendation-specific details
⋮----
// First show the analysis animation
⋮----
// Track the analysis event
⋮----
// Store calculated data for later use
⋮----
// Handle analysis animation completion
const handleAnalysisAnimationComplete = () =&gt;
⋮----
// Show the analysis breakdown
⋮----
// Track the breakdown event
⋮----
// Handle breakdown completion
const handleBreakdownComplete = () =&gt;
⋮----
// Now set the recommendation with all details
⋮----
// Move to recommendation stage
⋮----
// Update showCalendly state based on recommendation
⋮----
// Track the recommendation event
⋮----
// Process CRM integration
⋮----
// Process CRM integration for lead data
const processCrmIntegration = async () =&gt;
⋮----
// Build comprehensive lead data for CRM integration
⋮----
// Store in session storage for CRM integration
⋮----
// Track the booking event
⋮----
// Send to backend API for Kajabi and Kit integration
⋮----
// Prepare data for Kajabi integration
⋮----
// Prepare data for Kit integration
⋮----
// Send data to backend API for processing
⋮----
// Log the data for debugging
⋮----
// Proceed to next stage
const goToNextStage = () =&gt;
⋮----
// For contact form, validate fields before proceeding
⋮----
// If validation fails, track the event and return
⋮----
// Track the stage completion event
⋮----
// Proceed to next stage based on current stage
⋮----
processAnswers(); // Calculate recommendation and go to analysis stage
⋮----
// Use the stage sequence for the default case
⋮----
// Go back to previous stage
const goToPreviousStage = () =&gt;
⋮----
// Track the navigation event
⋮----
// Use the stage sequence
⋮----
// Function to get the stage title
const getStageTitle = () =&gt;
⋮----
// Validate if current stage can proceed
const canProceed = () =&gt;
⋮----
// Need to wrap in a block when using variable declarations
⋮----
// Determine current progress percentage
const getProgress = () =&gt;
⋮----
// Only count the active question stages (team size to contact) for progress calculation
⋮----
// For intro stage, show 0 progress
⋮----
// For recommendation stage, show 100% progress
⋮----
// Calculate how far along we are between first question and recommendation
⋮----
// If before questions, show 0
⋮----
// Calculate progress percentage through the question stages
⋮----
// If modal is not open, don&apos;t render anything
⋮----
// Function to toggle theme for testing
const toggleTheme = () =&gt;
⋮----
// Define question stage options
⋮----
{/* Test mode controls */}
⋮----
{/* Main Modal Component */}
⋮----
{/* Intro Stage */}
⋮----
{/* Team Size Stage */}
⋮----
onSelect=
⋮----
{/* Implementation Support Stage */}
⋮----
{/* Timeline Stage */}
⋮----
{/* Content Volume Stage */}
⋮----
{/* Contact Stage */}
⋮----
canProceed=
⋮----
{/* Analysis Animation Stage */}
⋮----
{/* Analysis Breakdown Stage */}
⋮----
{/* Recommendation Stage - Different layouts based on recommendation type */}
⋮----
onPurchase={() =&gt; alert(&apos;Starting Foundation Program checkout process&apos;)} // Would implement actual checkout in production
⋮----
{/* Modal Footer - Not shown during analysis stages */}</file><file path="Qualification_components/tia-booking-page.tsx">import React, { useEffect, useRef } from &apos;react&apos;;
import { ArrowLeft, CheckCircle } from &apos;lucide-react&apos;;
⋮----
interface TiaBookingPageProps {
  recommendationTitle: string;
  price: string;
  responses: Record&lt;string, string&gt;;
  responseKeys: string[];
  selectedExtras: string[];
  extras: {
    name: string;
    price: string;
  }[];
  onBack: () =&gt; void;
}
⋮----
// Add Calendly type definition
⋮----
interface Window {
    Calendly?: {
      initInlineWidget: (options: {
        url: string;
        parentElement: HTMLElement;
        prefill?: any;
        utm?: any;
      }) =&gt; void;
      initBadgeWidget: (options: { 
        url: string; 
        text: string; 
        color: string; 
        textColor: string; 
        branding: boolean; 
        position?: &quot;center&quot; | &quot;bottom-right&quot; | &quot;bottom-left&quot; | &quot;top-right&quot; | &quot;top-left&quot; | undefined; 
      }) =&gt; void;
      initPopupWidget: (options: any) =&gt; void;
    };
    calendlyScriptPromise?: Promise&lt;any&gt;;
  }
⋮----
// Calculate total price including extras
const calculateTotalPrice = (): string =&gt;
⋮----
// Extract numeric value from base price
⋮----
// Add prices of selected extras
⋮----
// If base price contains &quot;from&quot;, keep that wording
⋮----
// Load and initialize Calendly
⋮----
// Use a single global script loading promise to prevent duplicate loading
⋮----
// Check if script already exists
⋮----
// Check if script is already in the DOM
⋮----
// If not, create and add the script
⋮----
// Set up load handlers
⋮----
// Add to document
⋮----
// If script tag exists but Calendly isn&apos;t loaded yet, wait for it
⋮----
// Set a timeout to avoid infinite checking
⋮----
// Initialize Calendly
const initCalendly = async () =&gt;
⋮----
// Wait for Calendly to be available
⋮----
// Use the appropriate meeting URL
⋮----
// Initialize with details about the selected package
⋮----
// Start initialization
⋮----
{/* Back button */}
⋮----
{/* Page title */}
⋮----
{/* Main content grid: Package on left, Calendly on right */}
⋮----
{/* Left column - Package Summary (wider on desktop) */}
⋮----
{/* Package summary section */}
⋮----
{/* Selected package */}
⋮----
{/* Two column layout for extras and total price */}
⋮----
{/* Selected extras (if any) */}
⋮----
{/* Total price */}
⋮----
{/* About your match section */}
⋮----
{/* Right column - Calendly (narrower on desktop) */}
⋮----
{/* Calendly header */}
⋮----
{/* Calendly widget */}
⋮----
{/* Loading indicator */}</file><file path="Qualification_components/tia-components-index.ts">// Export all the Tia-prefixed components for easy imports
// Enhanced components for qualification process</file><file path="Qualification_components/tia-contact-stage.tsx">import React from &apos;react&apos;;
import { CheckCircle, ArrowLeft, ArrowRight } from &apos;lucide-react&apos;;
⋮----
interface TiaContactStageProps {
  title: string;
  formTitle: string;
  supportingText: string;
  answers: {
    name: string;
    email: string;
    company: string;
    position: string;
  };
  errors: {
    name: string;
    email: string;
    company: string;
  };
  mailingList: boolean;
  onMailingListChange: (checked: boolean) =&gt; void;
  onChange: (field: string, value: string) =&gt; void;
  onBack?: () =&gt; void; // Optional back handler
  onSubmit?: () =&gt; void; // Optional submit handler to replace the footer
}
⋮----
onBack?: () =&gt; void; // Optional back handler
onSubmit?: () =&gt; void; // Optional submit handler to replace the footer
⋮----
{/* Title header - empty but keeping the space for layout consistency */}
⋮----
{/* Header without box */}
⋮----
{/* Form fields in consistent grid */}
⋮----
{/* Mailing list checkbox */}
⋮----
{/* Security text */}
⋮----
{/* Submit and back buttons */}
⋮----
{/* Support text with tracking */}</file><file path="Qualification_components/tia-content-vision-stage.tsx">import React from &apos;react&apos;;
import { CheckCircle, ArrowLeft } from &apos;lucide-react&apos;;
⋮----
interface QuestionOption {
  id: string;
  label: string;
  description: string;
  value: string;
}
⋮----
interface TiaContentVisionStageProps {
  options: QuestionOption[];
  selectedValue: string;
  onSelect: (value: string) =&gt; void;
  isAnimating: boolean;
  selectedChoice: string | null;
  onBack?: () =&gt; void; // Optional back handler
}
⋮----
onBack?: () =&gt; void; // Optional back handler
⋮----
{/* Header without box - more compact */}
⋮----
{/* Options without containing box - more compact */}
⋮----
{/* Back button at the bottom left */}</file><file path="Qualification_components/tia-future-sections-plan.md"># Plan for Consistent Quiz Section Structure

This document outlines how to ensure all future quiz sections follow the same shape, structure, and design patterns established in the intro section, while maintaining their unique content and functionality.

## Common Design Elements

### 1. Header Styling
- Use smaller, simpler header title in the modal container
- Consistent padding and spacing around titles
- Font sizes: text-base for section headings, larger sizes for key messaging

### 2. Content Organization
- Clean visual hierarchy with clear sectioning
- Limited use of borders and decorative elements
- Focus on readability and clarity over visual complexity
- Consistent spacing between sections (space-y-4)

### 3. Interactive Elements
- Hover effects on interactive components (increased opacity, subtle border color changes)
- Cursor-pointer indicators for interactive areas
- Smooth transitions (duration-300) for all hover states

## Section-by-Section Implementation Plan

### Question Stages (Team Size, Learning Style, Timeline, Content Vision)

Current structure:
```
&lt;div className=&quot;bg-theme-gradient/5 rounded-lg p-5&quot;&gt;
  &lt;div className=&quot;flex items-center&quot;&gt;
    &lt;h4&gt;{title}&lt;/h4&gt;
    &lt;div className=&quot;icon&quot;&gt;{icon}&lt;/div&gt;
  &lt;/div&gt;
  
  &lt;p className=&quot;description&quot;&gt;{description}&lt;/p&gt;
  
  &lt;div className=&quot;options-grid&quot;&gt;
    {options.map(option =&gt; (
      &lt;Option 
        isSelected={...}
        onClick={...}
      /&gt;
    ))}
  &lt;/div&gt;
&lt;/div&gt;
```

Revised structure:
```
&lt;div className=&quot;p-5 md:p-6&quot;&gt;
  &lt;div className=&quot;flex flex-col space-y-4&quot;&gt;
    {/* Title header - simple, left-aligned */}
    &lt;div className=&quot;mb-2&quot;&gt;
      &lt;h4 className=&quot;text-theme-primary text-base font-medium&quot;&gt;{title}&lt;/h4&gt;
    &lt;/div&gt;
    
    {/* Main content area with hover effect */}
    &lt;div className=&quot;bg-theme-gradient/5 hover:bg-theme-gradient/10 hover:border-theme-primary/20 
                    transition-all duration-300 rounded-lg p-5 border border-theme-border-light cursor-pointer&quot;&gt;
      &lt;div className=&quot;flex items-center mb-2&quot;&gt;
        &lt;h4 className=&quot;text-base md:text-lg font-medium text-theme-primary&quot;&gt;{subTitle}&lt;/h4&gt;
        &lt;span className=&quot;text-sm text-theme-tertiary ml-2&quot;&gt;{note}&lt;/span&gt;
      &lt;/div&gt;
      
      {/* Options grid with consistent styling */}
      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-4&quot;&gt;
        {options.map(option =&gt; (
          &lt;OptionCard
            key={option.id}
            label={option.label}
            description={option.description}
            isSelected={selectedValue === option.value}
            onClick={() =&gt; onSelect(option.value)}
            isAnimating={isAnimating &amp;&amp; selectedChoice === option.value}
          /&gt;
        ))}
      &lt;/div&gt;
    &lt;/div&gt;
    
    {/* Supporting text - larger, with tracking */}
    &lt;div className=&quot;p-2&quot;&gt;
      &lt;p className=&quot;text-theme-primary text-center text-xl md:text-2xl font-medium tracking-wide&quot;&gt;
        {supportingText}
      &lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
```

### Contact Stage

Current structure:
```
&lt;div className=&quot;p-5 bg-theme-bg-surface rounded-lg&quot;&gt;
  &lt;h3&gt;{title}&lt;/h3&gt;
  
  &lt;div className=&quot;form-grid&quot;&gt;
    &lt;FormField label=&quot;Name&quot; error={errors.name} /&gt;
    &lt;FormField label=&quot;Email&quot; error={errors.email} /&gt;
    &lt;FormField label=&quot;Company&quot; error={errors.company} /&gt;
    &lt;FormField label=&quot;Position&quot; /&gt;
  &lt;/div&gt;
  
  &lt;div className=&quot;buttons&quot;&gt;
    &lt;Button onClick={onBack}&gt;{backText}&lt;/Button&gt;
    &lt;Button onClick={onNext} disabled={!canProceed}&gt;{nextText}&lt;/Button&gt;
  &lt;/div&gt;
&lt;/div&gt;
```

Revised structure:
```
&lt;div className=&quot;p-5 md:p-6&quot;&gt;
  &lt;div className=&quot;flex flex-col space-y-4&quot;&gt;
    {/* Title header - simple, left-aligned */}
    &lt;div className=&quot;mb-2&quot;&gt;
      &lt;h4 className=&quot;text-theme-primary text-base font-medium&quot;&gt;About You&lt;/h4&gt;
    &lt;/div&gt;
    
    {/* Form section with hover effect */}
    &lt;div className=&quot;bg-theme-gradient/5 hover:bg-theme-gradient/10 hover:border-theme-primary/20 
                   transition-all duration-300 rounded-lg p-5 border border-theme-border-light&quot;&gt;
      &lt;div className=&quot;flex items-center mb-4&quot;&gt;
        &lt;h4 className=&quot;text-base md:text-lg font-medium text-theme-primary&quot;&gt;Your Information&lt;/h4&gt;
      &lt;/div&gt;
      
      {/* Form fields in consistent grid */}
      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4 mb-4&quot;&gt;
        &lt;FormField label=&quot;Your Name&quot; error={errors.name} /&gt;
        &lt;FormField label=&quot;Your Email&quot; error={errors.email} /&gt;
        &lt;FormField label=&quot;Company/Brand Name&quot; error={errors.company} /&gt;
        &lt;FormField label=&quot;Your Position&quot; /&gt;
      &lt;/div&gt;
      
      {/* Mailing list checkbox */}
      &lt;div className=&quot;flex items-center mb-2&quot;&gt;
        &lt;input type=&quot;checkbox&quot; className=&quot;mr-2&quot; /&gt;
        &lt;label className=&quot;text-sm text-theme-secondary&quot;&gt;Sign up to our mailing list&lt;/label&gt;
      &lt;/div&gt;
      
      {/* Security text */}
      &lt;p className=&quot;text-xs text-theme-tertiary mb-4&quot;&gt;
        Your information is secure and never shared with third parties
      &lt;/p&gt;
    &lt;/div&gt;
    
    {/* Support text with tracking */}
    &lt;div className=&quot;p-2&quot;&gt;
      &lt;p className=&quot;text-theme-primary text-center text-xl md:text-2xl font-medium tracking-wide&quot;&gt;
        We&apos;re almost there! Just a few details to personalize your recommendation.
      &lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
```

### Recommendation Stage

Current structure:
```
&lt;div className=&quot;p-5&quot;&gt;
  &lt;div className=&quot;bg-theme-bg-surface rounded-lg&quot;&gt;
    &lt;div className=&quot;header&quot;&gt;
      &lt;h2&gt;{title}&lt;/h2&gt;
      &lt;div className=&quot;pricing&quot;&gt;{price}&lt;/div&gt;
    &lt;/div&gt;
    
    &lt;div className=&quot;content&quot;&gt;
      &lt;p&gt;{description}&lt;/p&gt;
      &lt;div className=&quot;features&quot;&gt;{features}&lt;/div&gt;
    &lt;/div&gt;
    
    &lt;div className=&quot;extras&quot;&gt;{optionalExtras}&lt;/div&gt;
    
    &lt;Button onClick={onCTA}&gt;{ctaText}&lt;/Button&gt;
  &lt;/div&gt;
&lt;/div&gt;
```

Revised structure:
```
&lt;div className=&quot;p-5 md:p-6&quot;&gt;
  &lt;div className=&quot;flex flex-col space-y-4&quot;&gt;
    {/* Title header - simple, left-aligned */}
    &lt;div className=&quot;mb-2&quot;&gt;
      &lt;h4 className=&quot;text-theme-primary text-base font-medium&quot;&gt;Your Perfect Match&lt;/h4&gt;
    &lt;/div&gt;
    
    {/* Recommendation card with hover effect */}
    &lt;div className=&quot;bg-theme-gradient/5 hover:bg-theme-gradient/10 hover:border-theme-primary/20 
                   transition-all duration-300 rounded-lg p-5 border border-theme-border-light&quot;&gt;
      &lt;div className=&quot;flex flex-col md:flex-row justify-between mb-4&quot;&gt;
        &lt;div&gt;
          &lt;h3 className=&quot;text-xl font-bold text-theme-primary&quot;&gt;{title}&lt;/h3&gt;
          &lt;p className=&quot;text-theme-secondary&quot;&gt;{tagline}&lt;/p&gt;
        &lt;/div&gt;
        &lt;div className=&quot;text-xl font-bold text-theme-primary&quot;&gt;{price}&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;div className=&quot;mb-6&quot;&gt;
        {description.map((paragraph, i) =&gt; (
          &lt;p key={i} className=&quot;text-theme-secondary mb-2&quot;&gt;{paragraph}&lt;/p&gt;
        ))}
      &lt;/div&gt;
      
      {/* About your match section */}
      &lt;div className=&quot;mb-4&quot;&gt;
        &lt;h4 className=&quot;text-base font-medium text-theme-primary mb-2&quot;&gt;About your match:&lt;/h4&gt;
        &lt;p className=&quot;text-theme-secondary mb-2&quot;&gt;
          Designed just for you to achieve your goals based on your unique responses:
        &lt;/p&gt;
        &lt;ul className=&quot;space-y-2 ml-1&quot;&gt;
          {responseKeys.map(key =&gt; (
            &lt;li className=&quot;flex items-start gap-2&quot;&gt;
              &lt;div className=&quot;mt-1 text-theme-accent-secondary&quot;&gt;•&lt;/div&gt;
              &lt;p className=&quot;text-theme-secondary&quot;&gt;{responses[key]}&lt;/p&gt;
            &lt;/li&gt;
          ))}
        &lt;/ul&gt;
      &lt;/div&gt;
      
      {/* What you get section */}
      &lt;div className=&quot;mb-6&quot;&gt;
        &lt;h4 className=&quot;text-base font-medium text-theme-primary mb-2&quot;&gt;What You Get:&lt;/h4&gt;
        &lt;ul className=&quot;space-y-2 ml-1&quot;&gt;
          {benefits.map((benefit, i) =&gt; (
            &lt;li key={i} className=&quot;flex items-start gap-2&quot;&gt;
              &lt;div className=&quot;mt-1 text-theme-accent-secondary&quot;&gt;•&lt;/div&gt;
              &lt;p className=&quot;text-theme-secondary&quot;&gt;{benefit}&lt;/p&gt;
            &lt;/li&gt;
          ))}
        &lt;/ul&gt;
      &lt;/div&gt;
      
      {/* Optional extras */}
      &lt;div className=&quot;mb-6&quot;&gt;
        &lt;h4 className=&quot;text-base font-medium text-theme-primary mb-2&quot;&gt;Optional Extras:&lt;/h4&gt;
        &lt;div className=&quot;space-y-2&quot;&gt;
          {extras.map((extra, i) =&gt; (
            &lt;div key={i} className=&quot;flex justify-between items-center p-3 border rounded-lg&quot;&gt;
              &lt;span className=&quot;text-theme-secondary&quot;&gt;{extra.name}&lt;/span&gt;
              &lt;span className=&quot;text-theme-primary font-medium&quot;&gt;{extra.price}&lt;/span&gt;
            &lt;/div&gt;
          ))}
        &lt;/div&gt;
      &lt;/div&gt;
      
      {/* Testimonial quote */}
      &lt;div className=&quot;bg-theme-bg-primary/30 p-4 rounded-lg mb-6&quot;&gt;
        &lt;p className=&quot;text-theme-tertiary italic&quot;&gt;{testimonial}&lt;/p&gt;
      &lt;/div&gt;
      
      &lt;button
        onClick={onCTA}
        className=&quot;w-full py-3 px-4 bg-theme-primary hover:bg-theme-primary-hover text-white 
                   rounded-lg font-medium transition-colors&quot;
      &gt;
        {ctaText}
      &lt;/button&gt;
    &lt;/div&gt;
    
    {/* Support text with tracking */}
    &lt;div className=&quot;p-2&quot;&gt;
      &lt;p className=&quot;text-theme-primary text-center text-xl md:text-2xl font-medium tracking-wide&quot;&gt;
        The perfect solution tailored to your specific needs
      &lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
```

## Implementation Approach

1. **Create Consistent Component Templates**:
   - Extract common layouts and styling patterns into reusable templates
   - Define consistent spacing, sizing, and interaction patterns
   - Ensure all stages follow the same container structure

2. **Update Component Props**:
   - Standardize props across all section components
   - Add support for the new structure and styling patterns
   - Ensure backward compatibility during transition

3. **Phase Implementation**:
   - Start with one section at a time (e.g., team size question first)
   - Test thoroughly after each section implementation
   - Validate responsive behavior on all device sizes

4. **Visual Verification**:
   - Create side-by-side comparisons of old vs new structure
   - Ensure all sections maintain consistent visual language
   - Verify that the user flow feels cohesive and seamless

## Expected Benefits

- **Improved Visual Consistency**: All sections will follow the same structure, creating a more cohesive experience
- **Enhanced Readability**: Cleaner layouts with better typography will improve comprehension
- **Better Engagement**: Interactive hover states and clearer calls-to-action will improve user engagement
- **Easier Maintenance**: Standardized structure makes future updates simpler and more predictable
- **Faster Development**: Reusable patterns can be applied to new sections more quickly</file><file path="Qualification_components/tia-intro-stage.tsx">import React from &apos;react&apos;;
import { Compass, ChevronRight } from &apos;lucide-react&apos;;
import { Button } from &quot;../components/ui/button&quot;;
⋮----
interface TiaIntroStageProps {
  onNext: () =&gt; void;
  onClose: () =&gt; void;
  headline: string;
  subheading: string;
  processLabel: string;
  processNote: string;
  processSteps: string[];
  customFeature: string;
  disclaimerText: string;
  primaryButtonText: string;
  secondaryButtonText: string;
}
⋮----
{/* Title header */}
⋮----
{/* Process steps - improved size and balance with hover effect */}
⋮----
{/* Tailoring message below process section */}</file><file path="Qualification_components/tia-learning-style-stage.tsx">import React from &apos;react&apos;;
import { CheckCircle, ArrowLeft } from &apos;lucide-react&apos;;
⋮----
interface QuestionOption {
  id: string;
  label: string;
  description: string;
  value: string;
}
⋮----
interface TiaLearningStyleStageProps {
  options: QuestionOption[];
  selectedValue: string;
  onSelect: (value: string) =&gt; void;
  isAnimating: boolean;
  selectedChoice: string | null;
  onBack?: () =&gt; void; // Optional back handler
}
⋮----
onBack?: () =&gt; void; // Optional back handler
⋮----
{/* Header without box - more compact */}
⋮----
{/* Options without containing box - more compact */}
⋮----
{/* Back button at the bottom left */}</file><file path="Qualification_components/tia-loading-animation.tsx">import React, { useState, useEffect, useRef } from &apos;react&apos;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
⋮----
interface TiaLoadingAnimationProps {
  message: string;
  duration: number;
  onComplete: () =&gt; void;
}
⋮----
// State for animation values
⋮----
// Refs for animation handling
⋮----
// Run on component mount - with precise timing control
⋮----
// Animation duration constants
const PROGRESS_DURATION_MS = 5000; // 5 seconds for progress animation
const COMPLETION_MS = 6000; // Complete at exactly 6 seconds
⋮----
// Record start time with high precision
⋮----
// Gradually transition to results calculated at 80% of the animation
⋮----
}, PROGRESS_DURATION_MS * 0.8); // Show &quot;Results calculated&quot; at 80% of the progress
⋮----
// Set up precise completion timer with fade effect
⋮----
// Start fade out effect 200ms before completion
⋮----
// Cancel animation frame if still running
⋮----
// Complete after fade effect
⋮----
}, 200); // Short fade out
}, COMPLETION_MS - 200); // Adjusted to account for fade duration
⋮----
// Abstract animation updates
const updateAnimation = () =&gt;
⋮----
const animationDuration = 5000; // 5 seconds
⋮----
// Update rotation continuously
setRotation(progress * 360 * 2); // 2 full rotations
⋮----
// Pulse the scale with a sine wave
⋮----
// Pulse the opacity with a sine wave
⋮----
// Update progress percentage
⋮----
// Continue animation until completion
⋮----
// Start the animation
⋮----
// Generate floating particles
const createParticles = () =&gt;
⋮----
// Random size (slightly larger)
⋮----
// Random position around the animation
⋮----
// Apply theme-aware styling with CSS variables
⋮----
// Detect dark mode for particle styling
⋮----
// Use theme variables for color with different opacity for dark mode
⋮----
// Animate the particle
⋮----
// Create particles periodically
⋮----
// Clean up all timers and animation frames
⋮----
}, []); // Only run once on mount
⋮----
// Use GSAP for additional animations and handle dark mode detection
⋮----
// Detect dark mode
⋮----
// Apply dark mode specific styling to the container
⋮----
// Subtle background pulse animation
⋮----
// Add shimmer effect for dark mode
⋮----
{/* Loading heading */}
⋮----
{/* Abstract animation container */}
⋮----
{/* Background pulsing effect - different gradients for light/dark mode */}
⋮----
{/* Main animation container */}
⋮----
{/* Main circle - use theme variables for colors with dark mode support */}
⋮----
{/* Dark mode shimmer effect */}
⋮----
{/* Orbiting elements - use theme color variables with dark mode support */}
⋮----
{/* Inner rotating segment */}
⋮----
{/* Progress indicator with dark mode enhancements */}
⋮----
{/* Shimmer effect for progress bar */}
⋮----
{/* Message changes with smooth fade effect */}</file><file path="Qualification_components/tia-modal-container.tsx">import React, { useRef } from &apos;react&apos;;
import { X } from &apos;lucide-react&apos;;
import { Button } from &quot;../components/ui/button&quot;;
import { useGSAP } from &quot;@gsap/react&quot;;
import gsap from &quot;gsap&quot;;
⋮----
interface TiaModalContainerProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  stage: string;
  children: React.ReactNode;
  showProgressBar?: boolean;
  progress?: number;
  stageIcon: React.ReactNode;
  stageTitle: string;
}
⋮----
// This is a modified version of ModalContainer with smaller title styling
// Create a ref to the scrollable content area that can be accessed by other components
⋮----
// Refs for GSAP animations
⋮----
// Handle animation with GSAP
⋮----
// Get computed theme variables for animation
⋮----
// Initial modal animation
⋮----
// Animate overlay
⋮----
// Animate modal
⋮----
// Floating elements animation
⋮----
// Animate progress bar if shown
⋮----
// Handle modal close animation
const handleClose = () =&gt;
⋮----
// Animate overlay
⋮----
// Animate modal
⋮----
{/* Overlay backdrop */}
⋮----
{/* Modal content - responsive sizing */}
⋮----
{/* Visual elements */}
⋮----
{/* Theme-aware patterns */}
⋮----
{/* Modal header - Modified with smaller title and conditional border */}
⋮----
{/* Custom styling for specific stage titles - no truncation */}
⋮----
{/* Progress bar - only show when indicated */}
⋮----
{/* Add decorative elements within the progress bar */}
⋮----
{/* Modal content area */}
⋮----
WebkitOverflowScrolling: &apos;touch&apos;, // Adds momentum scrolling on iOS
scrollbarWidth: &apos;thin&apos;, // Thinner scrollbar on Firefox
scrollbarColor: &apos;rgba(0,0,0,0.2) transparent&apos;, // Custom scrollbar color
scrollBehavior: &apos;smooth&apos; // Enable smooth scrolling within the modal</file><file path="Qualification_components/tia-modal-implementation.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import TiaQualificationModal from &apos;./tia-qualification-modal&apos;;
⋮----
/**
 * Example implementation of the TiaQualificationModal component
 * This shows how to integrate the simplified qualification modal into your landing page
 */
⋮----
const openModal = () =&gt;
⋮----
// Disable scroll on body when modal is open
⋮----
const closeModal = () =&gt;
⋮----
// Re-enable scroll on body when modal is closed
⋮----
// Enable test mode with keyboard shortcut (Ctrl+Shift+T)
⋮----
const handleKeyDown = (event: KeyboardEvent) =&gt;
⋮----
// Listen for ESC key to close modal
⋮----
const handleEscKey = (event: KeyboardEvent) =&gt;
⋮----
{/* Example usage in your landing page */}
⋮----
{/* Hero section with CTA button */}
⋮----
{/* Footer section */}
⋮----
{/* Modal component with test mode (press Ctrl+Shift+T to toggle test mode) */}
⋮----
{/* Test mode indicator */}</file><file path="Qualification_components/tia-preview.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import TiaModalImplementation from &apos;./tia-modal-implementation&apos;;
⋮----
/**
 * Simple preview component that renders the TiaModalImplementation
 * This is a standalone page for previewing the new qualification modal
 */
const TiaPreview = () =&gt;</file><file path="Qualification_components/tia-qualification-modal.tsx">import React, { useState, useEffect } from &apos;react&apos;;
import { 
  Users, Compass, Clock, BarChart4, Mail, Award, Briefcase, CheckCircle, ArrowRight, Check
} from &apos;lucide-react&apos;;
⋮----
import {
  ModalFooter,
  StageIcon
} from &apos;./modal-components&apos;;
import TiaIntroStage from &apos;./tia-intro-stage&apos;;
import TiaQuestionStage from &apos;./tia-question-stage&apos;;
import TiaTeamSizeStage from &apos;./tia-team-size-stage&apos;;
import TiaLearningStyleStage from &apos;./tia-learning-style-stage&apos;;
import TiaTimelineStage from &apos;./tia-timeline-stage&apos;;
import TiaContentVisionStage from &apos;./tia-content-vision-stage&apos;;
import TiaContactStage from &apos;./tia-contact-stage&apos;;
import TiaLoadingAnimation from &apos;./tia-loading-animation&apos;;
import TiaRecommendationStage from &apos;./tia-recommendation-stage&apos;;
import TiaModalContainer from &apos;./tia-modal-container&apos;;
⋮----
// This is a new structure for the recommendations based on the improvement plan
interface Recommendation {
  type: &apos;foundation&apos; | &apos;comprehensive&apos; | &apos;executive&apos;;
  title: string;
  tagline: string;
  pricing: string;
  description: string[];
  benefits: string[];
  optionalExtras: {
    name: string;
    price: string;
  }[];
  testimonial: string;
  ctaText: string;
  ctaAction: &apos;direct_purchase&apos; | &apos;book_session&apos;;
}
⋮----
interface SelectedExtras {
  [key: string]: boolean;
}
⋮----
interface VSQualificationModalProps {
  isOpen: boolean;
  onClose: () =&gt; void;
  /** Optional testing mode flag that shows debug info, defaults to false */
  testMode?: boolean; 
}
⋮----
/** Optional testing mode flag that shows debug info, defaults to false */
⋮----
/**
 * VSQualificationModal - A simplified, theme-aware qualification journey component
 * 
 * This component implements a streamlined qualification process that:
 * 1. Collects key information through strategic questions
 * 2. Maps responses to the appropriate implementation approach
 * 3. Provides a personalized recommendation with dynamic response inclusion
 * 4. Offers clear next steps via direct purchase or Calendly booking
 */
⋮----
// Modal state management
⋮----
// Define the sequence of stages - simplified flow with loading animation
⋮----
// These were used for animation during auto-advance, now just for visual feedback
// We keep them to maintain the hover state on selected choices
⋮----
// Tracking modal engagement for analytics and scoring
⋮----
// Timer for tracking time spent in qualification process
⋮----
// Track analytics events
const trackEvent = (eventName: string, properties =
⋮----
// In production, this would send to your analytics platform
// Example: window.analytics.track(eventName, properties);
⋮----
// For development, log to console
⋮----
// Handle user answers with validation only (removed auto-advance)
const handleAnswerChange = (key: string, value: string | boolean) =&gt;
⋮----
// For mailingList specifically handle boolean
⋮----
// Update actual answer
⋮----
// Clear error for this field if it exists
⋮----
// Track interaction for engagement metrics
⋮----
// Track answer changed event
⋮----
// Validate form fields
const validateFields = (): boolean =&gt;
⋮----
// Validate based on current stage
⋮----
// Name validation
⋮----
// Email validation
⋮----
// Company validation
⋮----
// Save progress and implement abandoned journey recovery (same as original)
⋮----
// Keep data for 30 minutes in case user returns
⋮----
}, 1800000); // 30 minutes
⋮----
// Save progress after each stage change for abandoned journey recovery
⋮----
// Handle saved progress (same as original)
⋮----
// Check for abandoned journey
⋮----
// If journey was abandoned recently (within 24 hours)
// and user is beyond intro stage, we might restore progress
⋮----
// For now, just always continue - no need to interrupt
⋮----
// Clear old progress
⋮----
// Calendly script loading (same as original)
⋮----
// Load Calendly script when needed
⋮----
// Clean up script when component unmounts
⋮----
// Get readable format of user&apos;s response for insertion into recommendation
const getReadableResponse = (key: string, value: string): string =&gt;
⋮----
// Calculate recommendation based on answers and engagement - updated logic
const processAnswers = () =&gt;
⋮----
// Check if there&apos;s an upgrade request in the session storage
⋮----
// Check if we have a forced score for reverting to original recommendation
⋮----
// Parse team size to number
⋮----
// Initialize score
⋮----
// First priority: if we have a forced score for reverting, use that
⋮----
// Clear the forced score after using it
⋮----
// IMPORTANT: We intentionally don&apos;t modify the history here
// The history is already updated in handleCTAAction when processing revert
⋮----
// Second priority: if upgrading to a specific tier
⋮----
score = 10; // Ensure we get Executive recommendation
⋮----
score = 7;  // Ensure we get Comprehensive recommendation
⋮----
// Normal scoring process
// 1. Team size factor (1-3 points)
⋮----
// 2. Implementation support preference (1-3 points)
⋮----
// 3. Timeline factor (0-2 points)
⋮----
// &apos;exploratory&apos; adds 0 points
⋮----
// 4. Content volume (0-2 points)
⋮----
// &apos;low&apos; adds 0 points
⋮----
// 5. Engagement bonus (0-1 point)
⋮----
// Generate dynamic user responses for personalization
⋮----
// Determine recommendation based on score (1-11 points possible)
// Updated to match the three distinct recommendation tiers from the plan
⋮----
// Executive Partnership
⋮----
ctaText: &apos;&apos;, // Removed &quot;Book your executive strategy session&quot; button
⋮----
// Comprehensive Implementation
⋮----
ctaText: &apos;&apos;, // Removed &quot;Book your first strategy session&quot; button
⋮----
// Foundation Implementation
⋮----
// Handle upgrade request
⋮----
// Get current recommendation type (before upgrade)
⋮----
// Get recommendation history or initialize it
⋮----
// Add current recommendation to history if it&apos;s not already there
⋮----
upgradeRequest === &apos;comprehensive&apos; ? 4 : // Foundation -&gt; Comprehensive would have been score 4
upgradeRequest === &apos;executive&apos; &amp;&amp; currentType === &apos;foundation&apos; ? 4 : // Foundation -&gt; Executive
upgradeRequest === &apos;executive&apos; &amp;&amp; currentType === &apos;comprehensive&apos; ? 7 : // Comprehensive -&gt; Executive
7 // Default fallback
⋮----
// Only add to history if it&apos;s not the last entry or history is empty
⋮----
// Save updated history
⋮----
// Also add the new (upgraded) recommendation type to the history
// so it&apos;s properly tracked for future downgrades
⋮----
// Save updated history with both current and upgraded recommendation
⋮----
// Clear the upgrade request
⋮----
// Also track the upgrade event
⋮----
// This is the first recommendation or a new one (not from upgrade flow)
// Track the normal recommendation event
⋮----
// Initialize or reset recommendation history with just this recommendation
⋮----
// Clear single-value previous recommendation data since we&apos;re using history now
⋮----
// Set recommendation state
⋮----
// Process CRM integration
⋮----
// Process CRM integration for lead data
const processCrmIntegration = async (
    recommendation: Recommendation, 
    score: number,
    dynamicResponses: {
      teamSize: string;
      implementationSupport: string;
      timeline: string;
      contentVolume: string;
    }
) =&gt;
⋮----
// Build comprehensive lead data for CRM integration
⋮----
// Store in session storage for CRM integration
⋮----
// Track the data storage event
⋮----
// The actual API integration would be implemented here
// For now, this is just a placeholder
⋮----
// Actual API call would go here
⋮----
// Toggle selection of optional extras
const toggleExtraSelection = (extraName: string) =&gt;
⋮----
// Utility method to get the current recommendation history
const getRecommendationHistory = ():
⋮----
// Handle CTA actions including upgrades, downgrades and direct purchase
const handleCTAAction = () =&gt;
⋮----
// Check if we need to revert to a previous recommendation
⋮----
// Get recommendation history
⋮----
// If we have history and are not at the first item
⋮----
// Get the current recommendation type
⋮----
// Find the current index in history
⋮----
// Get the previous recommendation
⋮----
// Set score to the previous value to get the previous recommendation
⋮----
// Store the current recommendation type for analytics
⋮----
// Before processing, remove the current entry from history
// This ensures a clean history state when going back
⋮----
// Track the downgrade event
⋮----
// Clear the revert flag
⋮----
// Process answers again to get the previous recommendation
⋮----
// Fallback to original method if history approach fails
⋮----
// Set score to the original value to get the original recommendation
⋮----
// Track the downgrade event
⋮----
// Clear the revert flag
⋮----
// Process answers again to get the original recommendation
⋮----
// If we get here, we couldn&apos;t process the revert request
// Clean up the flag to avoid repeated attempts
⋮----
// Check if we need to re-process for an upgrade request
⋮----
// If there&apos;s an upgrade request, reprocess the recommendation
⋮----
// Direct purchase flow
⋮----
// In production this would redirect to checkout
⋮----
// Booking flow through Calendly
⋮----
// Calendly is loaded and handled through the UI directly
⋮----
// Proceed to next stage
const goToNextStage = () =&gt;
⋮----
// For contact form, validate fields before proceeding
⋮----
// If validation fails, track the event and return
⋮----
// Track the stage completion event
⋮----
// Proceed to next stage based on current stage
⋮----
setStage(&apos;loading&apos;); // Show loading animation first
⋮----
// This will be handled by the loading animation&apos;s onComplete
⋮----
// Use the stage sequence for the default case
⋮----
// Go back to previous stage
const goToPreviousStage = () =&gt;
⋮----
// Track the navigation event
⋮----
// Use the stage sequence
⋮----
// Function to get the stage title
const getStageTitle = () =&gt;
⋮----
case &apos;recommendation&apos;: return &apos;Your Match&apos;; // Recommendation pages should all be &quot;Your Match&quot;
⋮----
// Validate if current stage can proceed
const canProceed = () =&gt;
⋮----
return false; // Loading stage has no manual proceed button
⋮----
// Determine current progress percentage
const getProgress = () =&gt;
⋮----
// Only count the active question stages for progress calculation
⋮----
// For intro stage, show 0 progress
⋮----
// For recommendation stage, show 100% progress
⋮----
// For loading stage, show 100% progress as we&apos;re going to recommendation
⋮----
// Calculate how far along we are between first question and recommendation
⋮----
// If before questions, show 0
⋮----
// Calculate progress percentage through the question stages
⋮----
// If modal is not open, don&apos;t render anything
⋮----
// Define question stage options - updated with new copy
⋮----
// Removed custom recommendation component as we now use TiaRecommendationStage
⋮----
{/* Main Modal Component */}
⋮----
{/* Intro Stage - Updated with new copy */}
⋮----
{/* Team Size Stage - Using specialized component that matches intro format */}
⋮----
// Auto advance after a short delay for visual feedback
⋮----
{/* Implementation Support Stage - Using specialized component that matches team size format */}
⋮----
// Auto advance after a short delay for visual feedback
⋮----
{/* Timeline Stage - Using specialized component that matches team size format */}
⋮----
// Auto advance after a short delay for visual feedback
⋮----
{/* Content Volume Stage - Using specialized component that matches team size format */}
⋮----
// Auto advance after a short delay for visual feedback
⋮----
{/* Contact Stage - Updated with Tia component */}
⋮----
onSubmit=
⋮----
{/* Loading Animation Stage */}
⋮----
duration={6} // Reduced to 6 seconds for the new animation
⋮----
// Calculate recommendation synchronously
⋮----
// Immediately transition to recommendation stage
⋮----
{/* Recommendation Stage */}
⋮----
{/* Modal Footer - Only shown on intro stage */}</file><file path="Qualification_components/tia-qualification-summary.md"># Qualification Modal Improvements - Implementation Summary

This document summarizes the implementation of the improved qualification modal system, highlighting the design patterns, component structure, and consistent user experience across all stages.

## Components Created

1. **TiaModalContainer**: Wrapper component that handles the modal&apos;s structure, header, and progress bar
   - Smaller title for the intro and team size stages
   - Consistent styling across all stages
   - Progress indicator for question stages

2. **TiaIntroStage**: The first stage of the qualification journey
   - Process steps with hover effect
   - Larger tailoring text with increased tracking
   - Clean visual structure

3. **TiaTeamSizeStage**: Specialized stage that matches intro page formatting
   - Main title changed to &quot;How Big is your Content Team?&quot; instead of &quot;About Your Team&quot; 
   - Removed the border line underneath the title for a cleaner look
   - Subtitle simplified to just &quot;Select your team size&quot; with no additional explanatory text
   - Removed the containing box around the team size section
   - Both header &quot;Select your team size&quot; and option titles now use same h5 elements without size classes for perfect consistency
   - Descriptions remain small (text-xs) for visual hierarchy
   - Each option button maintains its own border and hover state
   - Option buttons have consistent padding and height with appropriate spacing between them

4. **TiaLearningStyleStage**: Exact match to the team size stage styling
   - Title &quot;How do you prefer to learn new systems?&quot; in same styling as team size
   - Removed border line under the title
   - Same button styling and layout as team size stage
   - Consistent visual hierarchy with team size and intro stages

5. **TiaTimelineStage**: Exact match to the team size stage styling
   - Title &quot;When do you want to see results?&quot; in same styling as team size
   - Removed border line under the title
   - Same button styling and layout as team size stage
   - Consistent visual hierarchy with other styled stages

6. **TiaContentVisionStage**: Exact match to the team size stage styling
   - Title &quot;What&apos;s your content growth goal?&quot; in same styling as team size
   - Removed border line under the title
   - Same button styling and layout as team size stage
   - Consistent visual hierarchy with other styled stages

7. **TiaQuestionStage**: Base component for any future question stages
   - Title header with left-aligned text
   - Content area with hover effect
   - Options with consistent styling
   - Supporting text with larger size and tracking

8. **TiaContactStage**: Exact match to the team size stage styling
   - Title &quot;Tell us a bit about yourself&quot; in same styling as other stages
   - Removed border line under the title
   - Removed the containing box around the form section
   - Changed subtitle element to h5 to match other stages
   - Form layout with appropriate field styling and validation
   - Mailing list option and security message
   - Removed duplicate buttons (using modal footer instead)
   - Same supporting text style as other stages

9. **TiaLoadingAnimation**: Engaging transition between contact and recommendation
   - 6-second loading stage with precise timing control
   - Circle fills in a continuous, fluid motion over exactly 5 seconds
   - Uses requestAnimationFrame for ultra-smooth 60fps+ animation
   - Linear easing function for consistent animation speed
   - &quot;Finding your unique implementation&quot; message
   - After exactly 5 seconds, message changes to &quot;Results calculated&quot; with fade effect
   - At 6 seconds, transitions to recommendation stage with a seamless fade out
   - Clear blue progress indicator with light gray track for high visibility throughout the animation
   - High-precision timing using performance.now() for accurate animations
   - No center dot or glow effects for a cleaner appearance
   - Component fades out smoothly before transitioning to recommendation
   - No footer buttons during animation
   - Smaller title size matching other stages
   - Removed border line under the title

10. **TiaRecommendationStage**: Final stage with plan details
   - Simplified header without title text
   - Maintains consistent layout with other stages
   - Dynamic response inclusion
   - Benefits and extras sections
   - Integrated Calendly booking widget
   - Automatic scheduling interface appears after clicking CTA
   - Two CTA modes: direct purchase or booking session
   - Contextual button icon (calendar for booking sessions)
   - Responsive design adapts to show the booking calendar
   - Call-to-action button

6. **TiaModalImplementation**: Example landing page showing integration
   - Shows how to embed the modal in a landing page
   - Handles open/close logic
   - Keyboard controls (ESC to close)

## Design Patterns Implemented

### 1. Consistent Structure

All stages follow the same structure:
- Header section with title
- Content section with hover effect
- Supporting text below with increased tracking

### 2. Interactive Elements

- Hover states for content sections (increased opacity, subtle border changes)
- Smooth transitions (duration-300)
- Cursor-pointer indicators for interactive elements
- Clear selection states for options

### 3. Typography

- Differentiated title sizing:
  - Intro and team size stage titles: text-sm font-medium (smaller size)
  - Other stage titles: text-base sm:text-lg font-medium (larger for remaining stages)
- Top section text removed from team size stage for cleaner look
- Content headers: text-base md:text-lg font-medium
- Supporting text: text-xl md:text-2xl tracking-wide
- Option text: Consistently sized and spaced

### 4. Spacing

- Consistent padding: p-5 md:p-6
- Consistent spacing between elements: space-y-4
- Consistent margins: mb-2, mb-3, mb-4

## UI Improvements

1. **Simplified Visual Design**
   - Removal of excessive visual elements
   - Focus on content and interaction
   - Consistent color usage through theme variables

2. **Responsive Behavior**
   - Improved mobile layout
   - Consistent grid systems (1-column on mobile, multi-column on desktop)
   - Proper text sizing at all breakpoints

3. **Enhanced Usability**
   - Clear interactive indicators
   - Better form validation feedback
   - Improved button layouts
   - Manual progression with Continue button (no auto-advance)

4. **Theming and Accessibility**
   - Theme-aware styling throughout
   - Proper contrast ratios
   - Careful semantic HTML structure

## Access and Testing

The new qualification modal can be accessed at:
- `/tia-qualification` route in the application

## Future Considerations

1. **Animation Refinement**
   - Consider adding subtle entrance/exit animations for stages
   - Enhance the selection animation for better feedback

2. **Analytics Integration**
   - The modal is prepared with event tracking hooks
   - Further integration with actual analytics system needed

3. **A/B Testing**
   - The new design is ready for comparison testing with the original
   - Tracking conversion rates between the two designs would be valuable</file><file path="Qualification_components/tia-question-stage.tsx">import React from &apos;react&apos;;
import { CheckCircle } from &apos;lucide-react&apos;;
⋮----
interface QuestionOption {
  id: string;
  label: string;
  description: string;
  value: string;
}
⋮----
interface TiaQuestionStageProps {
  title: string;
  subTitle: string;
  note?: string;
  supportingText: string;
  options: QuestionOption[];
  selectedValue: string;
  onSelect: (value: string) =&gt; void;
  isAnimating: boolean;
  selectedChoice: string | null;
}
⋮----
{/* Title header - longer, left-aligned, with no truncation */}
⋮----
{/* Main content area with hover effect */}
⋮----
{/* Options with consistent styling */}
⋮----
{/* Supporting text - 25px size, with tracking and no truncation */}</file><file path="Qualification_components/tia-recommendation-stage.tsx">import React, { useState, useEffect, useRef } from &apos;react&apos;;
import { 
  CheckCircle, Check, Calendar, ArrowLeft, 
  Users, Compass, Clock, BarChart4, 
  CreditCard, Mail
} from &apos;lucide-react&apos;;
import { modalContentRef } from &apos;./tia-modal-container&apos;;
⋮----
// Add Calendly type definition
⋮----
interface Window {
    Calendly?: {
      initInlineWidget: (options: {
        url: string;
        parentElement: HTMLElement;
        prefill?: any;
        utm?: any;
      }) =&gt; void;
    };
  }
⋮----
interface TiaRecommendationStageProps {
  title: string;
  recommendationTitle: string;
  tagline: string;
  price: string;
  description: string[];
  supportingText: string;
  responses: Record&lt;string, string&gt;;
  responseKeys: string[];
  benefits: string[];
  extras: {
    name: string;
    price: string;
  }[];
  testimonial: string;
  ctaText: string;
  onCTA: () =&gt; void;
  ctaAction?: &apos;direct_purchase&apos; | &apos;book_session&apos;; // Type of CTA action
}
⋮----
ctaAction?: &apos;direct_purchase&apos; | &apos;book_session&apos;; // Type of CTA action
⋮----
ctaAction = &apos;direct_purchase&apos; // Default to direct purchase if not specified
⋮----
// Add state for the pages (purchase and calendly booking)
⋮----
// Utility function to calculate total price including extras
const calculateTotalPrice = (): string =&gt;
⋮----
// Extract numeric value from base price
⋮----
// Add prices of selected extras
⋮----
// Format total price with commas for thousands
const totalPrice = Math.round((basePrice + totalExtrasPrice) * 100) / 100; // Round to 2 decimal places
⋮----
// If base price contains &quot;from&quot;, keep that wording
⋮----
// Check if this is an upgraded recommendation with history
⋮----
// We should show back button if we have more than one entry in history
⋮----
// Add additional debug for back button visibility
⋮----
const toggleExtra = (name: string, price: string) =&gt;
⋮----
// Check if this is an upgrade option
⋮----
// Scroll the modal content to the top before changing recommendations
⋮----
// Signal to parent component that we want to upgrade to Executive
⋮----
// Call parent&apos;s onCTA to trigger recommendation recalculation
// Slight delay to ensure smooth scrolling starts first
⋮----
}, 300); // Increased delay to allow for modal content scrolling
⋮----
// Scroll the modal content to the top before changing recommendations
⋮----
// Signal to parent component that we want to upgrade to Comprehensive
⋮----
// Call parent&apos;s onCTA to trigger recommendation recalculation
⋮----
}, 300); // Increased delay to allow for modal content scrolling
⋮----
// Normal extra toggle
⋮----
const handleBackToPreviousRecommendation = () =&gt;
⋮----
// Log the state before making changes
⋮----
// Make sure we have history and it contains at least two entries
⋮----
// Scroll to top of the page before changing recommendations
⋮----
// Set flag to revert to the original recommendation
⋮----
// Clear any pending upgrade requests to avoid conflicts
⋮----
// Trigger the parent&apos;s onCTA to reprocess after a slight delay
⋮----
// Load Calendly script and initialize widget
⋮----
// Early return if we shouldn&apos;t show Calendly
⋮----
// Load the Calendly script if it doesn&apos;t exist
⋮----
// Initialize Calendly widget once the script is loaded
const initCalendly = () =&gt;
⋮----
// Determine which meeting type to use based on recommendation tier
⋮----
// For different recommendation tiers, we can use different meeting types/URLs
⋮----
// Initialize Calendly inline widget with appropriate meeting type
⋮----
// If script is already loaded, initialize immediately
⋮----
// Otherwise, wait for script to load
⋮----
// Cleanup function
⋮----
// No need to remove script - it can be reused
⋮----
// Now render the appropriate view
⋮----
// Render the booking page for Comprehensive and Executive tiers
⋮----
{/* Header with back button only - no title */}
⋮----
{/* Booking page layout */}
⋮----
{/* Left column - Package details */}
⋮----
{/* Package details with separate price and title */}
⋮----
{/* Selected extras with remove option - no border */}
⋮----
{/* Price information - always show total */}
⋮----
{/* No-payment notice at the bottom in bold */}
⋮----
{/* Help option - without box */}
⋮----
{/* Right column - Calendly */}
⋮----
{/* Calendly widget */}
⋮----
// Render the purchase page for Foundation Implementation
⋮----
{/* Header with back button only - no title */}
⋮----
{/* Cleaner layout with description/what&apos;s included on left, order summary on right */}
⋮----
{/* Left column - Description and What&apos;s Included */}
⋮----
{/* Brief description of Foundation Implementation */}
⋮----
{/* What&apos;s included section */}
⋮----
{/* Help and support section */}
⋮----
{/* Right column - Order Summary */}
⋮----
{/* Package details - no border */}
⋮----
{/* Selected extras with remove option - no border */}
⋮----
{/* Running total */}
⋮----
{/* Payment button */}
⋮----
// In production, this would redirect to Stripe checkout
⋮----
{/* Header - Only back button if we have history */}
⋮----
{/* Hero section - full width recommendation panel */}
⋮----
{/* CTA Button - Only for non-Foundation tiers with non-empty ctaText */}
⋮----
onCTA(); // Call the parent handler
⋮----
{/* Main content - grid layout based on tier */}
{/* Use the same layout for all tier types - no Calendly */}
⋮----
{/* Side-by-side layout for About and What you get */}
⋮----
{/* About your match section - ALWAYS ON THE LEFT */}
⋮----
// Select appropriate icon based on the response key
⋮----
{/* What you get section - ALWAYS ON THE RIGHT */}
⋮----
{/* Testimonial quote */}
⋮----
{/* Optional extras at the bottom - full width, filter out Comprehensive upgrade for Foundation */}
⋮----
{/* Tier-specific CTA Button */}
⋮----
// Scroll the modal content to the top before showing purchase page
⋮----
// Scroll the modal content to the top before showing Calendly
⋮----
{/* Support text with tracking - always at the bottom */}</file><file path="Qualification_components/tia-team-size-stage.tsx">import React from &apos;react&apos;;
import { CheckCircle, Users, ArrowLeft } from &apos;lucide-react&apos;;
⋮----
interface QuestionOption {
  id: string;
  label: string;
  description: string;
  value: string;
}
⋮----
interface TiaTeamSizeStageProps {
  options: QuestionOption[];
  selectedValue: string;
  onSelect: (value: string) =&gt; void;
  isAnimating: boolean;
  selectedChoice: string | null;
  onBack?: () =&gt; void; // Optional back handler
}
⋮----
onBack?: () =&gt; void; // Optional back handler
⋮----
{/* Header without box - more compact */}
⋮----
{/* Options without containing box - more compact */}
⋮----
{/* Back button at the bottom left */}</file><file path="Qualification_components/tia-timeline-stage.tsx">import React from &apos;react&apos;;
import { CheckCircle, ArrowLeft } from &apos;lucide-react&apos;;
⋮----
interface QuestionOption {
  id: string;
  label: string;
  description: string;
  value: string;
}
⋮----
interface TiaTimelineStageProps {
  options: QuestionOption[];
  selectedValue: string;
  onSelect: (value: string) =&gt; void;
  isAnimating: boolean;
  selectedChoice: string | null;
  onBack?: () =&gt; void; // Optional back handler
}
⋮----
onBack?: () =&gt; void; // Optional back handler
⋮----
{/* Header without box - more compact */}
⋮----
{/* Options without containing box - more compact */}
⋮----
{/* Back button at the bottom left */}</file><file path="scripts/output/instagram_links.md"># Instagram Posts Sorted by Views

1. [10,576,457 views](https://www.instagram.com/benaskins.official/reel/C22upF2t3jy/?hl=en)
2. [6,556,737 views](https://www.instagram.com/benaskins.official/reel/DGgWfVcsm2G/?hl=en)
3. [6,089,408 views](https://www.instagram.com/benaskins.official/reel/DEiLXVAtovq/?hl=en)
4. [4,755,040 views](https://www.instagram.com/benaskins.official/reel/C20I_BUo_r2/?hl=en)
5. [4,639,093 views](https://www.instagram.com/benaskins.official/reel/C-x1PzntTN6/?hl=en)
6. [3,406,802 views](https://www.instagram.com/benaskins.official/reel/C8kP-gDtsem/?hl=en)
7. [3,338,967 views](https://www.instagram.com/benaskins.official/reel/C2c-Y59Na2D/?hl=en)
8. [2,669,921 views](https://www.instagram.com/benaskins.official/reel/C9K3HHvN89Z/?hl=en)
9. [2,452,588 views](https://www.instagram.com/benaskins.official/reel/C3YOYbsN-Tl/?hl=en)
10. [2,257,681 views](https://www.instagram.com/benaskins.official/reel/C0PWUiON_xl/?hl=en)
11. [2,256,303 views](https://www.instagram.com/benaskins.official/reel/DBg9s8AtkuJ/?hl=en)
12. [2,173,104 views](https://www.instagram.com/benaskins.official/reel/CstuRzzOrhU/?hl=en)
13. [2,000,859 views](https://www.instagram.com/benaskins.official/reel/C4dtLs3t9vi/?hl=en)
14. [1,979,967 views](https://www.instagram.com/benaskins.official/reel/C3LTUDMNMsk/?hl=en)
15. [1,764,286 views](https://www.instagram.com/benaskins.official/reel/C273eQctCL0/?hl=en)
16. [1,745,842 views](https://www.instagram.com/benaskins.official/reel/DG0-c4DM9KR/?hl=en)
17. [1,672,810 views](https://www.instagram.com/benaskins.official/reel/DAjJb3jtbuY/?hl=en)
18. [1,632,104 views](https://www.instagram.com/benaskins.official/reel/C7UcUNiNDm3/?hl=en)
19. [1,602,515 views](https://www.instagram.com/benaskins.official/reel/C3qN0JfNaQI/?hl=en)
20. [1,511,923 views](https://www.instagram.com/benaskins.official/reel/C3dV5xqtd7I/?hl=en)
21. [1,456,605 views](https://www.instagram.com/benaskins.official/reel/C4JIiqYtYfc/?hl=en)
22. [1,424,019 views](https://www.instagram.com/benaskins.official/reel/C3x6oIvNjC1/?hl=en)
23. [1,418,443 views](https://www.instagram.com/benaskins.official/reel/C48g5kCNL_u/?hl=en)
24. [1,404,072 views](https://www.instagram.com/benaskins.official/reel/C3-1E7otG-P/?hl=en)
25. [1,333,772 views](https://www.instagram.com/benaskins.official/reel/C_D3Wr7qal1/?hl=en)
26. [1,288,170 views](https://www.instagram.com/benaskins.official/reel/DBRfk8MtJeb/?hl=en)
27. [1,260,335 views](https://www.instagram.com/benaskins.official/reel/C3nn3fmtcXl/?hl=en)
28. [1,230,623 views](https://www.instagram.com/benaskins.official/reel/C38OHSoNCmH/?hl=en)
29. [1,217,138 views](https://www.instagram.com/benaskins.official/reel/C3DlLdTt_3M/?hl=en)
30. [1,212,469 views](https://www.instagram.com/benaskins.official/reel/C3f6c7ftwG5/?hl=en)
31. [1,188,676 views](https://www.instagram.com/benaskins.official/reel/C5bZJJGt_4z/?hl=en)
32. [1,188,201 views](https://www.instagram.com/benaskins.official/reel/C6HOUEHNPaW/?hl=en)
33. [1,162,349 views](https://www.instagram.com/benaskins.official/reel/C7R17cdtWMP/?hl=en)
34. [1,133,823 views](https://www.instagram.com/benaskins.official/reel/C33E_FTNzpS/?hl=en)
35. [1,110,577 views](https://www.instagram.com/benaskins.official/reel/C7cJ4f4tAPD/?hl=en)
36. [1,107,273 views](https://www.instagram.com/benaskins.official/reel/C4Q05dmNR1Y/?hl=en)
37. [1,106,577 views](https://www.instagram.com/benaskins.official/reel/C4vw4YFNC-w/?hl=en)
38. [1,054,437 views](https://www.instagram.com/benaskins.official/reel/C5v_QTstrHJ/?hl=en)
39. [971,692 views](https://www.instagram.com/benaskins.official/reel/DHq_UNPM4dO/?hl=en)
40. [932,360 views](https://www.instagram.com/benaskins.official/reel/C2u-hMit4Ti/?hl=en)
41. [886,822 views](https://www.instagram.com/benaskins.official/reel/C7CZSButlGE/?hl=en)
42. [883,816 views](https://www.instagram.com/benaskins.official/reel/C9sWX5gNkFE/?hl=en)
43. [861,260 views](https://www.instagram.com/benaskins.official/reel/C1Pvgi6NCcy/?hl=en)
44. [856,952 views](https://www.instagram.com/benaskins.official/reel/DBEry7eNAUc/?hl=en)
45. [845,095 views](https://www.instagram.com/benaskins.official/reel/C46Bw2Hth4o/?hl=en)
46. [844,080 views](https://www.instagram.com/benaskins.official/reel/DEvDeNUNoxP/?hl=en)
47. [837,772 views](https://www.instagram.com/benaskins.official/reel/C25RYnjNQfH/?hl=en)
48. [832,507 views](https://www.instagram.com/benaskins.official/reel/C6tsivGN01z/?hl=en)
49. [807,572 views](https://www.instagram.com/benaskins.official/reel/C4V_sp4tbQC/?hl=en)
50. [802,104 views](https://www.instagram.com/benaskins.official/reel/DBZPnZJtxLA/?hl=en)
51. [799,648 views](https://www.instagram.com/benaskins.official/reel/C8mznCnNFFw/?hl=en)
52. [788,927 views](https://www.instagram.com/benaskins.official/reel/C9nLV65N-bJ/?hl=en)
53. [782,287 views](https://www.instagram.com/benaskins.official/reel/C9c4QXENtny/?hl=en)
54. [781,171 views](https://www.instagram.com/benaskins.official/reel/C_lVFTSt7P0/?hl=en)
55. [766,383 views](https://www.instagram.com/benaskins.official/reel/DBoyOm5NIyf/?hl=en)
56. [762,019 views](https://www.instagram.com/benaskins.official/reel/DGTcVSfsC9a/?hl=en)
57. [740,789 views](https://www.instagram.com/benaskins.official/reel/C3lBWMOtONh/?hl=en)
58. [735,403 views](https://www.instagram.com/benaskins.official/reel/C8xGocOt2dG/?hl=en)
59. [727,762 views](https://www.instagram.com/benaskins.official/reel/DGoFEo2sqUh/?hl=en)
60. [726,777 views](https://www.instagram.com/benaskins.official/reel/C_TU3GStneZ/?hl=en)
61. [710,461 views](https://www.instagram.com/benaskins.official/reel/C2ksWs3NdX8/?hl=en)
62. [707,791 views](https://www.instagram.com/benaskins.official/reel/C9NaNzmNELe/?hl=en)
63. [706,695 views](https://www.instagram.com/benaskins.official/reel/C2fmzI8tDrB/?hl=en)
64. [704,677 views](https://www.instagram.com/benaskins.official/reel/C64FIwRNPA1/?hl=en)
65. [702,911 views](https://www.instagram.com/benaskins.official/reel/DB4OTFLt2X_/?hl=en)
66. [699,256 views](https://www.instagram.com/benaskins.official/reel/DCcRVtHtl5b/?hl=en)
67. [690,351 views](https://www.instagram.com/benaskins.official/reel/C5JeaR5N4ZR/?hl=en)
68. [676,786 views](https://www.instagram.com/benaskins.official/reel/C6CBJlEtM6U/?hl=en)
69. [675,577 views](https://www.instagram.com/benaskins.official/reel/C4gRxd4tDqd/?hl=en)
70. [673,548 views](https://www.instagram.com/benaskins.official/reel/C_gMk6WNyKk/?hl=en)
71. [672,841 views](https://www.instagram.com/benaskins.official/reel/DDm-zI-N099/?hl=en)
72. [669,632 views](https://www.instagram.com/benaskins.official/reel/C3BCeSCtC6U/?hl=en)
73. [669,102 views](https://www.instagram.com/benaskins.official/reel/C3a1SittZrK/?hl=en)
74. [668,009 views](https://www.instagram.com/benaskins.official/reel/C9Akk8XICyU/?hl=en)
75. [657,550 views](https://www.instagram.com/benaskins.official/reel/C7KHN1yNCIo/?hl=en)
76. [644,274 views](https://www.instagram.com/benaskins.official/reel/C69PkKbtOVS/?hl=en)
77. [639,275 views](https://www.instagram.com/benaskins.official/reel/C7uOVe5N1EI/?hl=en)
78. [636,363 views](https://www.instagram.com/benaskins.official/reel/C82PHiqtNr9/?hl=en)
79. [634,540 views](https://www.instagram.com/benaskins.official/reel/C4LrIdetaon/?hl=en)
80. [625,248 views](https://www.instagram.com/benaskins.official/reel/DBCC24ENUA2/?hl=en)
81. [623,705 views](https://www.instagram.com/benaskins.official/reel/DD5ECJUtufw/?hl=en)
82. [614,371 views](https://www.instagram.com/benaskins.official/reel/C-8IW9eteA6/?hl=en)
83. [589,619 views](https://www.instagram.com/benaskins.official/reel/DAgk0WYtgGO/?hl=en)
84. [580,114 views](https://www.instagram.com/benaskins.official/reel/C4BY_4Nt4Bf/?hl=en)
85. [580,113 views](https://www.instagram.com/benaskins.official/reel/C56UWJnNs_l/?hl=en)
86. [576,141 views](https://www.instagram.com/benaskins.official/reel/C9aTK6RtEQm/?hl=en)
87. [574,684 views](https://www.instagram.com/benaskins.official/reel/C_8igWDtPvW/?hl=en)
88. [567,925 views](https://www.instagram.com/benaskins.official/reel/DAEQHnINaWU/?hl=en)
89. [567,402 views](https://www.instagram.com/benaskins.official/reel/C4ldBaFt5yD/?hl=en)
90. [560,568 views](https://www.instagram.com/benaskins.official/reel/DFTG2WFNInw/?hl=en)
91. [557,354 views](https://www.instagram.com/benaskins.official/reel/C2nP_WXtkZK/?hl=en)
92. [541,853 views](https://www.instagram.com/benaskins.official/reel/DB_74W0N_Hw/?hl=en)
93. [538,223 views](https://www.instagram.com/benaskins.official/reel/DAd-JLntGuw/?hl=en)
94. [518,277 views](https://www.instagram.com/benaskins.official/reel/C5G5b6ftFGg/?hl=en)
95. [517,784 views](https://www.instagram.com/benaskins.official/reel/C8FVgPONU65/?hl=en)
96. [509,080 views](https://www.instagram.com/benaskins.official/reel/C7pDJHwtyFf/?hl=en)
97. [505,234 views](https://www.instagram.com/benaskins.official/reel/C5ykgHXNKhH/?hl=en)
98. [502,323 views](https://www.instagram.com/benaskins.official/reel/DAL-8w7Nlr2/?hl=en)
99. [497,616 views](https://www.instagram.com/benaskins.official/reel/C3N4FmINj8H/?hl=en)
100. [482,294 views](https://www.instagram.com/benaskins.official/reel/C2xdtm0tIK7/?hl=en)
101. [479,787 views](https://www.instagram.com/benaskins.official/reel/C-0bFKht49V/?hl=en)
102. [478,423 views](https://www.instagram.com/benaskins.official/reel/C3GKAMKNyTB/?hl=en)
103. [466,666 views](https://www.instagram.com/benaskins.official/reel/DBO6EfytLPF/?hl=en)
104. [465,618 views](https://www.instagram.com/benaskins.official/reel/C8APYjYtsPJ/?hl=en)
105. [462,540 views](https://www.instagram.com/benaskins.official/reel/C8KeKfuNmAu/?hl=en)
106. [461,156 views](https://www.instagram.com/benaskins.official/reel/C7ev9lItDXC/?hl=en)
107. [459,071 views](https://www.instagram.com/benaskins.official/reel/DCrvF41N32s/?hl=en)
108. [454,414 views](https://www.instagram.com/benaskins.official/reel/C9P-73Ntllu/?hl=en)
109. [451,817 views](https://www.instagram.com/benaskins.official/reel/C5BvSfHt7mF/?hl=en)
110. [446,872 views](https://www.instagram.com/benaskins.official/reel/C2-bu31NS6h/?hl=en)
111. [443,464 views](https://www.instagram.com/benaskins.official/reel/C5eCYOwtwfv/?hl=en)
112. [442,598 views](https://www.instagram.com/benaskins.official/reel/C6eYTBzNEP1/?hl=en)
113. [442,110 views](https://www.instagram.com/benaskins.official/reel/C35qTrft9nU/?hl=en)
114. [439,315 views](https://www.instagram.com/benaskins.official/reel/DAtkGdQtO7_/?hl=en)
115. [439,238 views](https://www.instagram.com/benaskins.official/reel/C6lUfZZNe4m/?hl=en)
116. [439,154 views](https://www.instagram.com/benaskins.official/reel/C-QYljGtjw7/?hl=en)
117. [438,876 views](https://www.instagram.com/benaskins.official/reel/C6MWCkUNza9/?hl=en)
118. [435,172 views](https://www.instagram.com/benaskins.official/reel/C3svu06t8QG/?hl=en)
119. [434,268 views](https://www.instagram.com/benaskins.official/reel/C-LNh-RNM9a/?hl=en)
120. [431,623 views](https://www.instagram.com/benaskins.official/reel/C4yTMwNtLiH/?hl=en)
121. [423,909 views](https://www.instagram.com/benaskins.official/reel/C-VhFMlNYI_/?hl=en)
122. [422,392 views](https://www.instagram.com/benaskins.official/reel/C4GhhEBtnRP/?hl=en)
123. [422,007 views](https://www.instagram.com/benaskins.official/reel/C4YgaX_teQS/?hl=en)
124. [413,040 views](https://www.instagram.com/benaskins.official/reel/C-YGndVNwqr/?hl=en)
125. [412,513 views](https://www.instagram.com/benaskins.official/reel/C6UDz57t9x-/?hl=en)
126. [408,640 views](https://www.instagram.com/benaskins.official/reel/CxyJGncNXc7/?hl=en)
127. [405,661 views](https://www.instagram.com/benaskins.official/reel/C43b3f6ttD2/?hl=en)
128. [405,263 views](https://www.instagram.com/benaskins.official/reel/C5RBvnWNdS2/?hl=en)
129. [401,967 views](https://www.instagram.com/benaskins.official/reel/C6EsjWNNiOB/?hl=en)
130. [401,558 views](https://www.instagram.com/benaskins.official/reel/C5WPnn5tEMo/?hl=en)
131. [397,621 views](https://www.instagram.com/benaskins.official/reel/C3IvHllts-k/?hl=en)
132. [395,937 views](https://www.instagram.com/benaskins.official/reel/C4OOnsDNr1_/?hl=en)
133. [395,592 views](https://www.instagram.com/benaskins.official/reel/C5jHLkgtWfc/?hl=en)
134. [394,050 views](https://www.instagram.com/benaskins.official/reel/C9iAZJCNI65/?hl=en)
135. [384,818 views](https://www.instagram.com/benaskins.official/reel/Ct63NDsMWGz/?hl=en)
136. [381,430 views](https://www.instagram.com/benaskins.official/reel/DFN8u7KNStt/?hl=en)
137. [377,152 views](https://www.instagram.com/benaskins.official/reel/DHgve0WNcy3/?hl=en)
138. [377,011 views](https://www.instagram.com/benaskins.official/reel/C_049rLN9Yr/?hl=en)
139. [372,737 views](https://www.instagram.com/benaskins.official/reel/C-aqckJJ9fo/?hl=en)
140. [365,268 views](https://www.instagram.com/benaskins.official/reel/DCR8_UfN6hD/?hl=en)
141. [363,670 views](https://www.instagram.com/benaskins.official/reel/DCkAAz_NO98/?hl=en)
142. [361,145 views](https://www.instagram.com/benaskins.official/reel/DCMz0MIt6Y5/?hl=en)
143. [357,853 views](https://www.instagram.com/benaskins.official/reel/DA_eYEktVaw/?hl=en)
144. [354,195 views](https://www.instagram.com/benaskins.official/reel/C3TG1OdtxcN/?hl=en)
145. [354,049 views](https://www.instagram.com/benaskins.official/reel/C-icEjRtut1/?hl=en)
146. [352,460 views](https://www.instagram.com/benaskins.official/reel/DAOjE6EN3t9/?hl=en)
147. [347,602 views](https://www.instagram.com/benaskins.official/reel/C5_DzZZtoSw/?hl=en)
148. [347,334 views](https://www.instagram.com/benaskins.official/reel/C8NAOvPtZ4K/?hl=en)
149. [346,029 views](https://www.instagram.com/benaskins.official/reel/DDC5x2ntuM0/?hl=en)
150. [344,987 views](https://www.instagram.com/benaskins.official/reel/C97xlXQtKFM/?hl=en)
151. [344,627 views](https://www.instagram.com/benaskins.official/reel/C4tOlkeNK8C/?hl=en)
152. [344,073 views](https://www.instagram.com/benaskins.official/reel/C2p3KYsNGWR/?hl=en)
153. [343,175 views](https://www.instagram.com/benaskins.official/reel/C-A6MLYtE1t/?hl=en)
154. [341,226 views](https://www.instagram.com/benaskins.official/reel/C-De5tKNYjh/?hl=en)
155. [340,420 views](https://www.instagram.com/benaskins.official/reel/C-5jpwqNoUk/?hl=en)
156. [338,944 views](https://www.instagram.com/benaskins.official/reel/DEshpGmtK7h/?hl=en)
157. [338,327 views](https://www.instagram.com/benaskins.official/reel/C_dn8I1N99J/?hl=en)
158. [336,621 views](https://www.instagram.com/benaskins.official/reel/C403hyxN6yI/?hl=en)
159. [335,160 views](https://www.instagram.com/benaskins.official/reel/C4n_WZ5NUkc/?hl=en)
160. [335,036 views](https://www.instagram.com/benaskins.official/reel/C8fFTJRNF9t/?hl=en)
161. [333,648 views](https://www.instagram.com/benaskins.official/reel/DDaGG6iIasb/?hl=en)
162. [330,317 views](https://www.instagram.com/benaskins.official/reel/C5Yz85ANWpW/?hl=en)
163. [330,220 views](https://www.instagram.com/benaskins.official/reel/C8zqV-RN2eD/?hl=en)
164. [328,191 views](https://www.instagram.com/benaskins.official/reel/DHjSxOft93D/?hl=en)
165. [326,048 views](https://www.instagram.com/benaskins.official/reel/DGYqZkWsEBu/?hl=en)
166. [324,447 views](https://www.instagram.com/benaskins.official/reel/C8r8sYutZvM/?hl=en)
167. [320,645 views](https://www.instagram.com/benaskins.official/reel/C4bLJttNGCI/?hl=en)
168. [318,312 views](https://www.instagram.com/benaskins.official/reel/C4qlAvcNs0f/?hl=en)
169. [318,180 views](https://www.instagram.com/benaskins.official/reel/C4TZFF9t2bs/?hl=en)
170. [317,781 views](https://www.instagram.com/benaskins.official/reel/Cu91C3gN8Fa/?hl=en)
171. [315,933 views](https://www.instagram.com/benaskins.official/reel/C-qIbIHtMpf/?hl=en)
172. [313,711 views](https://www.instagram.com/benaskins.official/reel/DCuYm29tCnG/?hl=en)
173. [313,155 views](https://www.instagram.com/benaskins.official/reel/C8XXIVRt8dy/?hl=en)
174. [312,141 views](https://www.instagram.com/benaskins.official/reel/C7FAyGMtRUx/?hl=en)
175. [311,683 views](https://www.instagram.com/benaskins.official/reel/C3VmoXRN_C-/?hl=en)
176. [309,324 views](https://www.instagram.com/benaskins.official/reel/DEF2BoiNpKK/?hl=en)
177. [308,666 views](https://www.instagram.com/benaskins.official/reel/C5L8CQrNRl9/?hl=en)
178. [301,352 views](https://www.instagram.com/benaskins.official/reel/DAltS7-tLj2/?hl=en)
179. [300,306 views](https://www.instagram.com/benaskins.official/reel/C3QdzToNZxI/?hl=en)
180. [299,099 views](https://www.instagram.com/benaskins.official/reel/C5EVFcNNeYW/?hl=en)
181. [298,542 views](https://www.instagram.com/benaskins.official/reel/DEadR42NmxR/?hl=en)
182. [296,812 views](https://www.instagram.com/benaskins.official/reel/CukKIYytpWK/?hl=en)
183. [295,419 views](https://www.instagram.com/benaskins.official/reel/C9VKJgcNBH4/?hl=en)
184. [293,457 views](https://www.instagram.com/benaskins.official/reel/DFqRJCqNLNj/?hl=en)
185. [291,825 views](https://www.instagram.com/benaskins.official/reel/C8Pnz8qN_Yk/?hl=en)
186. [290,736 views](https://www.instagram.com/benaskins.official/reel/C6rOp1UNBqX/?hl=en)
187. [288,692 views](https://www.instagram.com/benaskins.official/reel/C7XQoPMNPrg/?hl=en)
188. [288,310 views](https://www.instagram.com/benaskins.official/reel/C4D865stAUA/?hl=en)
189. [286,388 views](https://www.instagram.com/benaskins.official/reel/DCHqLI3N08G/?hl=en)
190. [283,400 views](https://www.instagram.com/benaskins.official/reel/C89-3mQtnGQ/?hl=en)
191. [279,426 views](https://www.instagram.com/benaskins.official/reel/DGv0y3KMczQ/?hl=en)
192. [279,381 views](https://www.instagram.com/benaskins.official/reel/C7MsvRNth1a/?hl=en)
193. [278,095 views](https://www.instagram.com/benaskins.official/reel/C2iF86zNTDu/?hl=en)
194. [277,350 views](https://www.instagram.com/benaskins.official/reel/DENjWp8tv95/?hl=en)
195. [276,549 views](https://www.instagram.com/benaskins.official/reel/C4i2BsJtiTK/?hl=en)
196. [276,283 views](https://www.instagram.com/benaskins.official/reel/C8Z721Vt7Ym/?hl=en)
197. [275,273 views](https://www.instagram.com/benaskins.official/reel/DFVs3huNr--/?hl=en)
198. [273,601 views](https://www.instagram.com/benaskins.official/reel/DDU9X8etapd/?hl=en)
199. [271,662 views](https://www.instagram.com/benaskins.official/reel/C9u43GvtbUy/?hl=en)
200. [271,394 views](https://www.instagram.com/benaskins.official/reel/DHwRCAasKbr/?hl=en)
201. [270,909 views](https://www.instagram.com/benaskins.official/reel/DC9oe0dNt8t/?hl=en)
202. [270,697 views](https://www.instagram.com/benaskins.official/reel/C5TsxDdNfLD/?hl=en)
203. [270,261 views](https://www.instagram.com/benaskins.official/reel/C7zUslJt-9n/?hl=en)
204. [268,040 views](https://www.instagram.com/benaskins.official/reel/DAY2SjkNeNX/?hl=en)
205. [266,640 views](https://www.instagram.com/benaskins.official/reel/DIHUF4esuK1/?hl=en)
206. [265,897 views](https://www.instagram.com/benaskins.official/reel/DAwB84nNqDU/?hl=en)
207. [265,580 views](https://www.instagram.com/benaskins.official/reel/C_3a9v7Nb-k/?hl=en)
208. [265,055 views](https://www.instagram.com/benaskins.official/reel/C30fhvAtv8B/?hl=en)
209. [264,354 views](https://www.instagram.com/benaskins.official/reel/DEX37SJNgF7/?hl=en)
210. [257,337 views](https://www.instagram.com/benaskins.official/reel/DEQHdJRNpEf/?hl=en)
211. [257,025 views](https://www.instagram.com/benaskins.official/reel/C6O0A4PtEV1/?hl=en)
212. [255,346 views](https://www.instagram.com/benaskins.official/reel/C3ifSp-tSOv/?hl=en)
213. [253,697 views](https://www.instagram.com/benaskins.official/reel/C_JAyddPcUl/?hl=en)
214. [253,140 views](https://www.instagram.com/benaskins.official/reel/DH_izLXNocD/?hl=en)
215. [252,117 views](https://www.instagram.com/benaskins.official/reel/DDNMoYaNZNL/?hl=en)
216. [250,496 views](https://www.instagram.com/benaskins.official/reel/C-vQp_CtZne/?hl=en)
217. [250,442 views](https://www.instagram.com/benaskins.official/reel/C_qyL8uNvs4/?hl=en)
218. [249,990 views](https://www.instagram.com/benaskins.official/reel/DCw267eNTDb/?hl=en)
219. [248,080 views](https://www.instagram.com/benaskins.official/reel/DDurXSXtssK/?hl=en)
220. [247,865 views](https://www.instagram.com/benaskins.official/reel/C-nkAyftOVS/?hl=en)
221. [246,853 views](https://www.instagram.com/benaskins.official/reel/DGbLmgrsx2Q/?hl=en)
222. [245,876 views](https://www.instagram.com/benaskins.official/reel/C6ohxbEtdEI/?hl=en)
223. [242,801 views](https://www.instagram.com/benaskins.official/reel/DGqp_hwMeVo/?hl=en)
224. [240,230 views](https://www.instagram.com/benaskins.official/reel/C840cAFtvVC/?hl=en)
225. [237,765 views](https://www.instagram.com/benaskins.official/reel/DA3whuotrEO/?hl=en)
226. [237,055 views](https://www.instagram.com/benaskins.official/reel/C1aAnTRtoiz/?hl=en)
227. [234,738 views](https://www.instagram.com/benaskins.official/reel/C7ZjtBFNKlj/?hl=en)
228. [234,347 views](https://www.instagram.com/benaskins.official/reel/DE5WJ_wtc_U/?hl=en)
229. [233,718 views](https://www.instagram.com/benaskins.official/reel/DF0jjt2tQLE/?hl=en)
230. [233,499 views](https://www.instagram.com/benaskins.official/reel/C51ItKBNl-D/?hl=en)
231. [233,030 views](https://www.instagram.com/benaskins.official/reel/DDxQdvIt7Tn/?hl=en)
232. [232,440 views](https://www.instagram.com/benaskins.official/reel/C_GcC3hien6/?hl=en)
233. [231,844 views](https://www.instagram.com/benaskins.official/reel/DFGM391tG0d/?hl=en)
234. [228,802 views](https://www.instagram.com/benaskins.official/reel/C5OnfnktTzu/?hl=en)
235. [227,346 views](https://www.instagram.com/benaskins.official/reel/DE-b8UUtI0Y/?hl=en)
236. [226,795 views](https://www.instagram.com/benaskins.official/reel/C7rneYDN-Vp/?hl=en)
237. [223,332 views](https://www.instagram.com/benaskins.official/reel/C9IRhtqN0Vj/?hl=en)
238. [221,681 views](https://www.instagram.com/benaskins.official/reel/DAbal-rtr0F/?hl=en)
239. [219,597 views](https://www.instagram.com/benaskins.official/reel/C-Nygh1J5hh/?hl=en)
240. [218,416 views](https://www.instagram.com/benaskins.official/reel/C5q1hArtwxe/?hl=en)
241. [218,404 views](https://www.instagram.com/benaskins.official/reel/C9FqxJpOoRU/?hl=en)
242. [217,361 views](https://www.instagram.com/benaskins.official/reel/C3vWYEZtmqd/?hl=en)
243. [217,345 views](https://www.instagram.com/benaskins.official/reel/DFij8SFtmTt/?hl=en)
244. [216,681 views](https://www.instagram.com/benaskins.official/reel/DATsKPmtpeO/?hl=en)
245. [215,798 views](https://www.instagram.com/benaskins.official/reel/C9XuW7wNJUo/?hl=en)
246. [214,637 views](https://www.instagram.com/benaskins.official/reel/DIEjsQ3s21v/?hl=en)
247. [214,622 views](https://www.instagram.com/benaskins.official/reel/DGOUjOst9XZ/?hl=en)
248. [214,191 views](https://www.instagram.com/benaskins.official/reel/C5oTl-vtV18/?hl=en)
249. [212,615 views](https://www.instagram.com/benaskins.official/reel/C7PRz0HtLC6/?hl=en)
250. [212,175 views](https://www.instagram.com/benaskins.official/reel/C8uilXzNzXg/?hl=en)
251. [211,919 views](https://www.instagram.com/benaskins.official/reel/C_tD0rOt1p0/?hl=en)
252. [211,446 views](https://www.instagram.com/benaskins.official/reel/C1xICxVNj5M/?hl=en)
253. [210,837 views](https://www.instagram.com/benaskins.official/reel/DBMVmu-NeNB/?hl=en)
254. [207,672 views](https://www.instagram.com/benaskins.official/reel/DFQfbw8toEQ/?hl=en)
255. [206,321 views](https://www.instagram.com/benaskins.official/reel/C-Io-56NAfz/?hl=en)
256. [206,138 views](https://www.instagram.com/benaskins.official/reel/DG8sbsBssOs/?hl=en)
257. [203,803 views](https://www.instagram.com/benaskins.official/reel/DDsHRMJtjki/?hl=en)
258. [203,564 views](https://www.instagram.com/benaskins.official/reel/C8pY8SSNbAy/?hl=en)
259. [199,750 views](https://www.instagram.com/benaskins.official/reel/C90DM2xob29/?hl=en)
260. [199,632 views](https://www.instagram.com/benaskins.official/reel/DFLXOMYNXQf/?hl=en)
261. [196,549 views](https://www.instagram.com/benaskins.official/reel/C_npwTyNePN/?hl=en)
262. [195,945 views](https://www.instagram.com/benaskins.official/reel/C6_0HDpNHTf/?hl=en)
263. [195,171 views](https://www.instagram.com/benaskins.official/reel/DDpia72tHC0/?hl=en)
264. [195,131 views](https://www.instagram.com/benaskins.official/reel/DDIExftt8sI/?hl=en)
265. [193,120 views](https://www.instagram.com/benaskins.official/reel/C8H7vuMt10-/?hl=en)
266. [191,604 views](https://www.instagram.com/benaskins.official/reel/C5luEZbtfcj/?hl=en)
267. [191,517 views](https://www.instagram.com/benaskins.official/reel/DAJZnHOtI97/?hl=en)
268. [191,376 views](https://www.instagram.com/benaskins.official/reel/C7j2pmVNYqg/?hl=en)
269. [187,308 views](https://www.instagram.com/benaskins.official/reel/DAG1gNbtcpP/?hl=en)
270. [187,295 views](https://www.instagram.com/benaskins.official/reel/C613mCdN6uG/?hl=en)
271. [185,454 views](https://www.instagram.com/benaskins.official/reel/DGLw3xKNI1n/?hl=en)
272. [184,937 views](https://www.instagram.com/benaskins.official/reel/C--vN3ntexi/?hl=en)
273. [184,622 views](https://www.instagram.com/benaskins.official/reel/C_BTQ-yNmIG/?hl=en)
274. [184,155 views](https://www.instagram.com/benaskins.official/reel/C79oDAWNjYB/?hl=en)
275. [183,863 views](https://www.instagram.com/benaskins.official/reel/DA6Udz6NEsT/?hl=en)
276. [182,445 views](https://www.instagram.com/benaskins.official/reel/C2X22kltksl/?hl=en)
277. [181,697 views](https://www.instagram.com/benaskins.official/reel/DBJ0eUatY1z/?hl=en)
278. [181,598 views](https://www.instagram.com/benaskins.official/reel/C1pdbdhN2Z_/?hl=en)
279. [180,937 views](https://www.instagram.com/benaskins.official/reel/C_Ydav4NuXJ/?hl=en)
280. [179,377 views](https://www.instagram.com/benaskins.official/reel/C6JvD35Nqd6/?hl=en)
281. [178,654 views](https://www.instagram.com/benaskins.official/reel/C7hPqhGNm9s/?hl=en)
282. [178,570 views](https://www.instagram.com/benaskins.official/reel/DBb4qLZNAWv/?hl=en)
283. [177,861 views](https://www.instagram.com/benaskins.official/reel/DHB1fn2smyM/?hl=en)
284. [177,494 views](https://www.instagram.com/benaskins.official/reel/C6bvRIMtdST/?hl=en)
285. [175,572 views](https://www.instagram.com/benaskins.official/reel/DBmJmVrNehJ/?hl=en)
286. [175,251 views](https://www.instagram.com/benaskins.official/reel/DCChqxlNr0h/?hl=en)
287. [174,271 views](https://www.instagram.com/benaskins.official/reel/DBebsHZtdqm/?hl=en)
288. [173,827 views](https://www.instagram.com/benaskins.official/reel/C77CXTINR62/?hl=en)
289. [172,652 views](https://www.instagram.com/benaskins.official/reel/DGEA92StLQH/?hl=en)
290. [172,543 views](https://www.instagram.com/benaskins.official/reel/DFDoevJN1nG/?hl=en)
291. [171,951 views](https://www.instagram.com/benaskins.official/reel/C712yg1NJfE/?hl=en)
292. [170,366 views](https://www.instagram.com/benaskins.official/reel/C7Hh8DHNjkt/?hl=en)
293. [169,504 views](https://www.instagram.com/benaskins.official/reel/C-k8xEtNKzf/?hl=en)
294. [165,758 views](https://www.instagram.com/benaskins.official/reel/DHoc67FIh-0/?hl=en)
295. [165,704 views](https://www.instagram.com/benaskins.official/reel/C8SMRoJNY2l/?hl=en)
296. [165,437 views](https://www.instagram.com/benaskins.official/reel/C6g-gQpti5M/?hl=en)
297. [165,398 views](https://www.instagram.com/benaskins.official/reel/C2aaNvwNMzi/?hl=en)
298. [163,318 views](https://www.instagram.com/benaskins.official/reel/C-S9ZqbtWgY/?hl=en)
299. [162,419 views](https://www.instagram.com/benaskins.official/reel/C6Rd_0Tt6Lo/?hl=en)
300. [162,052 views](https://www.instagram.com/benaskins.official/reel/C9DKVRlNTLo/?hl=en)
301. [161,195 views](https://www.instagram.com/benaskins.official/reel/C8CxpPGtFQ9/?hl=en)
302. [160,840 views](https://www.instagram.com/benaskins.official/reel/C87X2tQvv-4/?hl=en)
303. [160,191 views](https://www.instagram.com/benaskins.official/reel/DBrXuWgNL7k/?hl=en)
304. [159,944 views](https://www.instagram.com/benaskins.official/reel/DF50ws4tQsr/?hl=en)
305. [159,295 views](https://www.instagram.com/benaskins.official/reel/DEDRt3yNGj6/?hl=en)
306. [158,911 views](https://www.instagram.com/benaskins.official/reel/C5tW80vtKhA/?hl=en)
307. [157,378 views](https://www.instagram.com/benaskins.official/reel/C7wpyEltsVk/?hl=en)
308. [157,096 views](https://www.instagram.com/benaskins.official/reel/C_59E8BtHdr/?hl=en)
309. [157,056 views](https://www.instagram.com/benaskins.official/reel/C9-VkrKto2r/?hl=en)
310. [157,024 views](https://www.instagram.com/benaskins.official/reel/DD-JrHVtxjw/?hl=en)
311. [156,666 views](https://www.instagram.com/benaskins.official/reel/C5gjURitxm5/?hl=en)
312. [154,098 views](https://www.instagram.com/benaskins.official/reel/DDFeR3nte3m/?hl=en)
313. [154,041 views](https://www.instagram.com/benaskins.official/reel/C2Sp17KNYWl/?hl=en)
314. [152,947 views](https://www.instagram.com/benaskins.official/reel/DBjj-dWtVJa/?hl=en)
315. [152,454 views](https://www.instagram.com/benaskins.official/reel/C583teDN97H/?hl=en)
316. [151,977 views](https://www.instagram.com/benaskins.official/reel/C2QFCsgtSoS/?hl=en)
317. [150,688 views](https://www.instagram.com/benaskins.official/reel/DAq4BuTNpFZ/?hl=en)
318. [150,203 views](https://www.instagram.com/benaskins.official/reel/DCzcXW3NSJj/?hl=en)
319. [150,050 views](https://www.instagram.com/benaskins.official/reel/C6y80RMNYFn/?hl=en)
320. [149,411 views](https://www.instagram.com/benaskins.official/reel/C66qrqZtzlv/?hl=en)
321. [148,249 views](https://www.instagram.com/benaskins.official/reel/DA847zJNVrt/?hl=en)
322. [147,230 views](https://www.instagram.com/benaskins.official/reel/C2VQvP_NaHO/?hl=en)
323. [147,049 views](https://www.instagram.com/benaskins.official/reel/C9pvJIttzRg/?hl=en)
324. [146,998 views](https://www.instagram.com/benaskins.official/reel/DB9W_wYNCns/?hl=en)
325. [146,500 views](https://www.instagram.com/benaskins.official/reel/DARH8_ENqWS/?hl=en)
326. [146,215 views](https://www.instagram.com/benaskins.official/reel/DABrDNrNmF4/?hl=en)
327. [143,620 views](https://www.instagram.com/benaskins.official/reel/DHZCE5is_5X/?hl=en)
328. [141,386 views](https://www.instagram.com/benaskins.official/reel/DHRLzv2se_F/?hl=en)
329. [140,713 views](https://www.instagram.com/benaskins.official/reel/DHl4vAwMbk0/?hl=en)
330. [139,587 views](https://www.instagram.com/benaskins.official/reel/C7mfFQDtZa_/?hl=en)
331. [137,799 views](https://www.instagram.com/benaskins.official/reel/DAymPLGNu7h/?hl=en)
332. [137,436 views](https://www.instagram.com/benaskins.official/reel/C2K-bV-onK7/?hl=en)
333. [136,498 views](https://www.instagram.com/benaskins.official/reel/C-s0XdMtjvd/?hl=en)
334. [136,270 views](https://www.instagram.com/benaskins.official/reel/C6ZNGmaNmib/?hl=en)
335. [135,895 views](https://www.instagram.com/benaskins.official/reel/DB1pFzBNrSI/?hl=en)
336. [135,516 views](https://www.instagram.com/benaskins.official/reel/C53uIATNznI/?hl=en)
337. [130,903 views](https://www.instagram.com/benaskins.official/reel/C6Wjh9OtGQy/?hl=en)
338. [130,778 views](https://www.instagram.com/benaskins.official/reel/DB6ywaPt9kc/?hl=en)
339. [130,612 views](https://www.instagram.com/benaskins.official/reel/DHMJjF8Mhsc/?hl=en)
340. [130,562 views](https://www.instagram.com/benaskins.official/reel/DBHLintNyP4/?hl=en)
341. [129,252 views](https://www.instagram.com/benaskins.official/reel/DEc-3UCtNtQ/?hl=en)
342. [128,856 views](https://www.instagram.com/benaskins.official/reel/C_QwUkINmWk/?hl=en)
343. [127,469 views](https://www.instagram.com/benaskins.official/reel/DCe0PSQt2V8/?hl=en)
344. [126,866 views](https://www.instagram.com/benaskins.official/reel/DDfNLBAtE8g/?hl=en)
345. [125,598 views](https://www.instagram.com/benaskins.official/reel/DEfmDrRND8x/?hl=en)
346. [124,762 views](https://www.instagram.com/benaskins.official/reel/DG3eMvRMp5x/?hl=en)
347. [123,153 views](https://www.instagram.com/benaskins.official/reel/C1XcamENdat/?hl=en)
348. [123,020 views](https://www.instagram.com/benaskins.official/reel/DD2ZFqEtwHU/?hl=en)
349. [122,952 views](https://www.instagram.com/benaskins.official/reel/DBUDldIp_ko/?hl=en)
350. [122,852 views](https://www.instagram.com/benaskins.official/reel/DE0PUn3tpZp/?hl=en)
351. [122,831 views](https://www.instagram.com/benaskins.official/reel/C2Ng_f9Nj8c/?hl=en)
352. [121,883 views](https://www.instagram.com/benaskins.official/reel/DDAUzXKtMp3/?hl=en)
353. [121,312 views](https://www.instagram.com/benaskins.official/reel/DBWpqX-tFRW/?hl=en)
354. [119,871 views](https://www.instagram.com/benaskins.official/reel/DFvdknNNKcb/?hl=en)
355. [119,456 views](https://www.instagram.com/benaskins.official/reel/DEStagFMzQr/?hl=en)
356. [118,656 views](https://www.instagram.com/benaskins.official/reel/DDXgOPLNM4d/?hl=en)
357. [118,501 views](https://www.instagram.com/benaskins.official/reel/C1zzBTctEyx/?hl=en)
358. [117,375 views](https://www.instagram.com/benaskins.official/reel/DGJLclmt85j/?hl=en)
359. [117,130 views](https://www.instagram.com/benaskins.official/reel/C2Fy-Z0tYSV/?hl=en)
360. [116,937 views](https://www.instagram.com/benaskins.official/reel/C9fcvVeNC-C/?hl=en)
361. [115,305 views](https://www.instagram.com/benaskins.official/reel/C_vxwbmNROs/?hl=en)
362. [114,055 views](https://www.instagram.com/benaskins.official/reel/DC2CnH1tvuH/?hl=en)
363. [113,985 views](https://www.instagram.com/benaskins.official/reel/DGWC22GsruL/?hl=en)
364. [113,964 views](https://www.instagram.com/benaskins.official/reel/C1-DIhmNrzN/?hl=en)
365. [113,367 views](https://www.instagram.com/benaskins.official/reel/C9xdZV7ttqk/?hl=en)
366. [112,882 views](https://www.instagram.com/benaskins.official/reel/DGybK1eMFOC/?hl=en)
367. [112,516 views](https://www.instagram.com/benaskins.official/reel/C_yOnvaN9_B/?hl=en)
368. [112,493 views](https://www.instagram.com/benaskins.official/reel/DFIwwnENGwc/?hl=en)
369. [110,904 views](https://www.instagram.com/benaskins.official/reel/DEVR8kXN5fR/?hl=en)
370. [108,969 views](https://www.instagram.com/benaskins.official/reel/C-f0EsQPsQN/?hl=en)
371. [108,796 views](https://www.instagram.com/benaskins.official/reel/C2AoeBsN4tl/?hl=en)
372. [106,982 views](https://www.instagram.com/benaskins.official/reel/C95M1NXIRRb/?hl=en)
373. [105,744 views](https://www.instagram.com/benaskins.official/reel/C0pGmXetbRP/?hl=en)
374. [104,676 views](https://www.instagram.com/benaskins.official/reel/DC4nO6wo7qs/?hl=en)
375. [103,498 views](https://www.instagram.com/benaskins.official/reel/DH6YuXNsPBP/?hl=en)
376. [103,433 views](https://www.instagram.com/benaskins.official/reel/C-3AycfNJYj/?hl=en)
377. [102,796 views](https://www.instagram.com/benaskins.official/reel/C_V5noVN_l_/?hl=en)
378. [102,359 views](https://www.instagram.com/benaskins.official/reel/DCZue1bNZUi/?hl=en)
379. [102,192 views](https://www.instagram.com/benaskins.official/reel/DE2xyN5NxU2/?hl=en)
380. [100,453 views](https://www.instagram.com/benaskins.official/reel/DEp5r0EtMi1/?hl=en)
381. [99,410 views](https://www.instagram.com/benaskins.official/reel/DCmkjUBN2nV/?hl=en)
382. [98,892 views](https://www.instagram.com/benaskins.official/reel/C2IWWWvIPc2/?hl=en)
383. [98,544 views](https://www.instagram.com/benaskins.official/reel/C_iw1LZt066/?hl=en)
384. [98,272 views](https://www.instagram.com/benaskins.official/reel/DAoS27dtvmi/?hl=en)
385. [97,041 views](https://www.instagram.com/benaskins.official/reel/DHEZuwaMX03/?hl=en)
386. [96,704 views](https://www.instagram.com/benaskins.official/reel/DDkXn1LN_kM/?hl=en)
387. [96,312 views](https://www.instagram.com/benaskins.official/reel/C-dPTxmqFXL/?hl=en)
388. [95,037 views](https://www.instagram.com/benaskins.official/reel/C2DMrqeNT1W/?hl=en)
389. [94,980 views](https://www.instagram.com/benaskins.official/reel/DDP0C20NVCy/?hl=en)
390. [93,864 views](https://www.instagram.com/benaskins.official/reel/C146qdkNTIx/?hl=en)
391. [93,563 views](https://www.instagram.com/benaskins.official/reel/DFlIiWuNoyM/?hl=en)
392. [91,602 views](https://www.instagram.com/benaskins.official/reel/DH1NvFisem0/?hl=en)
393. [91,573 views](https://www.instagram.com/benaskins.official/reel/C_LlinOp2fs/?hl=en)
394. [90,907 views](https://www.instagram.com/benaskins.official/reel/DEIaWnetan-/?hl=en)
395. [90,682 views](https://www.instagram.com/benaskins.official/reel/Cz4Js05NOEd/?hl=en)
396. [89,189 views](https://www.instagram.com/benaskins.official/reel/C0XEt99tR4B/?hl=en)
397. [87,406 views](https://www.instagram.com/benaskins.official/reel/C1m6ztDtX8U/?hl=en)
398. [87,180 views](https://www.instagram.com/benaskins.official/reel/DG_JgZ0Nl2E/?hl=en)
399. [86,835 views](https://www.instagram.com/benaskins.official/reel/DChaWRAtwpB/?hl=en)
400. [86,454 views](https://www.instagram.com/benaskins.official/reel/Cy83VtiNocM/?hl=en)
401. [85,705 views](https://www.instagram.com/benaskins.official/reel/DFBD6gxtPhT/?hl=en)
402. [84,893 views](https://www.instagram.com/benaskins.official/reel/DH3zUVjM1b0/?hl=en)
403. [82,219 views](https://www.instagram.com/benaskins.official/reel/C17eeN8t_eR/?hl=en)
404. [81,632 views](https://www.instagram.com/benaskins.official/reel/DGi80O0suRq/?hl=en)
405. [81,297 views](https://www.instagram.com/benaskins.official/reel/DE7625KtbEF/?hl=en)
406. [81,023 views](https://www.instagram.com/benaskins.official/reel/DFdY6ljtcET/?hl=en)
407. [80,524 views](https://www.instagram.com/benaskins.official/reel/DCPZO3uNNyi/?hl=en)
408. [79,505 views](https://www.instagram.com/benaskins.official/reel/DBzD36fNXN1/?hl=en)
409. [79,399 views](https://www.instagram.com/benaskins.official/reel/C1ulZqRNAm4/?hl=en)
410. [79,151 views](https://www.instagram.com/benaskins.official/reel/DExoKDotmJh/?hl=en)
411. [77,835 views](https://www.instagram.com/benaskins.official/reel/DEkt59LN7Xh/?hl=en)
412. [77,615 views](https://www.instagram.com/benaskins.official/reel/C12VqlJtZDF/?hl=en)
413. [76,371 views](https://www.instagram.com/benaskins.official/reel/DBt6iw-N4dv/?hl=en)
414. [75,689 views](https://www.instagram.com/benaskins.official/reel/DFYOV29tfSx/?hl=en)
415. [75,134 views](https://www.instagram.com/benaskins.official/reel/C09rpfXNway/?hl=en)
416. [74,879 views](https://www.instagram.com/benaskins.official/reel/DDzEpwzN7ng/?hl=en)
417. [73,868 views](https://www.instagram.com/benaskins.official/reel/DF-8w4GN4Di/?hl=en)
418. [72,525 views](https://www.instagram.com/benaskins.official/reel/DDKofpqNHT1/?hl=en)
419. [72,377 views](https://www.instagram.com/benaskins.official/reel/C1U17ZOta_4/?hl=en)
420. [72,365 views](https://www.instagram.com/benaskins.official/reel/DHJjil4sqdo/?hl=en)
421. [71,698 views](https://www.instagram.com/benaskins.official/reel/DFyAQzqt9FT/?hl=en)
422. [70,541 views](https://www.instagram.com/benaskins.official/reel/DCXG6amtqCX/?hl=en)
423. [68,990 views](https://www.instagram.com/benaskins.official/reel/DGQ6ceVNcO4/?hl=en)
424. [68,753 views](https://www.instagram.com/benaskins.official/reel/C1cpKOKNcMk/?hl=en)
425. [68,359 views](https://www.instagram.com/benaskins.official/reel/DGdyM9MsWIA/?hl=en)
426. [67,879 views](https://www.instagram.com/benaskins.official/reel/C_bCu4qNSEs/?hl=en)
427. [67,715 views](https://www.instagram.com/benaskins.official/reel/DGGmyx3N6BU/?hl=en)
428. [67,711 views](https://www.instagram.com/benaskins.official/reel/DBwfa2apyca/?hl=en)
429. [67,521 views](https://www.instagram.com/benaskins.official/reel/DIPBJkvM44-/?hl=en)
430. [67,167 views](https://www.instagram.com/benaskins.official/reel/DHOs77EMB-9/?hl=en)
431. [66,748 views](https://www.instagram.com/benaskins.official/reel/DGtNqYsMNZS/?hl=en)
432. [66,258 views](https://www.instagram.com/benaskins.official/reel/DDhyQUHtaQR/?hl=en)
433. [65,891 views](https://www.instagram.com/benaskins.official/reel/C1FayUFNkg7/?hl=en)
434. [65,588 views](https://www.instagram.com/benaskins.official/reel/C__GSk1tu5k/?hl=en)
435. [65,516 views](https://www.instagram.com/benaskins.official/reel/DHbkI9ntT6u/?hl=en)
436. [65,194 views](https://www.instagram.com/benaskins.official/reel/C0w2JFNNmaB/?hl=en)
437. [65,110 views](https://www.instagram.com/benaskins.official/reel/C1sCv4qNnv2/?hl=en)
438. [64,825 views](https://www.instagram.com/benaskins.official/reel/DDR8zwQNuae/?hl=en)
439. [64,162 views](https://www.instagram.com/benaskins.official/reel/DCUjs7JNZdd/?hl=en)
440. [64,096 views](https://www.instagram.com/benaskins.official/reel/DIRkizuMQ0m/?hl=en)
441. [63,345 views](https://www.instagram.com/benaskins.official/reel/C1hlTvfN3e7/?hl=en)
442. [62,838 views](https://www.instagram.com/benaskins.official/reel/C0Cgr0DIJ2u/?hl=en)
443. [62,399 views](https://www.instagram.com/benaskins.official/reel/DGBajU5tsEs/?hl=en)
444. [62,385 views](https://www.instagram.com/benaskins.official/reel/DF3HR6VNfYe/?hl=en)
445. [62,217 views](https://www.instagram.com/benaskins.official/reel/C1H-gHSN1-P/?hl=en)
446. [61,967 views](https://www.instagram.com/benaskins.official/reel/C1KtOOMNd7_/?hl=en)
447. [61,637 views](https://www.instagram.com/benaskins.official/reel/CtMnSChgI75/?hl=en)
448. [61,191 views](https://www.instagram.com/benaskins.official/reel/C0uQseHN5U9/?hl=en)
449. [61,138 views](https://www.instagram.com/benaskins.official/reel/C1C0Uwjo7Vs/?hl=en)
450. [60,688 views](https://www.instagram.com/benaskins.official/reel/DCFFoCptcMp/?hl=en)
451. [60,444 views](https://www.instagram.com/benaskins.official/reel/DEK-8ZYtnkF/?hl=en)
452. [59,769 views](https://www.instagram.com/benaskins.official/reel/DFa1pPit_AX/?hl=en)
453. [59,443 views](https://www.instagram.com/benaskins.official/reel/DEnUO81tJt-/?hl=en)
454. [59,053 views](https://www.instagram.com/benaskins.official/reel/DEAk4ecNBMz/?hl=en)
455. [58,877 views](https://www.instagram.com/benaskins.official/reel/C1fJLNVtV2f/?hl=en)
456. [57,932 views](https://www.instagram.com/benaskins.official/reel/Cx53rtMtr5G/?hl=en)
457. [55,335 views](https://www.instagram.com/benaskins.official/reel/DD7jLW-NylM/?hl=en)
458. [54,235 views](https://www.instagram.com/benaskins.official/reel/CyWMCRat9n1/?hl=en)
459. [54,146 views](https://www.instagram.com/benaskins.official/reel/C0j-1pdNmGz/?hl=en)
460. [53,303 views](https://www.instagram.com/benaskins.official/reel/C1NJ4m_NurM/?hl=en)
461. [52,120 views](https://www.instagram.com/benaskins.official/reel/CzrRWStNyTp/?hl=en)
462. [51,460 views](https://www.instagram.com/benaskins.official/reel/C0Zo53htE8V/?hl=en)
463. [50,509 views](https://www.instagram.com/benaskins.official/reel/DH85o2eswNB/?hl=en)
464. [50,099 views](https://www.instagram.com/benaskins.official/reel/C0mgfEuNOk3/?hl=en)
465. [50,088 views](https://www.instagram.com/benaskins.official/reel/C1SZPTJNidj/?hl=en)
466. [49,920 views](https://www.instagram.com/benaskins.official/reel/Cz9VhDvtt8u/?hl=en)
467. [49,319 views](https://www.instagram.com/benaskins.official/reel/DF8UGfttn3y/?hl=en)
468. [49,187 views](https://www.instagram.com/benaskins.official/reel/C0cQJR6NzZe/?hl=en)
469. [48,620 views](https://www.instagram.com/benaskins.official/reel/C019u_HNl_m/?hl=en)
470. [48,493 views](https://www.instagram.com/benaskins.official/reel/DHG_LhHskvp/?hl=en)
471. [48,159 views](https://www.instagram.com/benaskins.official/reel/C0R7606NM8F/?hl=en)
472. [47,466 views](https://www.instagram.com/benaskins.official/reel/DGlhpXhse7t/?hl=en)
473. [47,411 views](https://www.instagram.com/benaskins.official/reel/C0zZcpHNzBx/?hl=en)
474. [47,153 views](https://www.instagram.com/benaskins.official/reel/DIMWL_aM8Rv/?hl=en)
475. [46,841 views](https://www.instagram.com/benaskins.official/reel/C0Mwxj3NVWU/?hl=en)
476. [46,468 views](https://www.instagram.com/benaskins.official/reel/C1APNt3qJaW/?hl=en)
477. [45,669 views](https://www.instagram.com/benaskins.official/reel/C0rtRbutY60/?hl=en)
478. [45,550 views](https://www.instagram.com/benaskins.official/reel/DHWcArsufSu/?hl=en)
479. [45,064 views](https://www.instagram.com/benaskins.official/reel/DHeJfyPtO5g/?hl=en)
480. [44,134 views](https://www.instagram.com/benaskins.official/reel/CzotBcTNJXk/?hl=en)
481. [43,807 views](https://www.instagram.com/benaskins.official/reel/Cz_4GQ1NIpJ/?hl=en)
482. [43,806 views](https://www.instagram.com/benaskins.official/reel/C0FMdprNrp6/?hl=en)
483. [43,779 views](https://www.instagram.com/benaskins.official/reel/C07JTw6t4yr/?hl=en)
484. [43,593 views](https://www.instagram.com/benaskins.official/reel/DFnsmfgt3am/?hl=en)
485. [43,284 views](https://www.instagram.com/benaskins.official/reel/C0HnnkstfR7/?hl=en)
486. [43,106 views](https://www.instagram.com/benaskins.official/reel/DIJxE9oMSDA/?hl=en)
487. [42,834 views](https://www.instagram.com/benaskins.official/reel/DFs1UkmN8lv/?hl=en)
488. [42,727 views](https://www.instagram.com/benaskins.official/reel/DC7LiQitMIo/?hl=en)
489. [42,724 views](https://www.instagram.com/benaskins.official/reel/CzwY1gbNZOe/?hl=en)
490. [42,345 views](https://www.instagram.com/benaskins.official/reel/C04VCoNt4Xa/?hl=en)
491. [41,173 views](https://www.instagram.com/benaskins.official/reel/DICE5WeMV7e/?hl=en)
492. [40,296 views](https://www.instagram.com/benaskins.official/reel/C0hY4QNNjQ2/?hl=en)
493. [39,990 views](https://www.instagram.com/benaskins.official/reel/Cz1lD7TtcOC/?hl=en)
494. [39,950 views](https://www.instagram.com/benaskins.official/reel/Cxn1hP6qwH7/?hl=en)
495. [38,978 views](https://www.instagram.com/benaskins.official/reel/C0UfaEitcBH/?hl=en)
496. [38,966 views](https://www.instagram.com/benaskins.official/reel/C04iSznNxJw/?hl=en)
497. [38,873 views](https://www.instagram.com/benaskins.official/reel/CuMxcn1Ot7i/?hl=en)
498. [38,741 views](https://www.instagram.com/benaskins.official/reel/Cz60I2QtHzc/?hl=en)
499. [38,273 views](https://www.instagram.com/benaskins.official/reel/DCpJRX8tZe8/?hl=en)
500. [37,718 views](https://www.instagram.com/benaskins.official/reel/CzeaBAwNEK5/?hl=en)
501. [37,712 views](https://www.instagram.com/benaskins.official/reel/CxtBdGwNhE1/?hl=en)
502. [36,511 views](https://www.instagram.com/benaskins.official/reel/CzmIR6PtM7_/?hl=en)
503. [36,232 views](https://www.instagram.com/benaskins.official/reel/CzZTxiANKQA/?hl=en)
504. [36,104 views](https://www.instagram.com/benaskins.official/reel/C0e0Irrql6s/?hl=en)
505. [36,090 views](https://www.instagram.com/benaskins.official/reel/DFf85Iztab2/?hl=en)
506. [34,845 views](https://www.instagram.com/benaskins.official/reel/Ct4TB7ZuI-4/?hl=en)
507. [34,068 views](https://www.instagram.com/benaskins.official/reel/CsRYjMmMDmC/?hl=en)
508. [33,888 views](https://www.instagram.com/benaskins.official/reel/C0KNn7ZtKOh/?hl=en)
509. [32,779 views](https://www.instagram.com/benaskins.official/reel/Czt2BCLNErg/?hl=en)
510. [31,789 views](https://www.instagram.com/benaskins.official/reel/Czjjbkjt7sw/?hl=en)
511. [31,385 views](https://www.instagram.com/benaskins.official/reel/Cwndw7YtXDp/?hl=en)
512. [30,642 views](https://www.instagram.com/benaskins.official/reel/CzEp9PTN8ul/?hl=en)
513. [30,594 views](https://www.instagram.com/benaskins.official/reel/CzzCwYBtYyz/?hl=en)
514. [29,795 views](https://www.instagram.com/benaskins.official/reel/Czg_1-Ltv2L/?hl=en)
515. [29,698 views](https://www.instagram.com/benaskins.official/reel/CzPCAdYt3el/?hl=en)
516. [28,818 views](https://www.instagram.com/benaskins.official/reel/Cy6QASuNIHJ/?hl=en)
517. [28,411 views](https://www.instagram.com/benaskins.official/reel/DHywBCNMTL7/?hl=en)
518. [28,376 views](https://www.instagram.com/benaskins.official/reel/CzJ_Wg3tYhl/?hl=en)
519. [28,000 views](https://www.instagram.com/benaskins.official/reel/Csom2zbLKdr/?hl=en)
520. [27,813 views](https://www.instagram.com/benaskins.official/reel/Cyv8qPttbOT/?hl=en)
521. [27,732 views](https://www.instagram.com/benaskins.official/reel/DIUGXpmMjZ9/?hl=en)
522. [27,573 views](https://www.instagram.com/benaskins.official/reel/DHtk0o2M4Jk/?hl=en)
523. [27,520 views](https://www.instagram.com/benaskins.official/reel/Cylp8ogtFhu/?hl=en)
524. [27,481 views](https://www.instagram.com/benaskins.official/reel/Cxvl6nQt_sV/?hl=en)
525. [27,421 views](https://www.instagram.com/benaskins.official/reel/Czb0xBgNGot/?hl=en)
526. [27,333 views](https://www.instagram.com/benaskins.official/reel/CyEMcYgNUJi/?hl=en)
527. [27,259 views](https://www.instagram.com/benaskins.official/reel/Cy_XehCtpgR/?hl=en)
528. [26,953 views](https://www.instagram.com/benaskins.official/reel/CzRqwzfNc5t/?hl=en)
529. [26,941 views](https://www.instagram.com/benaskins.official/reel/CtKBaeUq73r/?hl=en)
530. [26,821 views](https://www.instagram.com/benaskins.official/reel/CyL53nJNYsU/?hl=en)
531. [26,762 views](https://www.instagram.com/benaskins.official/reel/CytL0IetgBV/?hl=en)
532. [26,596 views](https://www.instagram.com/benaskins.official/reel/CzUQlkIN8Cj/?hl=en)
533. [26,232 views](https://www.instagram.com/benaskins.official/reel/CzHPOn5tCSH/?hl=en)
534. [26,178 views](https://www.instagram.com/benaskins.official/reel/CyGsqDSttFi/?hl=en)
535. [26,080 views](https://www.instagram.com/benaskins.official/reel/CtPLryguS2y/?hl=en)
536. [26,009 views](https://www.instagram.com/benaskins.official/reel/CyoKyZaNClT/?hl=en)
537. [25,885 views](https://www.instagram.com/benaskins.official/reel/CtTuBWhAm7M/?hl=en)
538. [25,848 views](https://www.instagram.com/benaskins.official/reel/Cxqbiznt3W6/?hl=en)
539. [25,575 views](https://www.instagram.com/benaskins.official/reel/DG6IH8fsFww/?hl=en)
540. [25,243 views](https://www.instagram.com/benaskins.official/reel/CsOny3Fg9BP/?hl=en)
541. [25,081 views](https://www.instagram.com/benaskins.official/reel/Cy1NrDvtHrO/?hl=en)
542. [24,702 views](https://www.instagram.com/benaskins.official/reel/Cyd_A2StFei/?hl=en)
543. [24,102 views](https://www.instagram.com/benaskins.official/reel/Cs_xx6_Ni1u/?hl=en)
544. [23,706 views](https://www.instagram.com/benaskins.official/reel/CtRtYddNcg3/?hl=en)
545. [23,639 views](https://www.instagram.com/benaskins.official/reel/CzCH5vUNHa7/?hl=en)
546. [23,134 views](https://www.instagram.com/benaskins.official/reel/Cx8c4OQNXV3/?hl=en)
547. [22,786 views](https://www.instagram.com/benaskins.official/reel/DHTz7fTMnyX/?hl=en)
548. [22,684 views](https://www.instagram.com/benaskins.official/reel/DIWsf1eM3aW/?hl=en)
549. [22,505 views](https://www.instagram.com/benaskins.official/reel/CzWsyX_tziT/?hl=en)
550. [22,497 views](https://www.instagram.com/benaskins.official/reel/CxdkCaUt_dd/?hl=en)
551. [22,097 views](https://www.instagram.com/benaskins.official/reel/CsZHGw5tzzR/?hl=en)
552. [22,056 views](https://www.instagram.com/benaskins.official/reel/Cyqr1rYNNce/?hl=en)
553. [22,055 views](https://www.instagram.com/benaskins.official/reel/CyYy6NkNW5G/?hl=en)
554. [21,957 views](https://www.instagram.com/benaskins.official/reel/Cx_B8Pet50n/?hl=en)
555. [21,910 views](https://www.instagram.com/benaskins.official/reel/Cy3q5x4NPo0/?hl=en)
556. [21,572 views](https://www.instagram.com/benaskins.official/reel/CyyiQA4NRcu/?hl=en)
557. [21,547 views](https://www.instagram.com/benaskins.official/reel/Cu4G_8JrOOH/?hl=en)
558. [21,525 views](https://www.instagram.com/benaskins.official/reel/CyjFLSetEBM/?hl=en)
559. [21,334 views](https://www.instagram.com/benaskins.official/reel/CyBoualtd3C/?hl=en)
560. [21,278 views](https://www.instagram.com/benaskins.official/reel/CsWjZIgLrWJ/?hl=en)
561. [20,765 views](https://www.instagram.com/benaskins.official/reel/CwS5ifBN0hb/?hl=en)
562. [20,425 views](https://www.instagram.com/benaskins.official/reel/CxV0sE6Ndlv/?hl=en)
563. [20,284 views](https://www.instagram.com/benaskins.official/reel/CyTos2nNkQx/?hl=en)
564. [20,222 views](https://www.instagram.com/benaskins.official/reel/Cx0mkjxNtvN/?hl=en)
565. [20,071 views](https://www.instagram.com/benaskins.official/reel/CyghlEeNmgm/?hl=en)
566. [19,873 views](https://www.instagram.com/benaskins.official/reel/CxlLl32tEjc/?hl=en)
567. [19,697 views](https://www.instagram.com/benaskins.official/reel/Cw5hPLtt0Om/?hl=en)
568. [19,665 views](https://www.instagram.com/benaskins.official/reel/CwF_cVJtdbG/?hl=en)
569. [19,581 views](https://www.instagram.com/benaskins.official/reel/Cr5VwpGOxvE/?hl=en)
570. [19,537 views](https://www.instagram.com/benaskins.official/reel/CrtS3M0teTy/?hl=en)
571. [19,255 views](https://www.instagram.com/benaskins.official/reel/CveuPncqQ0z/?hl=en)
572. [19,106 views](https://www.instagram.com/benaskins.official/reel/CxgIylytNdn/?hl=en)
573. [19,035 views](https://www.instagram.com/benaskins.official/reel/CybOFfrtFCi/?hl=en)
574. [18,995 views](https://www.instagram.com/benaskins.official/reel/Cr6U13MOuya/?hl=en)
575. [18,817 views](https://www.instagram.com/benaskins.official/reel/CtWoLRhNFyw/?hl=en)
576. [18,664 views](https://www.instagram.com/benaskins.official/reel/CyRDqjItM66/?hl=en)
577. [18,483 views](https://www.instagram.com/benaskins.official/reel/CtwqvXutk5t/?hl=en)
578. [18,432 views](https://www.instagram.com/benaskins.official/reel/Crv_eHmLmzb/?hl=en)
579. [18,092 views](https://www.instagram.com/benaskins.official/reel/CryfQKZxMc-/?hl=en)
580. [17,974 views](https://www.instagram.com/benaskins.official/reel/CvIMSMgt6W8/?hl=en)
581. [17,768 views](https://www.instagram.com/benaskins.official/reel/CyJJVAqNNC1/?hl=en)
582. [17,621 views](https://www.instagram.com/benaskins.official/reel/CrbZ-uSocd0/?hl=en)
583. [17,403 views](https://www.instagram.com/benaskins.official/reel/CuCt011xOLH/?hl=en)
584. [17,175 views](https://www.instagram.com/benaskins.official/reel/CtzKlv9O_b7/?hl=en)
585. [17,145 views](https://www.instagram.com/benaskins.official/reel/Cvc6U2mNZxA/?hl=en)
586. [17,136 views](https://www.instagram.com/benaskins.official/reel/Crdcq9LIDFo/?hl=en)
587. [17,127 views](https://www.instagram.com/benaskins.official/reel/CvXBzeBNBnc/?hl=en)
588. [17,101 views](https://www.instagram.com/benaskins.official/reel/Cxa_AGMt_P7/?hl=en)
589. [17,060 views](https://www.instagram.com/benaskins.official/reel/CvHp8S-taTt/?hl=en)
590. [17,015 views](https://www.instagram.com/benaskins.official/reel/CxiseIfNVUj/?hl=en)
591. [17,009 views](https://www.instagram.com/benaskins.official/reel/Cx3Ng0_N_LN/?hl=en)
592. [16,843 views](https://www.instagram.com/benaskins.official/reel/CwqCr6Zt4IP/?hl=en)
593. [16,654 views](https://www.instagram.com/benaskins.official/reel/CvfcDBXtKt-/?hl=en)
594. [16,533 views](https://www.instagram.com/benaskins.official/reel/Cw8DkP5t-rP/?hl=en)
595. [16,500 views](https://www.instagram.com/benaskins.official/reel/CrsdzQyqoqm/?hl=en)
596. [16,484 views](https://www.instagram.com/benaskins.official/reel/CroBJMFIlo6/?hl=en)
597. [16,442 views](https://www.instagram.com/benaskins.official/reel/CxYZnAbtvrt/?hl=en)
598. [16,217 views](https://www.instagram.com/benaskins.official/reel/Cvu7lRnN4zU/?hl=en)
599. [16,099 views](https://www.instagram.com/benaskins.official/reel/CxD9iwmtQwE/?hl=en)
600. [16,006 views](https://www.instagram.com/benaskins.official/reel/CwDdHGTNwl8/?hl=en)
601. [15,950 views](https://www.instagram.com/benaskins.official/reel/Cw27aVHNW3G/?hl=en)
602. [15,940 views](https://www.instagram.com/benaskins.official/reel/CtcNoJqrW4V/?hl=en)
603. [15,905 views](https://www.instagram.com/benaskins.official/reel/CyOeBbVII3M/?hl=en)
604. [15,842 views](https://www.instagram.com/benaskins.official/reel/CuZwtXsL78E/?hl=en)
605. [15,840 views](https://www.instagram.com/benaskins.official/reel/CvkeFhmtKkw/?hl=en)
606. [15,680 views](https://www.instagram.com/benaskins.official/reel/CwA2hnrt0lU/?hl=en)
607. [15,633 views](https://www.instagram.com/benaskins.official/reel/Cwapkaqtxdo/?hl=en)
608. [15,558 views](https://www.instagram.com/benaskins.official/reel/CvX3FB1N2j_/?hl=en)
609. [15,329 views](https://www.instagram.com/benaskins.official/reel/CwxxTFItOci/?hl=en)
610. [15,324 views](https://www.instagram.com/benaskins.official/reel/CtHc-b0u_Of/?hl=en)
611. [15,298 views](https://www.instagram.com/benaskins.official/reel/CxOG34ItHmv/?hl=en)
612. [15,130 views](https://www.instagram.com/benaskins.official/reel/CwVdk58NAYm/?hl=en)
613. [15,059 views](https://www.instagram.com/benaskins.official/reel/CwLBQTeNAsZ/?hl=en)
614. [15,050 views](https://www.instagram.com/benaskins.official/reel/Cuw6UiRMIYk/?hl=en)
615. [14,992 views](https://www.instagram.com/benaskins.official/reel/CwVLX9ft-se/?hl=en)
616. [14,917 views](https://www.instagram.com/benaskins.official/reel/CwYCTOTtXHx/?hl=en)
617. [14,909 views](https://www.instagram.com/benaskins.official/reel/CwNxVFPNBTT/?hl=en)
618. [14,868 views](https://www.instagram.com/benaskins.official/reel/Cw0Xl4pNi8l/?hl=en)
619. [14,775 views](https://www.instagram.com/benaskins.official/reel/CwfxW23Na2q/?hl=en)
620. [14,769 views](https://www.instagram.com/benaskins.official/reel/CuAPk8FRStR/?hl=en)
621. [14,743 views](https://www.instagram.com/benaskins.official/reel/Cs6p-IdOKHD/?hl=en)
622. [14,658 views](https://www.instagram.com/benaskins.official/reel/CuSHp9oqxMU/?hl=en)
623. [14,570 views](https://www.instagram.com/benaskins.official/reel/CsyolJKqmBa/?hl=en)
624. [14,497 views](https://www.instagram.com/benaskins.official/reel/CvE_6n9tvY0/?hl=en)
625. [14,492 views](https://www.instagram.com/benaskins.official/reel/Cur2LtnMTF3/?hl=en)
626. [14,485 views](https://www.instagram.com/benaskins.official/reel/Ctjva20g0jM/?hl=en)
627. [14,378 views](https://www.instagram.com/benaskins.official/reel/CxTQMbRNXRs/?hl=en)
628. [14,298 views](https://www.instagram.com/benaskins.official/reel/CxLjHhwNINU/?hl=en)
629. [14,296 views](https://www.instagram.com/benaskins.official/reel/CwdBc6RNiBQ/?hl=en)
630. [14,267 views](https://www.instagram.com/benaskins.official/reel/CvqJ8L1ttPX/?hl=en)
631. [14,255 views](https://www.instagram.com/benaskins.official/reel/CsJmxwtLs-i/?hl=en)
632. [14,169 views](https://www.instagram.com/benaskins.official/reel/CxVgzwIK9wo/?hl=en)
633. [14,162 views](https://www.instagram.com/benaskins.official/reel/CxJA1hnNyYV/?hl=en)
634. [14,153 views](https://www.instagram.com/benaskins.official/reel/CwvQiqsN_oj/?hl=en)
635. [14,135 views](https://www.instagram.com/benaskins.official/reel/CtErDo1O3Rj/?hl=en)
636. [14,062 views](https://www.instagram.com/benaskins.official/reel/Cv47QAptA-u/?hl=en)
637. [14,034 views](https://www.instagram.com/benaskins.official/reel/Cw-ri5rtntU/?hl=en)
638. [14,022 views](https://www.instagram.com/benaskins.official/reel/CwsqHZaNoFR/?hl=en)
639. [14,004 views](https://www.instagram.com/benaskins.official/reel/CxBFMjCtVJu/?hl=en)
640. [13,999 views](https://www.instagram.com/benaskins.official/reel/CwQSxZINsNW/?hl=en)
641. [13,979 views](https://www.instagram.com/benaskins.official/reel/Cwk4j7CtaMD/?hl=en)
642. [13,907 views](https://www.instagram.com/benaskins.official/reel/Cv7xdn0tUev/?hl=en)
643. [13,851 views](https://www.instagram.com/benaskins.official/reel/Cvm9o3cN7rJ/?hl=en)
644. [13,816 views](https://www.instagram.com/benaskins.official/reel/CvaW-UjN1UO/?hl=en)
645. [13,812 views](https://www.instagram.com/benaskins.official/reel/Cs4BZYqLheF/?hl=en)
646. [13,780 views](https://www.instagram.com/benaskins.official/reel/CtZe4ObsigQ/?hl=en)
647. [13,771 views](https://www.instagram.com/benaskins.official/reel/CtuEupNMxf1/?hl=en)
648. [13,770 views](https://www.instagram.com/benaskins.official/reel/Ct9iDaXM1Yw/?hl=en)
649. [13,767 views](https://www.instagram.com/benaskins.official/reel/CxQoGYgNppC/?hl=en)
650. [13,674 views](https://www.instagram.com/benaskins.official/reel/Cv2mek5I7Wc/?hl=en)
651. [13,626 views](https://www.instagram.com/benaskins.official/reel/CxDQID1qlOE/?hl=en)
652. [13,622 views](https://www.instagram.com/benaskins.official/reel/CtrkoeuRyJg/?hl=en)
653. [13,613 views](https://www.instagram.com/benaskins.official/reel/CwIg1KnNfju/?hl=en)
654. [13,565 views](https://www.instagram.com/benaskins.official/reel/Cu2NtzJMrDd/?hl=en)
655. [13,552 views](https://www.instagram.com/benaskins.official/reel/Ct1s85Uu1wZ/?hl=en)
656. [13,521 views](https://www.instagram.com/benaskins.official/reel/CtCOIZPu_pD/?hl=en)
657. [13,490 views](https://www.instagram.com/benaskins.official/reel/Cs1bbaNt-fZ/?hl=en)
658. [13,459 views](https://www.instagram.com/benaskins.official/reel/CxGcl3JNu7k/?hl=en)
659. [13,446 views](https://www.instagram.com/benaskins.official/reel/CuFYpqerJf8/?hl=en)
660. [13,445 views](https://www.instagram.com/benaskins.official/reel/Cu4xmyqLTh2/?hl=en)
661. [13,434 views](https://www.instagram.com/benaskins.official/reel/Cv-R_BKtWzV/?hl=en)
662. [13,413 views](https://www.instagram.com/benaskins.official/reel/CthR7ayNhXA/?hl=en)
663. [13,390 views](https://www.instagram.com/benaskins.official/reel/Cvx0N3ytTbh/?hl=en)
664. [13,370 views](https://www.instagram.com/benaskins.official/reel/CwiU4q1NX6N/?hl=en)
665. [13,340 views](https://www.instagram.com/benaskins.official/reel/CvsCE-BN8nJ/?hl=en)
666. [13,314 views](https://www.instagram.com/benaskins.official/reel/CvsP_K8tPms/?hl=en)
667. [13,314 views](https://www.instagram.com/benaskins.official/reel/CuUzbe9M1vC/?hl=en)
668. [13,290 views](https://www.instagram.com/benaskins.official/reel/Ctma3AkrDsm/?hl=en)
669. [13,217 views](https://www.instagram.com/benaskins.official/reel/CupTF6RMqpA/?hl=en)
670. [12,891 views](https://www.instagram.com/benaskins.official/reel/Cv0CfUON72h/?hl=en)
671. [12,873 views](https://www.instagram.com/benaskins.official/reel/CvP5eqTNNmT/?hl=en)
672. [12,857 views](https://www.instagram.com/benaskins.official/reel/Cu7Vu2sx59q/?hl=en)
673. [12,751 views](https://www.instagram.com/benaskins.official/reel/CviAYxStmB2/?hl=en)
674. [12,621 views](https://www.instagram.com/benaskins.official/reel/CvC2dRhNcLP/?hl=en)
675. [12,570 views](https://www.instagram.com/benaskins.official/reel/CvAbZsJtcrR/?hl=en)
676. [12,532 views](https://www.instagram.com/benaskins.official/reel/CuKFktINl3c/?hl=en)
677. [12,513 views](https://www.instagram.com/benaskins.official/reel/Cuzm0i8tmwP/?hl=en)
678. [12,417 views](https://www.instagram.com/benaskins.official/reel/Cw49BGqKX_6/?hl=en)
679. [12,392 views](https://www.instagram.com/benaskins.official/reel/CtounLSR2Q0/?hl=en)
680. [12,246 views](https://www.instagram.com/benaskins.official/reel/CvVE5WqtxAL/?hl=en)
681. [11,942 views](https://www.instagram.com/benaskins.official/reel/CvFpv5Xt67B/?hl=en)
682. [11,931 views](https://www.instagram.com/benaskins.official/reel/CuRiWgUMUnR/?hl=en)
683. [11,900 views](https://www.instagram.com/benaskins.official/reel/Cumr-1Ig4qj/?hl=en)
684. [11,858 views](https://www.instagram.com/benaskins.official/reel/CteqmkLACYH/?hl=en)
685. [11,840 views](https://www.instagram.com/benaskins.official/reel/CvK0WGvt9Cr/?hl=en)
686. [11,677 views](https://www.instagram.com/benaskins.official/reel/CvKIfy6N3V0/?hl=en)
687. [11,581 views](https://www.instagram.com/benaskins.official/reel/Cv7hv_hNUhx/?hl=en)
688. [11,510 views](https://www.instagram.com/benaskins.official/reel/CuPk1ScRiOe/?hl=en)
689. [11,265 views](https://www.instagram.com/benaskins.official/reel/CuuXJdorJKW/?hl=en)
690. [11,219 views](https://www.instagram.com/benaskins.official/reel/CuXWyBVNO-1/?hl=en)
691. [11,203 views](https://www.instagram.com/benaskins.official/reel/CvNXEg5NGdZ/?hl=en)
692. [11,156 views](https://www.instagram.com/benaskins.official/reel/CueyMI6L4Sq/?hl=en)
693. [11,126 views](https://www.instagram.com/benaskins.official/reel/CvSEDhwNTCj/?hl=en)
694. [11,051 views](https://www.instagram.com/benaskins.official/reel/CucQsMqtU_V/?hl=en)
695. [10,988 views](https://www.instagram.com/benaskins.official/reel/CsjZ0J_RnYZ/?hl=en)
696. [10,946 views](https://www.instagram.com/benaskins.official/reel/CvcpVPDtowm/?hl=en)
697. [10,689 views](https://www.instagram.com/benaskins.official/reel/CuHwiQJrjEe/?hl=en)
698. [10,641 views](https://www.instagram.com/benaskins.official/reel/CvaDh17tarj/?hl=en)
699. [10,521 views](https://www.instagram.com/benaskins.official/reel/CsrIT8JLOna/?hl=en)
700. [10,059 views](https://www.instagram.com/benaskins.official/reel/Cw7vZMXtS-m/?hl=en)
701. [9,783 views](https://www.instagram.com/benaskins.official/reel/CuhpEOGNk6E/?hl=en)
702. [9,484 views](https://www.instagram.com/benaskins.official/reel/Csl-2-juUg3/?hl=en)
703. [9,365 views](https://www.instagram.com/benaskins.official/reel/Csgrs8-AaCA/?hl=en)
704. [8,971 views](https://www.instagram.com/benaskins.official/reel/Csd3lAWKO0S/?hl=en)
705. [8,643 views](https://www.instagram.com/benaskins.official/reel/CsbrLYxq5z6/?hl=en)
706. [8,009 views](https://www.instagram.com/benaskins.official/reel/Cr78IpTMT-V/?hl=en)
707. [7,950 views](https://www.instagram.com/benaskins.official/reel/CsT9aDzuSoS/?hl=en)
708. [7,374 views](https://www.instagram.com/benaskins.official/reel/CsMAhXRqpxj/?hl=en)
709. [6,855 views](https://www.instagram.com/benaskins.official/reel/CsHE2ZoqHqm/?hl=en)
710. [6,615 views](https://www.instagram.com/benaskins.official/reel/Cr8tHYBMC0l/?hl=en)
711. [6,609 views](https://www.instagram.com/benaskins.official/reel/CsB7S-3qWOp/?hl=en)
712. [6,602 views](https://www.instagram.com/benaskins.official/reel/Cr-fRgoKahL/?hl=en)
713. [6,410 views](https://www.instagram.com/benaskins.official/reel/Cr_WdiYKaJQ/?hl=en)
714. [5,475 views](https://www.instagram.com/benaskins.official/reel/Cr2w7DsKE_P/?hl=en)
715. [5,322 views](https://www.instagram.com/benaskins.official/reel/Cr1DLOhq3JO/?hl=en)
716. [5,286 views](https://www.instagram.com/benaskins.official/reel/Cr3guLorctw/?hl=en)
717. [4,818 views](https://www.instagram.com/benaskins.official/reel/Cr0MKF_KQ-x/?hl=en)
718. [4,807 views](https://www.instagram.com/benaskins.official/reel/CrvCiVMKWvE/?hl=en)
719. [4,483 views](https://www.instagram.com/benaskins.official/reel/Crp46WMqeEL/?hl=en)
720. [4,329 views](https://www.instagram.com/benaskins.official/reel/Crqei9CqClu/?hl=en)
721. [4,235 views](https://www.instagram.com/benaskins.official/reel/CrnUK3fqE4i/?hl=en)
722. [4,085 views](https://www.instagram.com/benaskins.official/reel/CrjBhd1qNRn/?hl=en)
723. [4,039 views](https://www.instagram.com/benaskins.official/reel/Crd3_0bqia2/?hl=en)
724. [4,011 views](https://www.instagram.com/benaskins.official/reel/CrkvXb8KbVK/?hl=en)
725. [4,001 views](https://www.instagram.com/benaskins.official/reel/CrlRu23KQ-_/?hl=en)
726. [3,937 views](https://www.instagram.com/benaskins.official/reel/CriKiX2KG2K/?hl=en)
727. [3,909 views](https://www.instagram.com/benaskins.official/reel/CrfRKwlKBl4/?hl=en)
728. [3,866 views](https://www.instagram.com/benaskins.official/reel/CrgcxihKjDD/?hl=en)</file><file path="scripts/package.json">{
  &quot;name&quot;: &quot;instagram-sorter&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;type&quot;: &quot;module&quot;,
  &quot;scripts&quot;: {
    &quot;sort&quot;: &quot;node sortInstagramPosts.js&quot;,
    &quot;generate-links&quot;: &quot;node generateInstagramLinks.js&quot;
  }
}</file><file path="styles/modules/animations.css">/*
 * ANIMATIONS
 * Part of the theme-aware styling system
 * Auto-generated on 2025-04-13T10:04:27.554Z
 */
⋮----
/* ==========================================
   ANIMATIONS
   ========================================== */
⋮----
/* Define keyframes */
⋮----
/* Animation classes */
.animate-float-slow {
⋮----
.animate-float-medium {
⋮----
.animate-float-fast {
⋮----
.animate-float {
⋮----
.animate-float-gentle {
⋮----
.animate-fadeIn {
⋮----
.animate-ripple {
⋮----
.animate-spin-slow {
⋮----
.animate-marquee {
⋮----
.animate-marquee-vertical {
⋮----
/* Theme-aware floating classes */
.opacity-theme-float {
⋮----
.bg-theme-float-primary {
⋮----
.bg-theme-float-secondary {
⋮----
.bg-theme-float-accent {
⋮----
.bg-theme-radial-glow {</file><file path="styles/modules/base-elements.css">/*
 * BASE-ELEMENTS
 * Part of the theme-aware styling system
 * Auto-generated on 2025-04-13T10:04:27.553Z
 */
⋮----
/* ==========================================
   BASE HTML ELEMENTS
   ========================================== */
html {
⋮----
body {
⋮----
h1 {
⋮----
h2 {
⋮----
h3 {
⋮----
h4 {
⋮----
h5 {
⋮----
h6 {
⋮----
p {
⋮----
a {
⋮----
/* Responsive Header Sizes (Aligned with Tailwind Breakpoints) */
/* lg: Screens &lt; 1024px */
⋮----
h1 { font-size: 4.5rem; }
h2 { font-size: 3.5rem; }
h3 { font-size: 2.5rem; }
h4 { font-size: 1.8rem; }
h5 { font-size: 1.4rem; }
h6 { font-size: 1.15rem; }
⋮----
/* md: Screens &lt; 768px */
⋮----
h1 { font-size: 3.5rem; line-height: 1.1; }
h2 { font-size: 2.8rem; }
h3 { font-size: 2.2rem; }
h4 { font-size: 1.7rem; }
h5 { font-size: 1.3rem; }
h6 { font-size: 1.1rem; }
⋮----
/* sm: Screens &lt; 640px */
⋮----
h1 { font-size: 2.8rem; line-height: 1.1; }
h2 { font-size: 2.2rem; }
h3 { font-size: 1.8rem; }
h4 { font-size: 1.5rem; }
h5 { font-size: 1.2rem; }
h6 { font-size: 1.05rem; }</file><file path="styles/modules/components.css">/*
 * COMPONENTS
 * Part of the theme-aware styling system
 * Auto-generated on 2025-04-13T10:04:27.556Z
 */
⋮----
/* ==========================================
   COMPONENT STYLES
   ========================================== */
.vs-btn-primary-gradient {
⋮----
.vs-btn-primary-gradient-hover {
⋮----
.vs-btn-secondary-gradient {
⋮----
.vs-btn-secondary-gradient-hover {
⋮----
.vs-btn-vibrant-gradient {
⋮----
.vs-btn-vibrant-gradient-hover {
⋮----
.vs-btn-destructive-gradient {
⋮----
.vs-btn-destructive-gradient-hover {
⋮----
.btn {
⋮----
/* Already using theme-shadow-btn variable which includes glow in dark mode */
⋮----
.card {
⋮----
/* Already using theme-shadow-card which includes proper glow */
⋮----
.nav {
⋮----
.module {
⋮----
/* Already using theme-shadow-sm which includes proper glow */
⋮----
.gradient-text {
⋮----
.hover-bubbly {
⋮----
.vs-float-element-light-1 {
⋮----
.vs-float-element-light-2 {
⋮----
.vs-float-element-light-1,
⋮----
.vs-float-element-dark-1 {
⋮----
.vs-float-element-dark-2 {
⋮----
.vs-float-element-dark-1,
⋮----
.vs-card-shadow {
⋮----
.vs-card-shadow:hover {
⋮----
.vs-card-shadow, [data-theme=&quot;dark&quot;] .vs-card-shadow {
⋮----
.vs-card-shadow:hover, [data-theme=&quot;dark&quot;] .vs-card-shadow:hover {
⋮----
.vs-carousel-container {
⋮----
.vs-carousel-container, [data-theme=&quot;dark&quot;] .vs-carousel-container {
⋮----
.vs-carousel-slide {
⋮----
.vs-carousel-slide, [data-theme=&quot;dark&quot;] .vs-carousel-slide {
⋮----
.vs-carousel-slide:hover {
⋮----
.vs-carousel-slide:hover, [data-theme=&quot;dark&quot;] .vs-carousel-slide:hover {
⋮----
.vs-fade-overlay-light {
⋮----
.vs-fade-overlay-dark {
⋮----
.vs-depth-bg-dark {
⋮----
.vs-accent-badge {
⋮----
.vs-accent-badge, [data-theme=&quot;dark&quot;] .vs-accent-badge {
⋮----
.vs-carousel-btn {
⋮----
.vs-carousel-btn:hover {
⋮----
.vs-carousel-btn, [data-theme=&quot;dark&quot;] .vs-carousel-btn {
⋮----
.vs-carousel-btn:hover, [data-theme=&quot;dark&quot;] .vs-carousel-btn:hover {
⋮----
.vs-section-light {
⋮----
.vs-section-light, [data-theme=&quot;dark&quot;] .vs-section-light {
⋮----
.vs-section-dark {
⋮----
.vs-section-dark, [data-theme=&quot;dark&quot;] .vs-section-dark {
⋮----
.vs-slide-btn {
⋮----
.vs-slide-btn:hover {
⋮----
.vs-slide-btn, [data-theme=&quot;dark&quot;] .vs-slide-btn {
⋮----
.vs-slide-btn:hover, [data-theme=&quot;dark&quot;] .vs-slide-btn:hover {
⋮----
.vs-testimonial-container {
⋮----
.vs-testimonial-container, [data-theme=&quot;dark&quot;] .vs-testimonial-container {
⋮----
.vs-testimonial-accent {
⋮----
.vs-testimonial-accent, [data-theme=&quot;dark&quot;] .vs-testimonial-accent {
⋮----
.vs-testimonial-dot {
⋮----
.vs-testimonial-dot:hover {
⋮----
.vs-testimonial-dot-active {
⋮----
.vs-testimonial-dot-active, [data-theme=&quot;dark&quot;] .vs-testimonial-dot-active {
⋮----
.vs-navbar {
⋮----
.vs-navbar, [data-theme=&quot;dark&quot;] .vs-navbar {
⋮----
.vs-navbar-glass {
⋮----
.vs-navbar-glass, [data-theme=&quot;dark&quot;] .vs-navbar-glass {
⋮----
.vs-logo {
⋮----
.vs-logo-primary {
⋮----
.vs-logo-primary, [data-theme=&quot;dark&quot;] .vs-logo-primary {
⋮----
.vs-logo:hover {
⋮----
.vs-logo:hover, [data-theme=&quot;dark&quot;] .vs-logo:hover {
⋮----
.vs-text-gradient-orange {
⋮----
.vs-text-gradient-teal {
⋮----
.vs-text-gradient-nav-title{
⋮----
.dark .vs-text-gradient-nav-title {
⋮----
.dark .vs-text-gradient-purple {
⋮----
.vs-float-orange {
⋮----
.vs-float-teal {
⋮----
.vs-gradient-orange {
⋮----
.vs-gradient-teal {
⋮----
.vs-gradient-coral-red {
⋮----
.vs-gradient-primary-accent {
⋮----
.vs-gradient-orange-diagonal {
⋮----
.vs-gradient-teal-diagonal {
⋮----
.vs-gradient-coral-diagonal {
⋮----
.vs-card-gradient-light {
⋮----
.vs-card-gradient-dark {
⋮----
.vs-module-gradient-light {
⋮----
.vs-module-gradient-dark {
⋮----
.vs-gradient-coral-orange {
⋮----
.vs-gradient-navy-deep {
⋮----
.vs-gradient-navy-ultra-deep {
⋮----
.vs-gradient-navy-black {
⋮----
.vs-gradient-fade-orange {
⋮----
.animate-float-slow {
⋮----
.animate-float-medium {
⋮----
.animate-fadeIn {</file><file path="styles/modules/dark-mode.css">/*
 * DARK-MODE
 * Part of the theme-aware styling system
 * Auto-generated on 2025-04-13T10:04:27.550Z
 */
⋮----
/* =================================================
   DARK MODE THEME OVERRIDES - ENHANCED VISUAL STYLE
   ================================================= */
⋮----
/* 
 * Dark mode overrides using the data-theme attribute selector
 * Only override the theme-aware variables that need to change
 */
.dark, [data-theme=&quot;dark&quot;] {
⋮----
/* Background colors for dark mode - rich navy colors */
⋮----
/* Enhanced gradient with more richness for dark mode */
⋮----
/* Card colors for dark mode with subtle gradients */
⋮----
/* Module backgrounds with gradients for dark mode */
⋮----
/* Enhanced shadows for dark mode - more depth */
⋮----
/* Subtle glow effects for dark mode */
⋮----
/* Text colors for dark mode */
⋮----
/* Primary colors - brighter and more vibrant in dark mode */
⋮----
/* Secondary colors - brighter in dark mode */
⋮----
/* UI Element colors */
⋮----
/* Grid patterns - subtle in dark mode */
⋮----
/* Enhanced HUD Colors */
--hud-teal: var(--secondary-blue); /* #387292 */
--hud-coral: var(--accent-red); /* #DE6B59 */
--hud-navy: var(--secondary-blue-dark); /* #122E3B */
--hud-red: var(--accent-red-darker); /* #B92234 */
--hud-pink: var(--accent-pink-darkmode); /* #FA91A6 */
--hud-orange: var(--primary-orange-darkmode); /* #FEA35D */
--hud-accent-red: var(--accent-red-dark); /* #FF3C54 */
--hud-orange-light: var(--accent-yellow-darkmode); /* #FFD5B5 */
--hud-orange-lighter: var(--accent-peach-dark); /* #FFD79B */
⋮----
/* Theme-aware variables for dark mode */
⋮----
/* Theme text colors - dark mode */
⋮----
/* Theme background colors - dark mode */
⋮----
/* Theme gradient variables - dark mode with rich gradients */
⋮----
/* Theme shadows - enhanced with glows for dark mode */
⋮----
/* Theme floating elements - more visible in dark mode */
⋮----
/* Team section variables - dark mode */
⋮----
/* Theme animation variables - slightly more pronounced in dark mode */
⋮----
/* Theme border colors - subtle for dark mode */
⋮----
/* Theme grid patterns - subtle for dark mode */
⋮----
/* Theme opacity values - enhanced for dark mode */
⋮----
/* Theme pattern color */</file><file path="styles/modules/theme-utilities.css">/*
 * THEME-UTILITIES
 * Part of the theme-aware styling system
 * Auto-generated on 2025-04-13T10:04:27.555Z
 */
⋮----
/* ==========================================
   THEME-AWARE UTILITY CLASSES
   ========================================== */
.text-theme-primary {
⋮----
.text-theme-secondary {
⋮----
.text-theme-tertiary {
⋮----
.text-theme-subtle {
⋮----
.text-theme-accent {
⋮----
.text-theme-error {
⋮----
.text-theme-bg {
⋮----
.text-theme-gradient {
⋮----
.text-theme-custom {
⋮----
/* Custom text color with dynamic theming - specific per instance */
⋮----
.text-theme-primary-light {
⋮----
.text-theme-on-primary {
⋮----
.text-theme-accent-tertiary {
⋮----
.text-theme-accent-secondary {
⋮----
.text-theme-accent-quaternary {
⋮----
.bg-theme-primary {
⋮----
.bg-theme-secondary {
⋮----
.bg-theme-surface {
⋮----
.bg-theme-card {
⋮----
.bg-theme-accent {
⋮----
.bg-theme-error {
⋮----
.bg-theme-bg {
⋮----
.bg-theme-border {
⋮----
.bg-theme-custom {
⋮----
/* Custom background with dynamic theming - specific per instance */
⋮----
.bg-theme-glow {
⋮----
.bg-theme-content {
⋮----
.bg-theme-on {
⋮----
.bg-theme-accent-secondary {
⋮----
.bg-theme-accent-tertiary {
⋮----
.bg-theme-accent-quaternary {
⋮----
.bg-theme-bg-primary {
⋮----
.bg-theme-primary-light {
⋮----
.bg-theme-accent-secondary-light {
⋮----
.bg-theme-primary-hover {
⋮----
.bg-theme-bg-light {
⋮----
.bg-theme-border-light {
⋮----
.bg-theme-pattern {
⋮----
.bg-theme-pattern-light {
⋮----
.bg-theme-pattern-dense {
⋮----
.bg-theme-gradient {
⋮----
.bg-theme-gradient-card {
⋮----
.bg-theme-gradient-primary, [data-theme=&quot;dark&quot;] .bg-theme-gradient-primary {
⋮----
.bg-theme-gradient-secondary, [data-theme=&quot;dark&quot;] .bg-theme-gradient-secondary {
⋮----
.bg-theme-gradient-accent, [data-theme=&quot;dark&quot;] .bg-theme-gradient-accent {
⋮----
.bg-theme-gradient-text, [data-theme=&quot;dark&quot;] .bg-theme-gradient-text {
⋮----
.bg-theme-gradient-overlay-light  {
⋮----
.bg-theme-gradient-overlay-left {
⋮----
.bg-theme-gradient-overlay-right  {
⋮----
.border-theme-light {
⋮----
.border-theme-primary {
⋮----
.border-theme-border {
⋮----
.border-theme-accent {
⋮----
.border-theme-destructive {
⋮----
.border-theme-error {
⋮----
.border-theme-on-primary {
⋮----
.border-theme-accent-secondary {
⋮----
.border-theme-border-medium {
⋮----
.border-theme-border-light {
⋮----
.shadow-theme-sm {
⋮----
.shadow-theme-md {
⋮----
.shadow-theme-lg {
⋮----
.shadow-theme-card:hover, [data-theme=&quot;dark&quot;] .shadow-theme-card:hover,
⋮----
.shadow-theme-btn {
⋮----
.shadow-theme-input {
⋮----
.shadow-theme-glow {
⋮----
.shadow-theme-primary {
⋮----
.shadow-theme-secondary {
⋮----
.shadow-theme-tertiary {
⋮----
.shadow-theme-accent {
⋮----
.shadow-theme-btn-primary, [data-theme=&quot;dark&quot;] .shadow-theme-btn-primary {
⋮----
.shadow-theme-btn-secondary {
⋮----
.shadow-theme-btn-tertiary {
⋮----
.shadow-theme-btn-accent, [data-theme=&quot;dark&quot;] .shadow-theme-btn-accent {
⋮----
.rounded-theme-md {
⋮----
.rounded-theme-lg {
⋮----
.rounded-theme-full {
⋮----
.rounded-theme-sm {
⋮----
.rounded-theme-xl {
⋮----
.rounded-theme-2xl {
⋮----
.transition-theme-fast {
⋮----
.transition-theme-normal {
⋮----
.transition-theme-bounce {
⋮----
.transition-theme-slow {
⋮----
.glow-theme-primary,
⋮----
.glow-theme-secondary {
⋮----
.glow-theme-tertiary {
⋮----
.glow-theme-accent {
⋮----
.glow-theme-blue {
⋮----
.btn-theme-primary:hover, [data-theme=&quot;dark&quot;] .btn-theme-primary:hover {
⋮----
.btn-theme-secondary:hover, [data-theme=&quot;dark&quot;] .btn-theme-secondary:hover {
⋮----
.grid-theme-dot, [data-theme=&quot;dark&quot;] .grid-theme-dot {
⋮----
.grid-theme-line, [data-theme=&quot;dark&quot;] .grid-theme-line {
⋮----
.float-theme-element-primary, [data-theme=&quot;dark&quot;] .float-theme-element-primary {
⋮----
.float-theme-element-secondary, [data-theme=&quot;dark&quot;] .float-theme-element-secondary {
⋮----
.chart-theme-grid, [data-theme=&quot;dark&quot;] .chart-theme-grid {
⋮----
.chart-theme-line-views {
⋮----
.chart-theme-line-followers {
⋮----
.chart-theme-line-engagement {
⋮----
.chart-theme-line-revenue {
⋮----
.chart-theme-area-views {
⋮----
.chart-theme-area-followers {
⋮----
.chart-theme-area-engagement {
⋮----
.chart-theme-area-revenue {
⋮----
.chart-theme-tooltip, [data-theme=&quot;dark&quot;] .chart-theme-tooltip {
⋮----
.eyeball-theme-iris {
⋮----
.eyeball-theme-pupil {
⋮----
.eyeball-theme-highlight {</file><file path="styles/modules/utilities.css">/*
 * UTILITIES
 * Part of the theme-aware styling system
 * Auto-generated on 2025-04-13T10:04:27.557Z
 */
⋮----
/* ==========================================
   UTILITY CLASSES
   ========================================== */
.text-accent {
⋮----
.text-accent-red {
⋮----
.text-primary {
⋮----
.text-secondary {
⋮----
/* VS Bubbly hover utilities */
.hover-bubbly {
.hover-bubbly:hover {
⋮----
.hover-bubbly-sm {
.hover-bubbly-sm:hover {
⋮----
.hover-bubbly-lg {
.hover-bubbly-lg:hover {
⋮----
/* Container and layout */
.container {
⋮----
/* Mobile-optimized container with better margin handling */
.container-mobile {
⋮----
.grid-bg {
⋮----
.dark .grid-bg, [data-theme=&quot;dark&quot;] .grid-bg {
⋮----
.dot-bg {
⋮----
.dark .dot-bg, [data-theme=&quot;dark&quot;] .dot-bg {
⋮----
/* GSAP Animation Support Classes */
.filter-glow-theme {
⋮----
/* Responsive isometric grid and patterns */
.isometric-grid {
⋮----
.dark .isometric-grid, [data-theme=&quot;dark&quot;] .isometric-grid {
⋮----
/* Additional GSAP animation utility classes */
.pain-heading, .pain-desc {
⋮----
/* Body text styles for sections with responsive sizing */
.body-text {
⋮----
.body-text-large {
⋮----
.body-text-sm {
⋮----
/* Mobile spacing utility classes */
⋮----
.section-spacing {
⋮----
.section-spacing-sm {
⋮----
.component-spacing {
⋮----
/* Reduce excessive margins between sections */
.my-40 {
⋮----
/* Ensure proper touch target sizes */
.touch-target {
⋮----
/* Tablet spacing */
⋮----
/* Desktop spacing */
⋮----
/* Basic utility classes */
.center-flex {
⋮----
.shadow-theme-sm {
⋮----
.shadow-theme-md {
⋮----
.shadow-theme-lg {
⋮----
/* Gradient text utility */
.gradient-text {
⋮----
/* Hover effects */
.hover-lift {
.hover-lift:hover {
⋮----
.hover-shadow {
.hover-shadow:hover {
⋮----
/* Additions from MOBILE_OPTIMIZATION_PLAN.md - Phase 1, Step 4 &amp; Phase 2, Step 5 */
⋮----
/* Mobile viewport fixes - simplified to prevent conflicts */
⋮----
/* No html styles here to prevent conflicts with index.html */
⋮----
/* Fix iOS Safari 100vh issue */
.vh-fix {
⋮----
height: 100vh; /* fallback */
⋮----
height: stretch; /* Modern browsers */
⋮----
/* Mobile-Optimized Container Class */
⋮----
/* Responsive spacing classes */
⋮----
/* Mobile-optimized spacing */</file><file path="styles/modules/variables.css">/*
 * VARIABLES
 * Part of the theme-aware styling system
 * Auto-generated on 2025-04-13T10:04:27.548Z
 */
⋮----
/* ==========================================
   VARIABLES
   ========================================== */
@theme: {
:root {
⋮----
/* Chart variables */
⋮----
/* ==========================================
     BASE COLOR PALETTE DEFINITIONS - LIGHT MODE
     ========================================== */
⋮----
/* Background colors */
⋮----
/* Navy backgrounds */
⋮----
/* Primary palette */
⋮----
/* Secondary palette */
⋮----
/* Accent colors */
⋮----
/* Text colors */
⋮----
/* Card colors */
⋮----
/* UI Element colors */
⋮----
/* Neutral shades */
⋮----
/* Common */
--border-radius-sm: 0.5rem; /* 8px */
--border-radius-md: 0.75rem; /* 12px */
--border-radius-lg: 1rem; /* 16px */
--border-radius-xl: 1.5rem; /* 24px */
--border-radius-2xl: 2rem; /* 32px */
⋮----
/* Typography */
⋮----
/* Box Shadows - Light Mode */
⋮----
/* Glow effects - Light Mode (subtle or none) */
⋮----
/* Grid - Light Mode */
⋮----
/* Transitions */
⋮----
/* Module backgrounds */
⋮----
/* ==========================================
     THEME-AWARE VARIABLES - LIGHT MODE DEFAULTS
     ========================================== */
⋮----
/* Theme text colors */
⋮----
/* Theme background colors */
⋮----
/* Theme gradient variables */
⋮----
/* Extended Module HUD Palette */
--hud-teal: var(--secondary-teal); /* #387292 */
--hud-coral: var(--accent-coral); /* #DE6B59 */
--hud-navy: var(--secondary-blue); /* #122E3B */
--hud-red: var(--accent-red); /* #B92234 */
--hud-pink: var(--accent-pink); /* #FA91A6 */
--hud-orange: var(--primary-orange); /* #FEA35D */
--hud-accent-red: var(--accent-red-dark); /* #FF3C54 */
--hud-orange-light: var(--accent-yellow); /* #FFD5B5 */
--hud-orange-lighter: var(--accent-peach-light); /* #FFD79B */
⋮----
/* Theme accent colors */
⋮----
/* Theme shadows */
⋮----
/* Theme floating elements */
⋮----
/* Team section variables */
⋮----
/* Theme animation variables */
⋮----
/* Theme border colors */
⋮----
/* Theme border radius */
⋮----
/* Theme grid patterns */
⋮----
/* Theme opacity values */
⋮----
/* Theme card styles */
⋮----
/* Pattern variables */
⋮----
/* Eyeball component variables */
⋮----
/* Radix UI components */
⋮----
/* Reset for common variables */</file><file path="styles/custom-text.css">/* Custom text classes for better body text */
⋮----
.body-text {
⋮----
font-size: 1.125rem; /* text-lg */
line-height: 1.75; /* leading-relaxed */
font-weight: 500; /* font-medium */
⋮----
font-size: 1.25rem; /* md:text-xl */
⋮----
font-size: 1.5rem; /* lg:text-2xl */
⋮----
.body-text-sm {
⋮----
font-size: 1rem; /* text-base */
⋮----
font-size: 1.125rem; /* md:text-lg */
⋮----
.body-text-large {
⋮----
font-size: 1.25rem; /* text-xl */
⋮----
font-size: 1.5rem; /* md:text-2xl */
⋮----
font-size: 1.875rem; /* lg:text-3xl */
⋮----
/* Headline emphasis for second part of headers */
.headline-emphasis {
⋮----
font-weight: 600; /* font-semibold */
⋮----
/* Main paragraph styling for landing page */
.landing-paragraph {
⋮----
max-width: 65ch; /* max-w-prose */
margin-bottom: 1.5rem; /* mb-6 */</file><file path="styles/direct-colors.css">/* Direct color utility classes to bypass Tailwind v4 issues with CSS variables */
⋮----
/* Background color utilities */
.bg-primary-orange {
.bg-primary-orange-hover {
.bg-secondary-teal {
.bg-accent-coral {
.bg-accent-red {
.bg-cream {
.bg-navy {
⋮----
/* Text color utilities */
.text-primary-orange {
.text-secondary-teal {
.text-accent-coral {
.text-accent-red {
.text-navy {
.text-cream {
⋮----
/* Border color utilities */
.border-primary-orange {
.border-secondary-teal {
.border-accent-coral {
.border-accent-red {
⋮----
/* Gradient utilities */
.bg-gradient-primary {
.bg-gradient-secondary {
.bg-gradient-accent {
.bg-gradient-cream {
.bg-gradient-navy {
⋮----
/* Text with gradient */
.text-gradient-primary {
.text-gradient-accent {</file><file path="styles/index.css">/* 
 * THEME-AWARE STYLING SYSTEM - MODULAR VERSION
 * Auto-generated on 2025-04-13T10:04:27.558Z
 *
 * This file imports all modular CSS components in the correct order.
 * Do not modify this file manually.
 */
⋮----
/* Define dark mode variant using Tailwind v4 custom variant approach */</file><file path="styles/modulehud.css">/* ModuleHUD Component CSS Variables */
⋮----
/* Base layout values that can be adjusted for different themes */
:root {
⋮----
/* Layout variables */
⋮----
/* Floating elements for ModuleHUD */
⋮----
/* Background styles */
⋮----
/* Dark mode overrides */
@layer base {
⋮----
[data-theme=&quot;dark&quot;] {
⋮----
/* Adjust spacing or sizing as needed for dark mode */
⋮----
/* Enhanced floating elements for dark mode */
⋮----
/* Dark mode background styles */
⋮----
/* ModuleHUD-specific utility classes */
.bg-theme-gradient-subtle {
⋮----
.bg-theme-bg-secondary {
⋮----
.bg-theme-bg-surface {
⋮----
/* ModuleHUD Animation Utilities */
⋮----
.animate-float-slow-rotate {
⋮----
/* Add any additional ModuleHUD-specific styles below */</file><file path="styles/README.md"># Modular CSS Structure

This directory contains the modularized CSS for the Vertical Shortcut theme system.

## Directory Structure

- `index.css`: Main entry point that imports all modules
- `modules/`: Contains individual CSS modules

## Modules

- `variables.css`: variables styles
- `dark-mode.css`: dark mode styles
- `base-elements.css`: base elements styles
- `animations.css`: animations styles
- `theme-utilities.css`: theme utilities styles
- `components.css`: components styles
- `utilities.css`: utilities styles

## How to Use

Import the main CSS file in your application entry point:

```javascript
import &apos;./styles/index.css&apos;;
```

## Development

When making style changes:

1. Modify the appropriate module file in `modules/`
2. Test changes in both light and dark mode
3. Ensure theme-aware variables are used consistently

For large-scale changes, consult the CSS refactoring documentation first.

DO NOT edit the `index.css` file directly, as it&apos;s auto-generated.</file><file path="styles/utils.css">@utility glass-1 {
@utility glass-2 {
@utility glass-3 {
@utility glass-4 {
@utility glass-5 {
⋮----
/* Fade effects */
@utility fade-x {
@utility fade-y {
@utility fade-top {
@utility fade-bottom {
@utility fade-top-lg {
@utility fade-bottom-lg {
@utility fade-left {
@utility fade-right {
@utility fade-left-lg {
@utility fade-right-lg {</file><file path="styles/week-by-week.css">/* week-by-week.css */
/* Special styling for the Course Timeline component */
⋮----
/* Golden ratio grid classes */
.grid-cols-golden-ratio {
⋮----
grid-template-columns: 38.2% 61.8%; /* The golden ratio: approximately 0.382 : 0.618 */
⋮----
/* Timeline-specific animations */
⋮----
/* Timeline container styling */
.timeline-container {
⋮----
overflow: visible; /* Allow elements to be visible outside container */
padding-top: 16px; /* Add padding to the top to prevent cutoff */
margin-top: 16px; /* Additional margin for safe spacing */
⋮----
/* Timeline progress bar with gradient */
.timeline-progress-bar {
⋮----
/* Timeline section responsive adjustments */
⋮----
.timeline-circle {
⋮----
transform: translate(0, -50%) !important; /* Only translate vertically on mobile */
⋮----
.timeline-progress {
⋮----
transform: none !important; /* Reset transform on mobile */
⋮----
/* Decorative timeline elements */
.timeline-corner-accent {
⋮----
/* Enhanced floating elements */
.timeline-float {
⋮----
/* Decorative element animation */
⋮----
/* Decorative week square */
.week-visual-element {
⋮----
.week-visual-element:hover {
⋮----
/* Timeline card hover effects with enhanced interactivity */
.timeline-card {
⋮----
.timeline-card:hover {
⋮----
/* Week module colors */
.week-0-circle { background: var(--hud-teal) !important; }
.week-1-circle { background: var(--primary-orange) !important; }
.week-2-circle { background: var(--hud-coral) !important; }
.week-3-circle { background: var(--accent-coral) !important; }
.week-4-circle { background: var(--secondary-teal) !important; }
.week-5-circle { background: var(--accent-pink) !important; }
.week-6-circle { background: var(--accent-yellow) !important; }
.week-7-circle { background: var(--hud-red) !important; }
.week-8-circle { background: var(--secondary-teal-light) !important; }
.week-9-10-circle { background: var(--primary-orange-light) !important; }
.week-10plus-circle { background: var(--hud-orange) !important; }
⋮----
/* Week module card border colors */
.week-0-card { border-color: var(--hud-teal) !important; }
.week-1-card { border-color: var(--primary-orange) !important; }
.week-2-card { border-color: var(--hud-coral) !important; }
.week-3-card { border-color: var(--accent-coral) !important; }
.week-4-card { border-color: var(--secondary-teal) !important; }
.week-5-card { border-color: var(--accent-pink) !important; }
.week-6-card { border-color: var(--accent-yellow) !important; }
.week-7-card { border-color: var(--hud-red) !important; }
.week-8-card { border-color: var(--secondary-teal-light) !important; }
.week-9-10-card { border-color: var(--primary-orange-light) !important; }
.week-10plus-card { border-color: var(--hud-orange) !important; }
⋮----
/* Week number gradient text fix */
.week-title {
⋮----
opacity: 0; /* Start hidden for animation */
font-weight: 900 !important; /* Extra bold */
⋮----
/* Make split text words visible for the week title */
.week-title .word {
⋮----
/* Reasonable text sizes for week numbers */
⋮----
/* LARGER text for week titles */
.week-heading {
⋮----
/* Improved content text and formatting */
.content p {
⋮----
/* Highlighted text within content */
.highlight-text {
⋮----
.highlight-text::before {
⋮----
/* Week bullet points */
.week-bullets {
⋮----
.week-bullets li {
⋮----
.week-bullets li::before {
⋮----
/* Week icons */
.week-icon {
⋮----
/* Founder tips */
.founder-tip {
⋮----
.founder-tip::before {
⋮----
/* Visual separators between weeks */
.timeline-week-separator {
⋮----
/* Enhanced week module indicators */
.timeline-week-modules {
⋮----
/* Groovy timeline background for light/dark modes with enhanced textures */
.timeline-groovy-bg {
⋮----
/* Light mode gradient - enhanced warm gradient with texture */
⋮----
/* Create enhanced dot pattern overlay */
.timeline-groovy-bg::before {
⋮----
/* Dark mode variant with enhanced texture */
.dark .timeline-groovy-bg {
⋮----
/* Dark mode enhanced pattern */
.dark .timeline-groovy-bg::before {</file><file path="types/courseTypes.ts">export interface ModuleData {
  id: string;
  title: string;
  subtitle?: string;
  color: string;
  founderMustWatch: boolean;
  featured: boolean;
  duration: number;
  thumbnail?: string;
  submodules?: Submodule[];
  success?: boolean;
  error?: boolean;
}
⋮----
export interface SectionData {
  id: string;
  name: string;
  number: number;
  color: string;
  type: &quot;bigSquare&quot; | &quot;normalSquare&quot;;
  size: &quot;small&quot; | &quot;medium&quot; | &quot;large&quot;;
  featured?: boolean;
  displayKey?: string;
  modules: ModuleData[];
}
⋮----
export interface Submodule {
  id: string;
  title: string;
  duration: number;
  completed?: boolean;
  description?: string;
  highValue?: boolean;
}
⋮----
export interface Section {
  id: string;
  name: string;
  number: number;
  color: string;
  type: string;
  modules: ModuleData[];
}</file><file path="types/parallax.d.ts">/**
 * Type definitions for parallax scrolling utility
 */
⋮----
// Extend HTMLElement to include data attributes used for parallax scrolling
interface HTMLElementWithParallax extends HTMLElement {
  dataset: {
    teamParallax?: string;
    speed?: string;
    lag?: string;
    direction?: &apos;up&apos; | &apos;down&apos; | &apos;left&apos; | &apos;right&apos;;
    originalTransform?: string;
  }
}
⋮----
// Extend the global JSX namespace to include additional attributes
⋮----
interface HTMLAttributes&lt;T&gt; extends React.HTMLAttributes&lt;T&gt; {
    &apos;data-team-parallax&apos;?: boolean | string;
    &apos;data-speed&apos;?: string | number;
    &apos;data-lag&apos;?: string | number;
    &apos;data-direction&apos;?: &apos;up&apos; | &apos;down&apos; | &apos;left&apos; | &apos;right&apos;;
    &apos;data-original-transform&apos;?: string;
  }</file><file path="utils/schema/generators.ts">/* eslint-disable @typescript-eslint/no-explicit-any */
import courseData from &apos;../../../course-data.json&apos;;
import {
  CourseSchema,
  OrganizationSchema,
  FAQPageSchema,
  CourseData,
  VideoObjectSchema,
  VideoPlaylistSchema,
  CourseReference
} from &apos;./types&apos;;
⋮----
// Assert the type of courseData
⋮----
// Calculate total duration in minutes
const getTotalDuration = () =&gt;
⋮----
// Get all module titles for teaches array
const getAllModuleTitles = () =&gt;
⋮----
/**
 * Generates JSON-LD schema for Course
 * @see https://schema.org/Course
 */
export function CourseJsonLd(): string
⋮----
&quot;timeRequired&quot;: `PT${totalDuration}M`, // ISO 8601 duration in minutes
⋮----
&quot;duration&quot;: &quot;PT10W&quot;, // 10 weeks
⋮----
/**
 * Generates JSON-LD schema for Organization
 * @see https://schema.org/Organization
 */
export function OrganizationJsonLd(): string
⋮----
/**
 * Generates JSON-LD schema for FAQPage
 * @see https://schema.org/FAQPage
 */
export function FAQPageJsonLd(): string
⋮----
// Use static FAQs since they&apos;re not in course data
⋮----
/**
 * Generates JSON-LD schema for course videos
 * @see https://schema.org/VideoObject
 */
export function VideoObjectsJsonLd(): string
⋮----
&quot;uploadDate&quot;: &quot;2024-01-01&quot;, // TODO: Add actual upload dates to course data
⋮----
// Create a playlist for each module
⋮----
&quot;uploadDate&quot;: &quot;2024-01-01&quot;, // TODO: Add actual upload dates to course data</file><file path="utils/schema/schema-validator.ts">import { CourseJsonLd, OrganizationJsonLd, FAQPageJsonLd } from &apos;./generators&apos;;
⋮----
interface ValidationResult {
  isValid: boolean;
  errors: string[];
  warnings: string[];
}
⋮----
interface CourseSchema {
  &apos;@type&apos;: string;
  name: string;
  description: string;
  provider: {
    &apos;@type&apos;: string;
    name: string;
  };
}
⋮----
interface OrganizationSchema {
  &apos;@type&apos;: string;
  name: string;
  url: string;
}
⋮----
interface FAQSchema {
  &apos;@type&apos;: string;
  mainEntity: Array&lt;{
    &apos;@type&apos;: string;
    name: string;
    acceptedAnswer: {
      &apos;@type&apos;: string;
      text: string;
    };
  }&gt;;
}
⋮----
/**
 * Validates schema.org JSON-LD implementation
 */
export async function validateSchema(): Promise&lt;ValidationResult&gt;
⋮----
// Validate Course Schema
⋮----
// Validate Organization Schema
⋮----
// Validate FAQ Schema
⋮----
// Log validation results
⋮----
function validateRequiredCourseFields(schema: CourseSchema, errors: string[]): void
⋮----
function validateRequiredOrgFields(schema: OrganizationSchema, errors: string[]): void
⋮----
function validateRequiredFAQFields(schema: FAQSchema, errors: string[]): void</file><file path="utils/schema/types.ts">/**
 * TypeScript interfaces for Schema.org JSON-LD
 * @see https://schema.org/
 */
⋮----
// Course Data Interfaces
export interface CourseData {
  title: string;
  categories: Category[];
}
⋮----
export interface Category {
  id: string;
  name: string;
  color: string;
  sections: Section[];
}
⋮----
export interface Section {
  id: string;
  name: string;
  number: number;
  modules: Module[];
}
⋮----
export interface Module {
  id: string;
  title: string;
  subtitle: string;
  icon: string;
  color: string;
  points: string[];
  thumbnail: string;
  tracks?: string[];
  duration?: number;
  founderMustWatch?: boolean;
  entrepreneurSpecific?: boolean;
  popular?: boolean;
  featured?: boolean;
  submodules: Submodule[];
}
⋮----
export interface Submodule {
  id: string;
  title: string;
  subtitle?: string;
  duration: number | null;
  thumbnail?: string;
  difficulty?: number;
  resources?: string[];
  highValue?: boolean;
  week?: number;
  instructor?: string;
}
⋮----
export interface FAQ {
  question: string;
  answer: string;
}
⋮----
// Schema.org Interfaces
export interface SchemaBase {
  &quot;@context&quot;: &quot;https://schema.org&quot;;
  &quot;@type&quot;: string;
}
⋮----
export interface CourseSchema extends SchemaBase {
  &quot;@type&quot;: &quot;Course&quot;;
  name: string;
  description: string;
  provider: OrganizationSchema;
  timeRequired: string; // ISO 8601 duration
  hasCourseInstance: CourseInstanceSchema;
  offers?: OfferSchema;
  aggregateRating?: AggregateRatingSchema;
  teaches?: string[];
  educationalLevel?: string;
  learningResourceType?: string;
}
⋮----
timeRequired: string; // ISO 8601 duration
⋮----
export interface CourseInstanceSchema {
  &quot;@type&quot;: &quot;CourseInstance&quot;;
  courseMode: string[];
  duration: string; // ISO 8601 duration
  inLanguage: string;
  startDate?: string; // ISO 8601 date
  endDate?: string; // ISO 8601 date
}
⋮----
duration: string; // ISO 8601 duration
⋮----
startDate?: string; // ISO 8601 date
endDate?: string; // ISO 8601 date
⋮----
export interface OrganizationSchema extends SchemaBase {
  &quot;@type&quot;: &quot;Organization&quot;;
  name: string;
  url: string;
  logo: string;
  sameAs?: string[];
  contactPoint?: ContactPointSchema;
  address?: PostalAddressSchema;
}
⋮----
export interface ContactPointSchema {
  &quot;@type&quot;: &quot;ContactPoint&quot;;
  telephone: string;
  contactType: string;
  email?: string;
}
⋮----
export interface PostalAddressSchema {
  &quot;@type&quot;: &quot;PostalAddress&quot;;
  streetAddress: string;
  addressLocality: string;
  addressRegion: string;
  postalCode: string;
  addressCountry: string;
}
⋮----
export interface OfferSchema {
  &quot;@type&quot;: &quot;Offer&quot;;
  price: string;
  priceCurrency: string;
  availability?: &quot;InStock&quot; | &quot;OutOfStock&quot; | &quot;PreOrder&quot;;
  validFrom?: string; // ISO 8601 date
  validThrough?: string; // ISO 8601 date
}
⋮----
validFrom?: string; // ISO 8601 date
validThrough?: string; // ISO 8601 date
⋮----
export interface AggregateRatingSchema {
  &quot;@type&quot;: &quot;AggregateRating&quot;;
  ratingValue: number;
  ratingCount: number;
  bestRating: number;
  worstRating: number;
}
⋮----
export interface FAQPageSchema extends SchemaBase {
  &quot;@type&quot;: &quot;FAQPage&quot;;
  mainEntity: QuestionSchema[];
}
⋮----
export interface QuestionSchema {
  &quot;@type&quot;: &quot;Question&quot;;
  name: string;
  acceptedAnswer: AnswerSchema;
}
⋮----
export interface AnswerSchema {
  &quot;@type&quot;: &quot;Answer&quot;;
  text: string;
}
⋮----
// Video Schema Interfaces
export interface VideoObjectSchema extends SchemaBase {
  &quot;@type&quot;: &quot;VideoObject&quot;;
  name: string;
  description: string;
  thumbnailUrl: string;
  uploadDate: string; // ISO 8601 date
  duration: string; // ISO 8601 duration
  contentUrl?: string;
  embedUrl?: string;
  author?: Partial&lt;OrganizationSchema&gt;;
  publisher?: Partial&lt;OrganizationSchema&gt;;
  inLanguage?: string;
  learningResourceType?: string;
  accessMode?: string[];
  accessibilityFeature?: string[];
  isPartOf?: Partial&lt;CourseSchema&gt;;
}
⋮----
uploadDate: string; // ISO 8601 date
duration: string; // ISO 8601 duration
⋮----
export interface VideoPlaylistSchema extends SchemaBase {
  &quot;@type&quot;: &quot;ItemList&quot;;
  name: string;
  description: string;
  numberOfItems: number;
  itemListElement: Partial&lt;VideoObjectSchema&gt;[];
}
⋮----
// Helper type for simplified course reference
export interface CourseReference extends SchemaBase {
  &quot;@type&quot;: &quot;Course&quot;;
  name: string;
  url: string;
}</file><file path="utils/animation-utils.tsx">import { useEffect, useState } from &apos;react&apos;;
import { gsap } from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
⋮----
/**
 * Custom hook for detecting device type based on viewport width
 * @returns {Object} Device information including isMobile flag
 */
export const useDeviceDetection = () =&gt;
⋮----
const checkDevice = () =&gt;
⋮----
// Initial check
⋮----
// Listen for resizes
⋮----
/**
 * Creates animations with different configurations for mobile and desktop
 * @param {Element} element - Target element for animation
 * @param {Object} animationConfig - Configuration object with mobile/desktop variants
 * @returns {gsap.core.Tween} The created GSAP animation
 */
export const createResponsiveAnimation = (element, animationConfig) =&gt;
⋮----
// Apply device-specific settings
⋮----
// Create and return animation
⋮----
/**
 * Creates ScrollTrigger with different configurations for mobile and desktop
 * @param {Object} config - Configuration object with mobile/desktop variants
 * @returns {ScrollTrigger} The created ScrollTrigger instance
 */
export const createResponsiveScrollTrigger = (config) =&gt;
⋮----
// Apply device-specific settings
⋮----
// Create and return ScrollTrigger
⋮----
/**
 * Optimizes animations for mobile by reducing complexity
 * @param {Element} element - Element to animate
 * @param {Object} options - Animation options
 * @returns {Object} - Mobile-optimized animation configuration
 */
export const optimizeForMobile = (element, options =
⋮----
// Default optimization settings
⋮----
duration: options.duration ? options.duration * 0.8 : 0.5, // Faster animations
ease: &quot;power2.out&quot;, // Simpler easing function
stagger: options.stagger ? options.stagger * 0.7 : 0.1, // Reduced stagger
clearProps: &quot;all&quot;, // Clear props to free memory</file><file path="utils/assetUtils.js">/**
 * Asset Utilities
 * 
 * This utility provides glob-like pattern matching for assets,
 * making it easy to reference images and other assets consistently.
 */
⋮----
// Base path to assets directory
⋮----
// Main logo assets
⋮----
// Add dark version if available
⋮----
/**
 * Maps all assets in a given directory
 * @param {string} directory - Subdirectory within assets
 * @returns {object} Mapped assets
 */
const mapAssetsInDirectory = (directory) =&gt; {
// In a real implementation, this would dynamically import
// all files from the directory using Vite&apos;s import.meta.glob
⋮----
// Example stub implementation
⋮----
// This is where we&apos;d use import.meta.glob in Vite to get all files
// const files = import.meta.glob(&apos;/src/assets/main/*&apos;);
⋮----
// For now, return a placeholder
⋮----
getPath: (filename) =&gt; `${directoryPath}${filename}`
⋮----
/**
 * Get asset path by glob-like pattern
 * @param {string} pattern - Pattern to match (e.g., &quot;main/*.png&quot;)
 * @returns {string[]} Array of matching asset paths
 */
const getAssetsByPattern = (pattern) =&gt; {
// Parse pattern into directory and file pattern
const [directory, filePattern] = pattern.split(&apos;/&apos;);
⋮----
// In a real implementation with Vite, we could do:
// const files = import.meta.glob(`/src/assets/${pattern}`);
// return Object.keys(files);
⋮----
// For now, this is a placeholder
console.log(`Looking for assets matching: ${pattern}`);
⋮----
/**
 * Get a single asset path
 * @param {string} path - Path relative to assets directory
 * @returns {string} Full asset path
 */
const getAssetPath = (path) =&gt; {
⋮----
/**
 * Get logo by type and variant
 * @param {string} type - Logo type (wordmark, oneLine, react)
 * @param {string} variant - Variant (light, dark)
 * @returns {string} Logo path
 */
const getLogo = (type = &apos;wordmark&apos;, variant = &apos;light&apos;) =&gt; {
⋮----
// Map main directory assets
const mainAssets = mapAssetsInDirectory(&apos;main&apos;);</file><file path="utils/image-optimizer.ts">/// &lt;reference types=&quot;vite/client&quot; /&gt;
⋮----
export function optimizeImages(): void
⋮----
// Select all img elements on the page
⋮----
// Skip images that are already optimised or explicitly excluded
⋮----
// Apply lazy loading to defer off‑screen image loading
⋮----
// Async decode for faster rendering
⋮----
// Mark image so we don&apos;t process it again on route changes
⋮----
// eslint-disable-next-line no-console</file><file path="utils/imageMap.js">/**
 * Image Map Utility for Vite/React projects
 * 
 * This utility leverages Vite&apos;s import.meta.glob feature to dynamically
 * import and manage all images in the assets directory.
 */
⋮----
// Import all images from assets directory with an explicit pattern
// The &apos;eager: true&apos; option ensures they&apos;re included in the bundle immediately
const allImages = import.meta.glob([
⋮----
// Log all available images for debugging
console.log(&apos;Available images:&apos;, Object.keys(allImages));
⋮----
// Create a more friendly object structure from the imported images
⋮----
// Process all imported images and organize them by path segments
Object.entries(allImages).forEach(([path, module]) =&gt; {
// Extract the filename without extension
const fileName = path.split(&apos;/&apos;).pop().split(&apos;.&apos;)[0];
⋮----
// Extract the directory path after /assets/
const pathSegments = path.replace(&apos;/src/assets/&apos;, &apos;&apos;).split(&apos;/&apos;);
// Remove the filename from the segments
⋮----
// If the last segment contains a dot, it&apos;s a filename
⋮----
if (lastSegment.includes(&apos;.&apos;)) {
pathSegments.pop();
⋮----
// The full URL of the processed image
⋮----
// Create a flat map for direct filename access
⋮----
// If there are directory segments, create a nested structure
if (pathSegments.length &gt; 0 &amp;&amp; !pathSegments[0].includes(&apos;.&apos;)) {
⋮----
// Create nested objects for each directory
pathSegments.forEach(segment =&gt; {
⋮----
// Store the image URL at the final level
⋮----
// Debug: log the structured image map
console.log(&apos;Structured image map:&apos;, imageMap);
⋮----
/**
 * Get image by direct filename or path segments
 * @param {...string} pathSegments - Path segments or filename
 * @returns {string|null} Image URL or null if not found
 */
const getImage = (...pathSegments) =&gt; {
// Special case: if only one argument and it&apos;s directly in the root map
⋮----
// Navigate through the nested structure
⋮----
console.warn(`Image segment not found: ${segment} in path ${pathSegments.join(&apos;/&apos;)}`);
⋮----
// If it&apos;s a string URL, return it
⋮----
console.warn(`No image found at path: ${pathSegments.join(&apos;/&apos;)}`);
⋮----
/**
 * Get all Clash logos
 * @returns {Object} Object with all Clash logos
 */
const getClashLogos = () =&gt; {
⋮----
light: getImage(&apos;Clash-Wordmark-Light-for-Dark&apos;) || imageMap[&apos;Clash-Wordmark-Light-for-Dark&apos;]
⋮----
light: getImage(&apos;Clash-Logo-One-Line-Light-for-Dark&apos;) || imageMap[&apos;Clash-Logo-One-Line-Light-for-Dark&apos;]
⋮----
/**
 * Add a public URL image that&apos;s not in the assets directory
 * @param {string} id - Identifier for the image
 * @param {string} url - Public URL to the image
 */
const addPublicImage = (id, url) =&gt; {
⋮----
/**
 * Get a list of all available image keys at the root level
 * @returns {string[]} Array of image keys
 */
const getAllImageKeys = () =&gt; {
return Object.keys(imageMap).filter(key =&gt; typeof imageMap[key] === &apos;string&apos;);
⋮----
/**
 * Get all images in a specific directory
 * @param {string} directory - Directory name
 * @returns {Object} Object containing all images in that directory
 */
const getAllInDirectory = (directory) =&gt; {
⋮----
/**
 * Get team member images with rich metadata for dynamic display
 * @param {string} memberName - Name of team member (Joden, Alex, Tia, Aydan)
 * @param {Object} options - Options for image filtering/sorting
 * @param {number} options.limit - Maximum number of images to return
 * @param {boolean} options.includeShared - Include images with multiple people
 * @param {boolean} options.randomize - Randomize the order of images
 * @returns {Array} Array of image objects with metadata
 */
const getTeamImageCollection = (memberName, options = {}) =&gt; {
⋮----
// Standardize member name for matching
const memberNameLower = memberName.toLowerCase();
⋮----
// Get all team images from the All-Team-Images directory
const allTeamImagesDir = getAllInDirectory(&apos;main&apos;)?.[&apos;Meet_The_Team-webp&apos;]?.[&apos;All-Team-Images&apos;] || {};
⋮----
// Convert to array for filtering - filter out entries with problematic filenames like question marks
const allImages = Object.entries(allTeamImagesDir)
.filter(([key]) =&gt; {
// Filter out problematic filenames with characters that might cause issues
return !key.includes(&apos;?&apos;) &amp;&amp; !key.includes(&apos;#&apos;);
⋮----
.map(([key, url]) =&gt; ({
⋮----
// Check if this image belongs primarily to this team member
isPrimary: key.toLowerCase().includes(memberNameLower),
// Check if this image includes this team member at all
includes: key.toLowerCase().includes(memberNameLower),
// Check if image includes multiple team members
isShared: [&apos;joden&apos;, &apos;alex&apos;, &apos;tia&apos;, &apos;aydan&apos;].filter(name =&gt;
name !== memberNameLower &amp;&amp; key.toLowerCase().includes(name)
⋮----
// Estimate size category based on image name hints
sizeHint: key.includes(&apos;crop&apos;) ? &apos;small&apos; :
key.includes(&apos;full&apos;) ? &apos;large&apos; : &apos;medium&apos;
⋮----
// Filter based on team member and options
let filteredImages = allImages.filter(img =&gt; {
// Always include primary images of this team member
⋮----
// Include shared images if option is enabled
⋮----
// Sort by relevance (primary images first, then shared)
filteredImages.sort((a, b) =&gt; {
// Primary images come first
⋮----
// Non-shared images come before shared
⋮----
// Randomize if requested
⋮----
// Keep first 3 most relevant images at the top
const topImages = filteredImages.slice(0, 3);
const restImages = filteredImages.slice(3);
⋮----
// Shuffle the rest
⋮----
const j = Math.floor(Math.random() * (i + 1));
⋮----
// Apply limit
⋮----
filteredImages = filteredImages.slice(0, limit);
⋮----
// Format result with metadata for UI presentation
return filteredImages.map((img, index) =&gt; {
// Calculate suggested display properties based on image characteristics
// Higher values for more visible and larger images
let speed = img.isPrimary ? 0.95 : 0.88 + (Math.random() * 0.1); // Less variation (was 0.15)
let opacity = img.isPrimary ? 1 : 0.85 + (Math.random() * 0.15); // Much higher base opacity (was 0.6)
let scale = img.isPrimary ? 1.2 : 0.9 + (Math.random() * 0.3); // Larger overall scaling (was 0.7)
let zIndex = img.isPrimary ? 5 : 2 + Math.floor(Math.random() * 3);
⋮----
// Adjust based on size hint
⋮----
speed = Math.min(1.1, speed * 1.2);
⋮----
speed = Math.max(0.8, speed * 0.9);
zIndex = Math.max(1, zIndex - 1);
⋮----
// Create a more dynamic &quot;falling&quot; effect with strategic placement
// Keep images away from the center content area
⋮----
// Determine &quot;lane&quot; - keep images primarily on the sides
const lane = Math.floor(Math.random() * 10); // 0-9
⋮----
let horizontalVariation = Math.random() * 10; // 0-10% variation
let opacityFactor = 1.0; // Default full opacity multiplier
⋮----
// Left side - 30% chance
horizontalPosition = horizontalVariation + 5; // 5-15% from left
opacityFactor = 1.0; // Full opacity for side images
⋮----
// Right side - 30% chance
horizontalPosition = 85 - horizontalVariation; // 75-85% from left (i.e., 15-25% from right)
⋮----
// Middle areas - 40% chance, but with strategic placement
⋮----
// Left-center - 20% chance
horizontalPosition = 20 + (horizontalVariation * 1.5); // 20-35% from left
opacityFactor = 0.85; // Slightly reduced opacity
⋮----
// Right-center - 20% chance
horizontalPosition = 65 - (horizontalVariation * 1.5); // 50-65% from left
⋮----
// True center (should be rare due to lane distribution) - excluded from lanes
horizontalPosition = 40 + (Math.random() * 20); // 40-60% (center)
opacityFactor = 0.7; // Much lower opacity for center images
⋮----
// Create vertical &quot;falling&quot; effect with different speeds
// Images higher in the view (lower top %) will move faster when scrolling
const verticalPosition = Math.random() * 80 + 10; // 10-90% from top
⋮----
// Calculate speed based on vertical position
// Higher images (smaller top %) move faster
const speedMultiplier = 1 - (verticalPosition / 100); // 0.1 to 0.9
⋮----
rotate: (index % 2 === 0 ? 1 : -1) * (Math.random() * 5 + 2), // More rotation for dynamic feel
speedMultiplier: 0.8 + (speedMultiplier * 0.4), // Speed between 0.8-1.2
opacityFactor: opacityFactor // Apply strategic opacity
⋮----
// Apply speed based on vertical position for &quot;falling&quot; effect
⋮----
// Apply strategic opacity based on image position
⋮----
// Direction alternates between team members for visual variety
⋮----
// Get halftone image for a team member
const getTeamMemberHalftone = (memberName) =&gt; {
// Try direct match in the member&apos;s specific folder
const directPath = getImage(&apos;main&apos;, &apos;Meet_The_Team-webp&apos;, memberName, `${memberName}-Halftone`);
⋮----
// Try at the root of Meet_The_Team-webp
const rootPath = getImage(&apos;main&apos;, &apos;Meet_The_Team-webp&apos;, `${memberName}-Halftone`);
⋮----
// Fallback
⋮----
// Export utility functions and maps</file><file path="utils/importImages.js">/**
 * Explicit Image Import Utility
 * 
 * This utility explicitly imports images from specific directories,
 * ensuring they&apos;re properly processed by Vite. Use this for avatar images
 * or other folders of images that need to be loaded dynamically.
 */
⋮----
// Import Clash brand assets explicitly
⋮----
// Import creator avatars explicitly from the paths in course-utils.tsx
// Note: These paths need to match exactly with those in course-utils.tsx
⋮----
import jordan2 from &apos;../assets/main/Clients-webp-300px/Jordan2.webp&apos;; // Fixed filename
⋮----
// Create maps for each image category
⋮----
// Map creator avatars by both filename and full path
// This allows for lookups using either the filename or the full path
⋮----
// By filename
⋮----
&apos;Jordan_Schwarzenberger&apos;: jordan2, // Map the missing file to Jordan2
⋮----
// By avatar path as used in course-utils.tsx
⋮----
&apos;/assets/main/Clients-webp-300px/Jordan_Schwarzenberger.webp&apos;: jordan2 // Map to the actual file
⋮----
/**
 * Find an image by its basename (filename without extension)
 * @param {string} basename - The filename without extension
 * @returns {string|undefined} - The image URL or undefined if not found
 */
export function findImageByBasename(basename) {
// Check if the basename is a full path first
⋮----
// Check in brand images
⋮----
// Try to extract just the filename if it&apos;s a path
const filenameMatch = basename.match(/([^/]+)(?:\.\w+)?$/);
⋮----
// Not found
⋮----
/**
 * Register these images with the image mapper
 * @param {Function} addPublicImage - The addPublicImage function from imageMap.js
 */
export function registerWithImageMapper(addPublicImage) {
// Register brand images
Object.entries(brandImages).forEach(([key, url]) =&gt; {
addPublicImage(key, url);
⋮----
// Register avatar images
Object.entries(avatarImages).forEach(([key, url]) =&gt; {
⋮----
console.log(&apos;Explicitly imported images registered with image mapper&apos;);</file><file path="utils/parallaxScroll.ts">/**
 * Ultra-simple, pure CSS-based parallax scrolling effect
 * No JavaScript animation loops, just CSS transform calculations on scroll
 */
⋮----
// Track scroll handler for proper cleanup
⋮----
// Initialize parallax effect
export function initParallax()
⋮----
// Clean up any existing handler
⋮----
// Create a throttled scroll handler
⋮----
// Get all parallax elements
⋮----
// Apply parallax to each element
⋮----
// Get scroll position relative to element&apos;s position
⋮----
// Get parallax settings
⋮----
// Calculate offset (using inverse speed - closer to 1 = less movement)
const factor = (1 - speed) * 100; // Convert to percentage points
⋮----
// Calculate translate values based on direction
⋮----
// Apply transform
⋮----
// Add scroll listener
⋮----
// Initial calculation
⋮----
// Throttle helper to limit execution frequency
function throttle(callback: Function, delay: number)
⋮----
// Clean up parallax effects
export function destroyParallax()
⋮----
// Reset transforms</file><file path="utils/thumbnailMapper.js">/**
 * Thumbnail Mapper Utility
 * 
 * Companion to imageMap.js that specifically handles thumbnails
 * for course modules and submodules, integrating with course-utils.tsx
 */
⋮----
// Database thumbnail path mapping - used to convert relative paths in course-utils.tsx
// to proper Vite imports
⋮----
/**
 * Import specific thumbnails from the public directory for module thumbnails
 */
⋮----
// Import social proof thumbnails directly from the src directory
⋮----
// Map explicitly imported thumbnails
⋮----
// Map social proof thumbnails
⋮----
/**
 * Register thumbnails with the image mapper for consistent access
 */
export function registerThumbnails() {
// Register course thumbnails
Object.entries(thumbnails).forEach(([key, url]) =&gt; {
addPublicImage(key, url);
// Also register with the .webp extension
addPublicImage(`${key}.webp`, url);
// Register with the DB path
addPublicImage(`${DB_THUMBNAIL_BASE}${key}.webp`, url);
⋮----
// Register social proof thumbnails with full paths
Object.entries(viewsThumbnails).forEach(([key, url]) =&gt; {
⋮----
addPublicImage(`${VIEWS_THUMBNAIL_BASE}${key}.webp`, url);
⋮----
console.log(&apos;Course thumbnails registered with image mapper&apos;);
⋮----
/**
 * Get a thumbnail by name, integrating with course-utils.tsx
 * This is a drop-in replacement for getThumbnailPath in course-utils.tsx
 * 
 * @param {string} thumbnailName - The name of the thumbnail
 * @returns {string} - The URL of the thumbnail
 */
export function getThumbnail(thumbnailName) {
⋮----
console.warn(&apos;Missing thumbnail name, using default&apos;);
return thumbnails.the_algorithm; // Fallback to a default image
⋮----
// If the thumbnail already has a full path starting with /src, /public, /assets, or http, return it
if (thumbnailName.startsWith(&apos;/src/&apos;) ||
thumbnailName.startsWith(&apos;/public/&apos;) ||
thumbnailName.startsWith(&apos;/assets/&apos;) ||
thumbnailName.startsWith(&apos;http&apos;)) {
⋮----
// Check if it&apos;s a social proof thumbnail path
if (thumbnailName.startsWith(VIEWS_THUMBNAIL_BASE)) {
const filename = thumbnailName.replace(VIEWS_THUMBNAIL_BASE, &apos;&apos;);
const filenameWithoutExt = filename.split(&apos;.&apos;)[0]; // Remove extension
⋮----
// If it includes assets/ path, extract just the filename
if (thumbnailName.includes(&apos;assets/&apos;)) {
const filenameMatch = thumbnailName.match(/([^/]+)(?:\.\w+)?$/);
⋮----
// Remove extension if present
if (thumbnailName.endsWith(&apos;.webp&apos;) ||
thumbnailName.endsWith(&apos;.jpg&apos;) ||
thumbnailName.endsWith(&apos;.png&apos;) ||
thumbnailName.endsWith(&apos;.jpeg&apos;)) {
thumbnailName = thumbnailName.substring(0, thumbnailName.lastIndexOf(&apos;.&apos;));
⋮----
// Check if we have this thumbnail in our explicitly imported lists
⋮----
// Try to get it from the image map
const mappedImage = getImage(thumbnailName);
⋮----
// Enhanced thumbnail debugging information
console.debug(`Thumbnail attempted: ${thumbnailName}, trying fallback strategies...`);
⋮----
// Check if it might be a social proof thumbnail
if (thumbnailName.includes(&apos;-&apos;) &amp;&amp; (
thumbnailName.startsWith(&apos;JW-&apos;) ||
thumbnailName.startsWith(&apos;CM-&apos;) ||
thumbnailName.startsWith(&apos;JC-&apos;) ||
thumbnailName.startsWith(&apos;CD-&apos;) ||
thumbnailName.startsWith(&apos;BA-&apos;) ||
thumbnailName.startsWith(&apos;JS-&apos;))) {
⋮----
console.debug(`Using social proof thumbnail: ${fullPath}`);
⋮----
// Special case for module mapping - convert hyphenated names to underscore format
const underscoreName = thumbnailName.replace(/-/g, &apos;_&apos;);
⋮----
console.debug(`Converting hyphenated name &quot;${thumbnailName}&quot; to underscore format: &quot;${underscoreName}&quot;`);
// Check if the underscore version exists in thumbnails map
⋮----
console.debug(`Found underscore match in thumbnails map: ${underscoreName}`);
⋮----
// Use the same path construction logic as in course-utils.tsx
const pathWithExtension = thumbnailName.endsWith(&apos;.webp&apos;) ||
⋮----
thumbnailName.endsWith(&apos;.jpeg&apos;) ?
⋮----
console.debug(`Using generic thumbnail path: ${fullPath}`);
⋮----
/**
 * Get a thumbnail for the social proof section
 * 
 * @param {string} thumbnailPath - The path from the views-thumbnails folder 
 * @returns {string} - The URL of the thumbnail
 */
export function getViewsThumbnail(thumbnailPath) {
// Handle if the full path is provided
if (thumbnailPath.startsWith(VIEWS_THUMBNAIL_BASE)) {
const basename = thumbnailPath.replace(VIEWS_THUMBNAIL_BASE, &apos;&apos;).split(&apos;.&apos;)[0];
⋮----
// Try just the basename
⋮----
// Strip the extension if present
const basenameWithoutExt = thumbnailPath.split(&apos;.&apos;)[0];
⋮----
// Check if it&apos;s a direct path to the public directory
if (thumbnailPath.includes(&apos;/&apos;) &amp;&amp; (
thumbnailPath.startsWith(&apos;/&apos;) ||
thumbnailPath.startsWith(&apos;./&apos;) ||
thumbnailPath.startsWith(&apos;../&apos;))) {
// This is likely already a path, return it
⋮----
// Check in the general image map
const mappedImage = getImage(thumbnailPath);
⋮----
// If all else fails, construct a path for the views thumbnail
console.warn(`Views thumbnail not found in map: ${thumbnailPath}, using direct path`);
return `${VIEWS_THUMBNAIL_BASE}${thumbnailPath}${!thumbnailPath.endsWith(&apos;.webp&apos;) ? &apos;.webp&apos; : &apos;&apos;}`;</file><file path="utils/web-vitals-monitor.ts">/// &lt;reference types=&quot;vite/client&quot; /&gt;
⋮----
interface Window {
    va?: (event: string, data: { name: string; data: { name: string; value: number } }) =&gt; void;
  }
⋮----
import { onCLS, onFID, onLCP, onTTFB } from &apos;web-vitals&apos;;
⋮----
/**
 * Monitors Core Web Vitals and logs/reports metrics
 * @see https://web.dev/vitals/
 */
export function monitorWebVitals(): void
⋮----
// Measure Core Web Vitals
⋮----
function logMetric(name: string, value: number): void
⋮----
// Log to console in development
⋮----
// Send to analytics in production
⋮----
// Vercel Analytics integration
⋮----
// This export makes TypeScript treat this file as a module</file><file path="App.tsx">// In your app.tsx
import React from &apos;react&apos;;
import { BrowserRouter as Router, Routes, Route, Link, Navigate } from &apos;react-router-dom&apos;;
import VerticalShortcutLanding from &apos;./VerticalShortcutLanding&apos;;
import ApplicationFormWrapper from &apos;./components/form/ApplicationFormWrapper&apos;;
import VSExampleComponent from &apos;./components/VSExampleComponent&apos;;
import AnimatedButtonsDemo from &apos;./components/marble-buttons/AnimatedButtonsDemo&apos;;
import { ThemeToggle } from &apos;./components/ui/theme-toggle&apos;;
import { DirectTest } from &apos;./components/DirectTest&apos;;
import { DirectClassTest } from &apos;./components/DirectClassTest&apos;;
import VSModalShowcase from &apos;./components/VSModalShowcase&apos;;
import { VSPainPoints, VSCharts, ConnectEverything } from &apos;./components/sections&apos;;
import CalendlyDemo from &apos;./components/Calendly/CalendlyDemo&apos;;
import ThemeStyleGuide from &apos;./components/ThemeStyleGuide&apos;;
⋮----
import ModalImplementation from &apos;./Qualification_components/modal-implementation&apos;;
import TiaPreview from &apos;./Qualification_components/tia-preview&apos;;
import ModuleHUDShowcase from &apos;./components/sections/ModuleHUDShowcase&apos;;
import ThemeVisualizer from &apos;./components/Color-theme-display&apos;;
⋮----
// Load theme toggle script
// Note: Theme is now handled by the dark class on the html element
// The theme-toggle.js script and ThemeProvider add this class
⋮----
{/* Theme toggle and style guide buttons */}
⋮----
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; className=&quot;text-white&quot;&gt;
⋮----
{/* Marble buttons navigation */}
⋮----
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; className=&quot;text-white&quot;&gt;</file><file path="index.css">/* Hide scrollbar for Chrome, Safari and Opera */
.hide-scrollbar::-webkit-scrollbar {
⋮----
/* Hide scrollbar for IE, Edge and Firefox */
.hide-scrollbar {
⋮----
-ms-overflow-style: none;  /* IE and Edge */
scrollbar-width: none;  /* Firefox */</file><file path="main.jsx">// Import our image utilities
⋮----
// Register explicit image imports with the image mapper
registerWithImageMapper(addPublicImage);
⋮----
ReactDOM.createRoot(document.getElementById(&apos;root&apos;)).render(</file><file path="main.tsx">import { StrictMode } from &apos;react&apos;
import { createRoot } from &apos;react-dom/client&apos;
import &apos;./app/globals.css&apos;  // Keep using globals.css for now for core variables
⋮----
import &apos;./styles/index.css&apos;  // Import modular CSS structure for styling
import &apos;./styles/modulehud.css&apos;  // Import ModuleHUD specific styles
import &apos;./styles/custom-text.css&apos;  // Import custom text styles
import App from &apos;./App&apos;
import { ThemeProvider } from &apos;./components/ui/theme-provider&apos;
import { monitorWebVitals } from &apos;./utils/web-vitals-monitor&apos;
import { optimizeImages } from &apos;./utils/image-optimizer&apos;
⋮----
// Import and initialize GSAP for global use and setup
import { gsap } from &apos;gsap&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
⋮----
// Register GSAP plugins globally
⋮----
// Configure GSAP
⋮----
ignoreMobileResize: true, // Reduces updates during mobile resize events
⋮----
// Import and initialize image mappers
import { registerThumbnails } from &apos;./utils/thumbnailMapper&apos;;
import { registerWithImageMapper } from &apos;./utils/importImages&apos;;
import { addPublicImage } from &apos;./utils/imageMap&apos;;
⋮----
// Register images and thumbnails
⋮----
// Initialize performance monitoring and optimization
⋮----
// Create root and render app</file><file path="router.tsx">// File: src/router.tsx
import { createBrowserRouter, RouterProvider } from &quot;react-router-dom&quot;;
import VerticalShortcutLanding from &quot;./VerticalShortcutLanding.tsx&quot;;
import ApplicationFormWrapper from &quot;./components/form/ApplicationFormWrapper.tsx&quot;;
import VSExampleComponent from &quot;./components/VSExampleComponent.tsx&quot;;
import AnimatedButtonsDemo from &quot;./components/marble-buttons/AnimatedButtonsDemo.tsx&quot;;
import { DirectTest } from &quot;./components/DirectTest.tsx&quot;;
import { DirectClassTest } from &quot;./components/DirectClassTest.tsx&quot;;
import VSModalShowcase from &quot;./components/VSModalShowcase.tsx&quot;;
import {
  VSPainPoints,
  VSCharts,
  ConnectEverything,
} from &quot;./components/sections&quot;;
import CalendlyDemo from &quot;./components/Calendly/CalendlyDemo.tsx&quot;;
import ThemeStyleGuide from &quot;./components/ThemeStyleGuide.tsx&quot;;
import ModalImplementation from &quot;./Qualification_components/modal-implementation.tsx&quot;;
import TiaPreview from &quot;./Qualification_components/tia-preview.tsx&quot;;
import ModuleHUDShowcase from &quot;./components/sections/ModuleHUDShowcase.tsx&quot;;
import ThemeVisualizer from &quot;./components/Color-theme-display.tsx&quot;;
import Layout from &quot;./components/Layout&quot;;
import DebugPage from &quot;./pages/DebugPage&quot;;
import NotFound from &quot;./pages/NotFoundPage&quot;;
⋮----
// Define the router configuration
⋮----
// Export the RouterProvider with our configuration</file><file path="ScrollSmootherTest.tsx">import React, { useEffect, useRef } from &apos;react&apos;;
import { gsap } from &apos;gsap&apos;;
import { ScrollSmoother } from &apos;gsap/ScrollSmoother&apos;;
import { ScrollTrigger } from &apos;gsap/ScrollTrigger&apos;;
⋮----
// Register plugins
⋮----
// Log initialization start
⋮----
// Only create ScrollSmoother if the wrapper and content exist
⋮----
// Create ScrollSmoother with minimal settings
⋮----
// Return cleanup function
⋮----
{/* Basic content with clear visual elements */}
⋮----
{/* Add lots of content to enable scrolling */}</file><file path="SimpleTest.tsx">import React from &apos;react&apos;;
⋮----
const SimpleTest = () =&gt;</file><file path="video-peek.css">/* Custom styles for video section */
⋮----
/* Styles for the video container */
.video-container {
⋮----
/* Styling for the video itself */
.video-peek-container iframe {
⋮----
/* Enhanced drop shadow for video */
.video-container &gt; div {
⋮----
/* Extra visual enhancements for better visibility */
.vs-section-light {
⋮----
overflow: visible !important; /* Allow content to overflow for the video peek effect */
⋮----
/* Section styling without gradient overlay */
⋮----
/* Make the video container bigger */
.video-container iframe {
⋮----
/* Gradient background to fade from hero to content section */
.video-peek-section::after {
⋮----
/* Ensure the video won&apos;t be hidden behind content */
⋮----
/* Make sure badge is visible and positioned correctly */
.hero-content.award-badge {
⋮----
bottom: 20%; /* Base positioning */</file><file path="vite-env.d.ts">/// &lt;reference types=&quot;vite/client&quot; /&gt;</file></files></repomix>