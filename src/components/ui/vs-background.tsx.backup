import React, { forwardRef } from 'react';

interface VSBackgroundProps {
  children: React.ReactNode;
  lightBg?: string;
  darkBg?: string;
  className?: string;
  as?: React.ElementType;
  ref?: React.Ref<HTMLElement>;
}

/**
 * VS Background Component - Implements the required styling pattern for background elements
 * 
 * Uses the mandatory pattern of className for CSS variables + dark: variants
 * 
 * @example
 * <VSBackground>Content with proper background</VSBackground>
 * <VSBackground lightBg="bg-[var(--card-bg-light)]" darkBg="dark:bg-[var(--card-bg-navy)]">Card</VSBackground>
 */
export const VSBackground = forwardRef<HTMLElement, VSBackgroundProps & React.HTMLAttributes<HTMLElement>>(
  ({
    children,
    lightBg = 'bg-[var(--bg-cream)]',
    darkBg = 'dark:bg-[var(--bg-navy)]',
    className = '',
    as = 'div',
    ...props
  }, ref) => {
    const Component = as;
    
    return (
      <Component
        ref={ref}
        className={`${lightBg} ${darkBg} ${className}`}
        {...props}
      >
        {children}
      </Component>
    );
  }
);

/**
 * VS Card Component - Properly styled card with correct dark mode support
 */
export const VSCard = forwardRef<HTMLElement, VSBackgroundProps & React.HTMLAttributes<HTMLElement>>(
  ({
    children,
    className = '',
    lightBg = 'bg-gradient-to-br from-white to-[var(--bg-cream)]',
    darkBg = 'dark:bg-gradient-to-br dark:from-[var(--card-bg-navy)] dark:to-[var(--bg-navy-darker)]',
    ...props
  }, ref) => {
    return (
      <VSBackground
        ref={ref}
        lightBg={lightBg}
        darkBg={darkBg}
        className={`rounded-[var(--border-radius-lg)] p-6 
                   border border-[rgba(0,0,0,0.03)] dark:border-white/5 
                   shadow-[2px_2px_8px_rgba(0,0,0,0.05)] dark:shadow-[0_0_15px_rgba(53,115,128,0.15)]
                   transition-all duration-[350ms] ease-[cubic-bezier(0.34,1.56,0.64,1)]
                   hover:translate-y-[-4px] hover:scale-[1.02] hover:shadow-[2px_2px_12px_rgba(0,0,0,0.08)] 
                   dark:hover:shadow-[0_0_20px_rgba(53,115,128,0.2)]
                   ${className}`}
        {...props}
      >
        {children}
      </VSBackground>
    );
  }
);

/**
 * VS Section Component - Creates a full section with proper background styling
 */
export const VSSection = forwardRef<HTMLElement, VSBackgroundProps & React.HTMLAttributes<HTMLElement>>(
  ({
    children,
    className = '',
    lightBg = 'bg-[var(--bg-cream)]',
    darkBg = 'dark:bg-[var(--bg-navy)]',
    ...props
  }, ref) => {
    return (
      <VSBackground
        as="section"
        ref={ref}
        lightBg={lightBg}
        darkBg={darkBg}
        className={`py-24 relative overflow-hidden border-t border-[var(--text-navy)]/10 
                   dark:border-[var(--text-cream)]/10 ${className}`}
        {...props}
      >
        {children}
      </VSBackground>
    );
  }
);

export default VSBackground;