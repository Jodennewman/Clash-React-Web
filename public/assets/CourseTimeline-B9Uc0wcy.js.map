{"version":3,"file":"CourseTimeline-B9Uc0wcy.js","sources":["../../node_modules/split-type/dist/index.js","../../src/components/CourseTimeline.tsx"],"sourcesContent":["/**\n * SplitType\n * https://github.com/lukePeavey/SplitType\n * @version 0.3.4\n * @author Luke Peavey <lwpeavey@gmail.com>\n */\n\n// Polyfill the following DOM methods that are not supported in IE 11.\n\n(function () {\n  function append() {\n    var length = arguments.length;\n\n    for (var i = 0; i < length; i++) {\n      var node = i < 0 || arguments.length <= i ? undefined : arguments[i];\n      if (node.nodeType === 1 || node.nodeType === 11) this.appendChild(node);else this.appendChild(document.createTextNode(String(node)));\n    }\n  }\n\n  function replaceChildren() {\n    while (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    if (arguments.length) this.append.apply(this, arguments);\n  }\n\n  function replaceWith() {\n    var parent = this.parentNode;\n\n    for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n      nodes[_key] = arguments[_key];\n    }\n\n    var i = nodes.length;\n    if (!parent) return;\n    if (!i) parent.removeChild(this);\n\n    while (i--) {\n      var node = nodes[i];\n\n      if (typeof node !== 'object') {\n        node = this.ownerDocument.createTextNode(node);\n      } else if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n\n      if (!i) {\n        parent.replaceChild(node, this);\n      } else {\n        parent.insertBefore(this.previousSibling, node);\n      }\n    }\n  }\n\n  if (typeof Element !== 'undefined') {\n    if (!Element.prototype.append) {\n      Element.prototype.append = append;\n      DocumentFragment.prototype.append = append;\n    }\n\n    if (!Element.prototype.replaceChildren) {\n      Element.prototype.replaceChildren = replaceChildren;\n      DocumentFragment.prototype.replaceChildren = replaceChildren;\n    }\n\n    if (!Element.prototype.replaceWith) {\n      Element.prototype.replaceWith = replaceWith;\n      DocumentFragment.prototype.replaceWith = replaceWith;\n    }\n  }\n})();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/**\n * Shallow merges the properties of an object with the target object. Only\n * includes properties that exist on the target object. Non-writable properties\n * on the target object will not be over-written.\n *\n * @param {Object} target\n * @param {Object} object\n */\nfunction extend(target, object) {\n  return Object.getOwnPropertyNames(Object(target)).reduce(function (extended, key) {\n    var currentValue = Object.getOwnPropertyDescriptor(Object(target), key);\n    var newValue = Object.getOwnPropertyDescriptor(Object(object), key);\n    return Object.defineProperty(extended, key, newValue || currentValue);\n  }, {});\n}\n\n/**\n * Checks if given value is a string\n *\n * @param {any} value\n * @return {boolean} `true` if `value` is a string, else `false`\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Parses user supplied settings objects.\n */\n\nfunction parseSettings() {\n  var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var object = extend(settings); // `split` may be used as an alias for the `types` option\n  // Parse the `types` settings into an array of valid split types.\n  // If `types` is explicitly set to an empty string or array, text will not be\n  // split at all.\n\n  var types;\n\n  if (object.types !== undefined) {\n    types = object.types;\n  } else if (object.split !== undefined) {\n    types = object.split;\n  }\n\n  if (types !== undefined) {\n    object.types = (isString(types) || isArray(types) ? String(types) : '').split(',').map(function (type) {\n      return String(type).trim();\n    }).filter(function (type) {\n      return /((line)|(word)|(char))/i.test(type);\n    });\n  } // Support `position: absolute` as an alias for `absolute: true`\n\n\n  if (object.absolute || object.position) {\n    object.absolute = object.absolute || /absolute/.test(settings.position);\n  }\n\n  return object;\n}\n\n/**\n * Takes a list of `types` and returns an object\n *\n * @param {string | string[]} value a comma separated list of split types\n * @return {{lines: boolean, words: boolean, chars: boolean}}\n */\n\nfunction parseTypes(value) {\n  var types = isString(value) || isArray(value) ? String(value) : '';\n  return {\n    none: !types,\n    lines: /line/i.test(types),\n    words: /word/i.test(types),\n    chars: /char/i.test(types)\n  };\n}\n\n/**\n * Returns true if `value` is a non-null object.\n * @param {any} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n\n/**\n * Returns true if `input` is one of the following:\n * - `Element`\n * - `Text`\n * - `DocumentFragment`\n */\n\nfunction isNode(input) {\n  return isObject(input) && /^(1|3|11)$/.test(input.nodeType);\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n * Original source: Lodash\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3)\n * // => true\n *\n * _.isLength(Number.MIN_VALUE)\n * // => false\n *\n * _.isLength(Infinity)\n * // => false\n *\n * _.isLength('3')\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value === 'number' && value > -1 && value % 1 === 0;\n}\n/**\n * Checks if `value` is an array-like object\n * @param {any} value\n * @return {boolean} true if `value` is array-like`, else `false`\n * @example\n * isArrayLike(new Array())\n * // => true\n *\n * isArrayLike(document.querySelectorAll('div'))\n * // => true\n *\n * isArrayLike(document.getElementsByTagName('div'))\n * // => true\n *\n * isArrayLike(() => {})\n * // => false\n *\n * isArrayLike({foo: 'bar'})\n * // => false\n *\n * * isArrayLike(null)\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return isObject(value) && isLength(value.length);\n}\n\n/**\n * Coerces `value` to an `Array`.\n *\n * @param {any} value\n * @return {any[]}\n * @example\n * // If `value` is any `Array`, returns original `Array`\n * let arr = [1, 2]\n * toArray(arr)\n * // => arr\n *\n * // If `value` is an `ArrayLike`, its equivalent to `Array.from(value)`\n * let nodeList = document.querySelectorAll('div')\n * toArray(nodeList)\n * // => HTMLElement[] s\n *\n * // If value is falsy, returns empty array\n * toArray(null)\n * // => []\n *\n * // For any other type of value, its equivalent to `Array.of(value)`\n * let element = document.createElement('div')\n * toArray(element)\n * // => [element]\n *\n */\n\nfunction toArray(value) {\n  if (isArray(value)) return value;\n  if (value == null) return [];\n  return isArrayLike(value) ? Array.prototype.slice.call(value) : [value];\n}\n\n/**\n * Processes target elements for the splitType function.\n *\n * @param {any} target Can be one of the following:\n * 1. `string` - A css selector\n * 2. `HTMLElement` - A single element\n * 3. `NodeList` - A nodeList\n * 4. `Element[]` - An array of elements\n * 5. `Array<NodeList|Element[]>` - An nested array of elements\n * @returns {Element[]} A flat array HTML elements\n * @return A flat array of elements or empty array if no elements are found\n */\n\nfunction getTargetElements(target) {\n  var elements = target; // If `target` is a selector string...\n\n  if (isString(target)) {\n    if (/^(#[a-z]\\w+)$/.test(target.trim())) {\n      // If `target` is an ID, use `getElementById`\n      elements = document.getElementById(target.trim().slice(1));\n    } else {\n      // Else use `querySelectorAll`\n      elements = document.querySelectorAll(target);\n    }\n  } // Return a flattened array of elements\n\n\n  return toArray(elements).reduce(function (result, element) {\n    return [].concat(_toConsumableArray(result), _toConsumableArray(toArray(element).filter(isNode)));\n  }, []);\n}\n\nvar entries = Object.entries;\n\nvar expando = \"_splittype\";\nvar cache = {};\nvar uid = 0;\n/**\n * Stores data associated with DOM elements or other objects. This is a\n * simplified version of jQuery's data method.\n *\n * @signature Data(owner)\n * @description Get the data store object for the given owner.\n * @param {Object} owner the object that data will be associated with.\n * @return {Object} the data object for given `owner`. If no data exists\n *     for the given object, creates a new data store and returns it.\n *\n * @signature Data(owner, key)\n * @description Get the value\n * @param {Object} owner\n * @param {string} key\n * @return {any} the value of the provided key. If key does not exist, returns\n *     undefined.\n *\n * @signature Data(owner, key, value)\n * @description Sets the given key/value pair in data store\n * @param {Object} owner\n * @param {string} key\n * @param {any} value\n */\n\nfunction set(owner, key, value) {\n  if (!isObject(owner)) {\n    console.warn('[data.set] owner is not an object');\n    return null;\n  }\n\n  var id = owner[expando] || (owner[expando] = ++uid);\n  var data = cache[id] || (cache[id] = {});\n\n  if (value === undefined) {\n    if (!!key && Object.getPrototypeOf(key) === Object.prototype) {\n      cache[id] = _objectSpread2(_objectSpread2({}, data), key);\n    }\n  } else if (key !== undefined) {\n    data[key] = value;\n  }\n\n  return value;\n}\nfunction get(owner, key) {\n  var id = isObject(owner) ? owner[expando] : null;\n  var data = id && cache[id] || {};\n\n  if (key === undefined) {\n    return data;\n  }\n\n  return data[key];\n}\n/**\n * Remove all data associated with the given element\n */\n\nfunction remove(element) {\n  var id = element && element[expando];\n\n  if (id) {\n    delete element[id];\n    delete cache[id];\n  }\n}\n/**\n * Clear all cached data\n */\n\nfunction clear() {\n  Object.keys(cache).forEach(function (key) {\n    delete cache[key];\n  });\n}\n/**\n * Remove all temporary data from the store.\n */\n\nfunction cleanup() {\n  entries(cache).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        _ref2$ = _ref2[1],\n        isRoot = _ref2$.isRoot,\n        isSplit = _ref2$.isSplit;\n\n    if (!isRoot || !isSplit) {\n      cache[id] = null;\n      delete cache[id];\n    }\n  });\n}\n\n/**\n * Splits a string into an array of words.\n *\n * @param {string} string\n * @param {string | RegExp} [separator = ' ']\n * @return {string[]} Array of words\n */\nfunction toWords(value) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  var string = value ? String(value) : '';\n  return string.trim().replace(/\\s+/g, ' ').split(separator);\n}\n\n/**\n * Based on lodash#split <https://lodash.com/license>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters &\n * Editors\n */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\";\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\";\nvar rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\";\nvar rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */\n\nvar rsAstral = \"[\".concat(rsAstralRange, \"]\");\nvar rsCombo = \"[\".concat(rsComboMarksRange).concat(rsComboSymbolsRange, \"]\");\nvar rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\";\nvar rsModifier = \"(?:\".concat(rsCombo, \"|\").concat(rsFitz, \")\");\nvar rsNonAstral = \"[^\".concat(rsAstralRange, \"]\");\nvar rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";\nvar rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";\nvar rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar reOptMod = \"\".concat(rsModifier, \"?\");\nvar rsOptVar = \"[\".concat(rsVarRange, \"]?\");\nvar rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = \"(?:\".concat([\"\".concat(rsNonAstral).concat(rsCombo, \"?\"), rsCombo, rsRegional, rsSurrPair, rsAstral].join('|'), \"\\n)\");\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\nvar reUnicode = RegExp(\"\".concat(rsFitz, \"(?=\").concat(rsFitz, \")|\").concat(rsSymbol).concat(rsSeq), 'g');\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\nvar unicodeRange = [rsZWJ, rsAstralRange, rsComboMarksRange, rsComboSymbolsRange, rsVarRange];\nvar reHasUnicode = RegExp(\"[\".concat(unicodeRange.join(''), \"]\"));\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\nfunction asciiToArray(string) {\n  return string.split('');\n}\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\n\n\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction stringToArray(string) {\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n}\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values.\n *\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\nfunction toString(value) {\n  return value == null ? '' : String(value);\n}\n/**\n * Splits `string` into an array of characters. If `separator` is omitted,\n * it behaves likes split.split('').\n *\n * Unlike native string.split(''), it can split strings that contain unicode\n * characters like emojis and symbols.\n *\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} [separator=''] The separator pattern to split by.\n * @returns {Array} Returns the string segments.\n * @example\n * toChars('foo');\n * // => ['f', 'o', 'o']\n *\n * toChars('foo bar');\n * // => [\"f\", \"o\", \"o\", \" \", \"b\", \"a\", \"r\"]\n *\n * toChars('f😀o');\n * // => ['f', '😀', 'o']\n *\n * toChars('f-😀-o', /-/);\n * // => ['f', '😀', 'o']\n *\n */\n\n\nfunction toChars(string) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  string = toString(string);\n\n  if (string && isString(string)) {\n    if (!separator && hasUnicode(string)) {\n      return stringToArray(string);\n    }\n  }\n\n  return string.split(separator);\n}\n\n/**\n * Create an HTML element with the the given attributes\n *\n * attributes can include standard HTML attribute, as well as the following\n * \"special\" properties:\n *   - children: HTMLElement | ArrayLike<HTMLElement>\n *   - textContent: string\n *   - innerHTML: string\n *\n * @param {string} name\n * @param  {Object} [attributes]\n * @returns {HTMLElement}\n */\n\nfunction createElement(name, attributes) {\n  var element = document.createElement(name);\n\n  if (!attributes) {\n    // When called without the second argument, its just return the result\n    // of `document.createElement`\n    return element;\n  }\n\n  Object.keys(attributes).forEach(function (attribute) {\n    var rawValue = attributes[attribute];\n    var value = isString(rawValue) ? rawValue.trim() : rawValue; // Ignore attribute if the value is `null` or an empty string\n\n    if (value === null || value === '') return;\n\n    if (attribute === 'children') {\n      // Children can be one or more Elements or DOM strings\n      element.append.apply(element, _toConsumableArray(toArray(value)));\n    } else {\n      // Handle standard HTML attributes\n      element.setAttribute(attribute, value);\n    }\n  });\n  return element;\n}\n\nvar defaults = {\n  splitClass: '',\n  lineClass: 'line',\n  wordClass: 'word',\n  charClass: 'char',\n  types: ['lines', 'words', 'chars'],\n  absolute: false,\n  tagName: 'div'\n};\n\n/**\n * Splits the text content of a single TextNode into words and/or characters.\n *\n * This functions gets called for every text node inside the target element. It\n * replaces the text node with a document fragment containing the split text.\n * Returns an array of the split word and character elements from this node.\n *\n * @param {TextNode} textNode\n * @param {Object} settings\n * @return {{words: Element[], chars: Element[]}}\n */\n\nfunction splitWordsAndChars(textNode, settings) {\n  settings = extend(defaults, settings); // The split types\n\n  var types = parseTypes(settings.types); // the tag name for split text nodes\n\n  var TAG_NAME = settings.tagName; // value of the text node\n\n  var VALUE = textNode.nodeValue; // `splitText` is a wrapper to hold the HTML structure\n\n  var splitText = document.createDocumentFragment(); // Arrays of split word and character elements\n\n  var words = [];\n  var chars = [];\n\n  if (/^\\s/.test(VALUE)) {\n    splitText.append(' ');\n  } // Create an array of wrapped word elements.\n\n\n  words = toWords(VALUE).reduce(function (result, WORD, idx, arr) {\n    // Let `wordElement` be the wrapped element for the current word\n    var wordElement;\n    var characterElementsForCurrentWord; // -> If splitting text into characters...\n\n    if (types.chars) {\n      // Iterate through the characters in the current word\n      characterElementsForCurrentWord = toChars(WORD).map(function (CHAR) {\n        var characterElement = createElement(TAG_NAME, {\n          \"class\": \"\".concat(settings.splitClass, \" \").concat(settings.charClass),\n          style: 'display: inline-block;',\n          children: CHAR\n        });\n        set(characterElement, 'isChar', true);\n        chars = [].concat(_toConsumableArray(chars), [characterElement]);\n        return characterElement;\n      });\n    } // END IF;\n\n\n    if (types.words || types.lines) {\n      // -> If Splitting Text Into Words...\n      //    Create an element to wrap the current word. If we are also\n      //    splitting text into characters, the word element will contain the\n      //    wrapped character nodes for this word. If not, it will contain the\n      //    plain text content (WORD)\n      wordElement = createElement(TAG_NAME, {\n        \"class\": \"\".concat(settings.wordClass, \" \").concat(settings.splitClass),\n        style: \"display: inline-block; \".concat(types.words && settings.absolute ? \"position: relative;\" : ''),\n        children: types.chars ? characterElementsForCurrentWord : WORD\n      });\n      set(wordElement, {\n        isWord: true,\n        isWordStart: true,\n        isWordEnd: true\n      });\n      splitText.appendChild(wordElement);\n    } else {\n      // -> If NOT splitting into words OR lines...\n      //    Append the characters elements directly to splitText.\n      characterElementsForCurrentWord.forEach(function (characterElement) {\n        splitText.appendChild(characterElement);\n      });\n    }\n\n    if (idx < arr.length - 1) {\n      // Add a space after the word.\n      splitText.append(' ');\n    } // If not splitting text into words, we return an empty array\n\n\n    return types.words ? result.concat(wordElement) : result;\n  }, []); // END LOOP;\n  // Add a trailing white space to maintain word spacing\n\n  if (/\\s$/.test(VALUE)) {\n    splitText.append(' ');\n  }\n\n  textNode.replaceWith(splitText);\n  return {\n    words: words,\n    chars: chars\n  };\n}\n\n/**\n * Splits the text content of a target element into words and/or characters.\n * The function is recursive, it will also split the text content of any child\n * elements into words/characters, while preserving the nested elements.\n *\n * @param {Node} node an HTML Element or Text Node\n * @param {Object} setting splitType settings\n */\n\nfunction split(node, settings) {\n  var type = node.nodeType; // Arrays of split words and characters\n\n  var wordsAndChars = {\n    words: [],\n    chars: []\n  }; // Only proceed if `node` is an `Element`, `Fragment`, or `Text`\n\n  if (!/(1|3|11)/.test(type)) {\n    return wordsAndChars;\n  } // A) IF `node` is TextNode that contains characters other than white space...\n  //    Split the text content of the node into words and/or characters\n  //    return an object containing the split word and character elements\n\n\n  if (type === 3 && /\\S/.test(node.nodeValue)) {\n    return splitWordsAndChars(node, settings);\n  } // B) ELSE `node` is an 'Element'\n  //    Iterate through its child nodes, calling the `split` function\n  //    recursively for each child node.\n\n\n  var childNodes = toArray(node.childNodes);\n\n  if (childNodes.length) {\n    set(node, 'isSplit', true); // we need to set a few styles on nested html elements\n\n    if (!get(node).isRoot) {\n      node.style.display = 'inline-block';\n      node.style.position = 'relative'; // To maintain original spacing around nested elements when we are\n      // splitting text into lines, we need to check if the element should\n      // have a space before and after, and store that value for later.\n      // Note: this was necessary to maintain the correct spacing when nested\n      // elements do not align with word boundaries. For example, a nested\n      // element only wraps part of a word.\n\n      var nextSibling = node.nextSibling;\n      var prevSibling = node.previousSibling;\n      var text = node.textContent || '';\n      var textAfter = nextSibling ? nextSibling.textContent : ' ';\n      var textBefore = prevSibling ? prevSibling.textContent : ' ';\n      set(node, {\n        isWordEnd: /\\s$/.test(text) || /^\\s/.test(textAfter),\n        isWordStart: /^\\s/.test(text) || /\\s$/.test(textBefore)\n      });\n    }\n  } // Iterate through child nodes, calling `split` recursively\n  // Returns an object containing all split words and chars\n\n\n  return childNodes.reduce(function (result, child) {\n    var _split = split(child, settings),\n        words = _split.words,\n        chars = _split.chars;\n\n    return {\n      words: [].concat(_toConsumableArray(result.words), _toConsumableArray(words)),\n      chars: [].concat(_toConsumableArray(result.chars), _toConsumableArray(chars))\n    };\n  }, wordsAndChars);\n}\n\n/**\n * Gets the height and position of an element relative to offset parent.\n * Should be equivalent to offsetTop and offsetHeight, but with sub-pixel\n * precision.\n *\n * TODO needs work\n */\nfunction getPosition(node, isWord, settings, scrollPos) {\n  if (!settings.absolute) {\n    return {\n      top: isWord ? node.offsetTop : null\n    };\n  }\n\n  var parent = node.offsetParent;\n\n  var _scrollPos = _slicedToArray(scrollPos, 2),\n      scrollX = _scrollPos[0],\n      scrollY = _scrollPos[1];\n\n  var parentX = 0;\n  var parentY = 0;\n\n  if (parent && parent !== document.body) {\n    var parentRect = parent.getBoundingClientRect();\n    parentX = parentRect.x + scrollX;\n    parentY = parentRect.y + scrollY;\n  }\n\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      width = _node$getBoundingClie.width,\n      height = _node$getBoundingClie.height,\n      x = _node$getBoundingClie.x,\n      y = _node$getBoundingClie.y;\n\n  var top = y + scrollY - parentY;\n  var left = x + scrollX - parentX;\n  return {\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n}\n\n/**\n * Recursively \"un-splits\" text into words.\n * This is used when splitting text into lines but not words.\n * We initially split the text into words so we can maintain the correct line\n * breaks. Once text has been split into lines, we \"un-split\" the words...\n * @param {Element}\n * @return {void}\n */\n\nfunction unSplitWords(element) {\n  if (!get(element).isWord) {\n    toArray(element.children).forEach(function (child) {\n      return unSplitWords(child);\n    });\n  } else {\n    remove(element);\n    element.replaceWith.apply(element, _toConsumableArray(element.childNodes));\n  }\n}\n\nvar createFragment = function createFragment() {\n  return document.createDocumentFragment();\n};\n\nfunction repositionAfterSplit(element, settings, scrollPos) {\n  var types = parseTypes(settings.types);\n  var TAG_NAME = settings.tagName;\n  var nodes = element.getElementsByTagName('*');\n  var wordsInEachLine = [];\n  var wordsInCurrentLine = [];\n  var lineOffsetY = null;\n  var elementHeight;\n  var elementWidth;\n  var contentBox;\n  var lines = [];\n  /**------------------------------------------------\n   ** GET STYLES AND POSITIONS\n   **-----------------------------------------------*/\n  // There is no built-in way to detect natural line breaks in text (when a\n  // block of text wraps to fit its container). To split text into lines, we\n  // have to detect line breaks by checking the top offset of words. This is\n  // why text was split into words first. To apply absolute\n  // positioning, its also necessary to record the size and position of every\n  // split node (lines, words, characters).\n  // To consolidate DOM getting/settings, this is all done at the same time,\n  // before actually splitting text into lines, which involves restructuring\n  // the DOM again.\n  // Cache the element's parent and next sibling (for DOM removal).\n\n  var parent = element.parentElement;\n  var nextSibling = element.nextElementSibling; // a wrapper for the new HTML structure\n\n  var splitText = createFragment(); // get the computed style object for the element\n\n  var cs = window.getComputedStyle(element);\n  var align = cs.textAlign;\n  var fontSize = parseFloat(cs.fontSize);\n  var lineThreshold = fontSize * 0.2; // IF using absolute position...\n\n  if (settings.absolute) {\n    // Let contentBox be an object containing the width and offset position of\n    // the element's content box (the area inside padding box). This is needed\n    // (for absolute positioning) to set the width and position of line\n    // elements, which have not been created yet.\n    contentBox = {\n      left: element.offsetLeft,\n      top: element.offsetTop,\n      width: element.offsetWidth\n    }; // Let elementWidth and elementHeight be the actual width/height of the\n    // element. Also check if the element has inline height or width styles\n    // already set. If it does, cache those values for later.\n\n    elementWidth = element.offsetWidth;\n    elementHeight = element.offsetHeight; // Store the original inline height and width of the element\n\n    set(element, {\n      cssWidth: element.style.width,\n      cssHeight: element.style.height\n    });\n  } // Iterate over every node in the target element\n\n\n  toArray(nodes).forEach(function (node) {\n    // node is a word element or custom html element\n    var isWordLike = node.parentElement === element; // TODO needs work\n    // Get te size and position of split text nodes\n\n    var _getPosition = getPosition(node, isWordLike, settings, scrollPos),\n        width = _getPosition.width,\n        height = _getPosition.height,\n        top = _getPosition.top,\n        left = _getPosition.left; // If element is a `<br>` tag return here\n\n\n    if (/^br$/i.test(node.nodeName)) return;\n\n    if (types.lines && isWordLike) {\n      // We compare the top offset of the current word to the top offset of\n      // previous words on the current line. If the difference is greater than\n      // our defined threshold (20%), we assume this word is on a new line.\n      if (lineOffsetY === null || top - lineOffsetY >= lineThreshold) {\n        lineOffsetY = top;\n        wordsInEachLine.push(wordsInCurrentLine = []);\n      } // Add the current word node to the line array\n\n\n      wordsInCurrentLine.push(node);\n    } // END IF\n\n\n    if (settings.absolute) {\n      // Store the size and position split text nodes\n      set(node, {\n        top: top,\n        left: left,\n        width: width,\n        height: height\n      });\n    }\n  }); // END LOOP\n  // Remove the element from the DOM\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n  /**------------------------------------------------\n   ** SPLIT LINES\n   **-----------------------------------------------*/\n\n\n  if (types.lines) {\n    // Iterate over lines of text (see 11 b)\n    // Let `line` be the array of words in the current line.\n    // Return an array of the wrapped line elements (lineElements)\n    lines = wordsInEachLine.map(function (wordsInThisLine) {\n      // Create an element to wrap the current line.\n      var lineElement = createElement(TAG_NAME, {\n        \"class\": \"\".concat(settings.splitClass, \" \").concat(settings.lineClass),\n        style: \"display: block; text-align: \".concat(align, \"; width: 100%;\")\n      });\n      set(lineElement, 'isLine', true);\n      var lineDimensions = {\n        height: 0,\n        top: 1e4\n      }; // Append the `lineElement` to `container`\n\n      splitText.appendChild(lineElement); // Iterate over the word-level elements in the current line.\n      // Note: wordOrElement can either be a word node or nested element\n\n      wordsInThisLine.forEach(function (wordOrElement, idx, arr) {\n        var _data$get = get(wordOrElement),\n            isWordEnd = _data$get.isWordEnd,\n            top = _data$get.top,\n            height = _data$get.height;\n\n        var next = arr[idx + 1]; // Determine line height / y-position\n        // we use the height and offsetTop of the words which we already\n        // recorded. Because custom nested elements could have their own\n        // styles, the words on a line may not all be the same height or\n        // y position. So we take the greatest height / y - offset of the\n        // words on this line.\n\n        lineDimensions.height = Math.max(lineDimensions.height, height);\n        lineDimensions.top = Math.min(lineDimensions.top, top); // append the current word/element\n\n        lineElement.appendChild(wordOrElement); // Determine if there should space after the current element...\n        // If this is not the last word on the current line.\n        // TODO - logic for handing spacing can be improved\n\n        if (isWordEnd && get(next).isWordStart) {\n          lineElement.append(' ');\n        }\n      }); // END LOOP\n\n      if (settings.absolute) {\n        set(lineElement, {\n          height: lineDimensions.height,\n          top: lineDimensions.top\n        });\n      }\n\n      return lineElement;\n    }); // END LOOP\n\n    if (!types.words) {\n      unSplitWords(splitText);\n    } // 10. Insert the new container\n\n\n    element.replaceChildren(splitText);\n  }\n  /**------------------------------------------------\n   **  SET ABSOLUTE POSITION\n   **-----------------------------------------------*/\n  // Apply absolute positioning to all child elements of the target element.\n  // This includes split lines, words, chars, and custom HTML elements that were\n  // included by the user. The size and position of child elements has already\n  // been recorded before splitting text into lines.\n\n\n  if (settings.absolute) {\n    // Set the width/height of the parent element so it does not collapse\n    // when its children are set to absolute position.\n    element.style.width = \"\".concat(element.style.width || elementWidth, \"px\");\n    element.style.height = \"\".concat(elementHeight, \"px\"); // Iterate over all child elements\n\n    toArray(nodes).forEach(function (node) {\n      var _data$get2 = get(node),\n          isLine = _data$get2.isLine,\n          top = _data$get2.top,\n          left = _data$get2.left,\n          width = _data$get2.width,\n          height = _data$get2.height;\n\n      var parentData = get(node.parentElement);\n      var isChildOfLineNode = !isLine && parentData.isLine; // Set the top position of the current node.\n      // -> If `node` a line element, we use the top offset of its first child\n      // -> If `node` the child of line element, then its top offset is zero\n\n      node.style.top = \"\".concat(isChildOfLineNode ? top - parentData.top : top, \"px\"); // Set the left position of the current node.\n      // -> IF `node` is a line element, this is equal to the position left of\n      //    the content box of the parent element\n      // -> IF `node` is the child of a line element, the value has to adjusted\n      //    so its relative to the line element\n\n      node.style.left = isLine ? \"\".concat(contentBox.left, \"px\") : \"\".concat(left - (isChildOfLineNode ? contentBox.left : 0), \"px\"); // Set the height of the current node to the cached value.\n\n      node.style.height = \"\".concat(height, \"px\"); //  Set the width of the current node.\n      //  If its a line element, width is equal to the width of the contentBox.\n\n      node.style.width = isLine ? \"\".concat(contentBox.width, \"px\") : \"\".concat(width, \"px\"); // Finally, set the node's position to absolute.\n\n      node.style.position = 'absolute';\n    });\n  } // end if;\n  // 14. Re-attach the element to the DOM\n\n\n  if (parent) {\n    if (nextSibling) parent.insertBefore(element, nextSibling);else parent.appendChild(element);\n  }\n\n  return lines;\n}\n\nvar _defaults = extend(defaults, {});\n\nvar SplitType = /*#__PURE__*/function () {\n  _createClass(SplitType, null, [{\n    key: \"clearData\",\n\n    /**\n     * CLears all data\n     */\n    value: function clearData() {\n      clear();\n    }\n    /**\n     * The default settings for all splitType instances\n     * @static\n     */\n\n  }, {\n    key: \"setDefaults\",\n\n    /**\n     * Sets the default settings for all SplitType instances.\n     * The provided object will be merged with the existing defaults objects.\n     *\n     * @param {Object} settings an object containing the settings to override\n     * @returns {Object} the new default settings\n     * @public\n     * @static\n     * @example\n     * SplitType.setDefaults({ \"position\": \"absolute\" })\n     */\n    value: function setDefaults(options) {\n      _defaults = extend(_defaults, parseSettings(options));\n      return defaults;\n    }\n    /**\n     * Revert target elements to their original html content\n     * Has no effect on that\n     *\n     * @param {any} elements The target elements to revert. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @static\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(elements) {\n      getTargetElements(elements).forEach(function (element) {\n        var _data$get = get(element),\n            isSplit = _data$get.isSplit,\n            html = _data$get.html,\n            cssWidth = _data$get.cssWidth,\n            cssHeight = _data$get.cssHeight;\n\n        if (isSplit) {\n          element.innerHTML = html;\n          element.style.width = cssWidth || '';\n          element.style.height = cssHeight || '';\n          remove(element);\n        }\n      });\n    }\n    /**\n     * Creates a new SplitType instance\n     * This static method provides a way to create a `SplitType` instance without\n     * using the `new` keyword.\n     *\n     * @param {any} target The target elements to split. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @param {Object} [options] Settings for the SplitType instance\n     * @return {SplitType} the SplitType instance\n     * @static\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(target, options) {\n      return new SplitType(target, options);\n    }\n    /**\n     * Creates a new `SplitType` instance\n     *\n     * @param {any} elements The target elements to split. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @param {Object} [options] Settings for the SplitType instance\n     */\n\n  }, {\n    key: \"data\",\n\n    /**\n     * The internal data store\n     */\n    get: function get() {\n      return cache;\n    }\n  }, {\n    key: \"defaults\",\n    get: function get() {\n      return _defaults;\n    }\n    /**\n     * Sets the default settings for all SplitType instances.\n     *\n     * Setting `SplitType.defaults` to an object will merge that object with the\n     * existing defaults.\n     *\n     * @param {Object} settings an object containing the settings to override\n     * @deprecated\n     * @static\n     * @example\n     * SplitType.defaults = { \"position\": \"absolute\" }\n     */\n    ,\n    set: function set(options) {\n      _defaults = extend(_defaults, parseSettings(options));\n    }\n  }]);\n\n  function SplitType(elements, options) {\n    _classCallCheck(this, SplitType);\n\n    this.isSplit = false;\n    this.settings = extend(_defaults, parseSettings(options));\n    this.elements = getTargetElements(elements); // Start the split process\n\n    this.split();\n  }\n  /**\n   * Splits the text in all target elements. This method is called\n   * automatically when a new SplitType instance is created. It can also be\n   * called manually to re-split text with new options.\n   * @param {Object} options\n   * @public\n   */\n\n\n  _createClass(SplitType, [{\n    key: \"split\",\n    value: function split$1(options) {\n      var _this = this;\n\n      // Revert target elements (if they are already split)\n      // Note: revert was already called once in the constructor. However, we\n      // need to call it again here so text is reverted when the user manually\n      // calls the `split` method to re-split text.\n      this.revert(); // Store the original html content of each target element\n\n      this.elements.forEach(function (element) {\n        set(element, 'html', element.innerHTML);\n      }); // Create arrays to hold the split lines, words, and characters\n\n      this.lines = [];\n      this.words = [];\n      this.chars = []; // cache vertical scroll position before splitting\n\n      var scrollPos = [window.pageXOffset, window.pageYOffset]; // If new options were passed into the `split()` method, update settings\n\n      if (options !== undefined) {\n        this.settings = extend(this.settings, parseSettings(options));\n      }\n\n      var types = parseTypes(this.settings.types); // If the `types` option is set to an empty array, text will not be split.\n      // @example new SplitType('#target', { types: [] })\n\n      if (types.none) {\n        return;\n      } // Split text in each target element\n\n\n      this.elements.forEach(function (element) {\n        // Add the split text nodes from this element to the arrays of all split\n        // text nodes for this instance.\n        set(element, 'isRoot', true);\n\n        var _split2 = split(element, _this.settings),\n            words = _split2.words,\n            chars = _split2.chars;\n\n        _this.words = [].concat(_toConsumableArray(_this.words), _toConsumableArray(words));\n        _this.chars = [].concat(_toConsumableArray(_this.chars), _toConsumableArray(chars));\n      });\n      this.elements.forEach(function (element) {\n        if (types.lines || _this.settings.absolute) {\n          var lines = repositionAfterSplit(element, _this.settings, scrollPos);\n          _this.lines = [].concat(_toConsumableArray(_this.lines), _toConsumableArray(lines));\n        }\n      }); // Set isSplit to true for the SplitType instance\n\n      this.isSplit = true; // Set scroll position to cached value.\n\n      window.scrollTo(scrollPos[0], scrollPos[1]); // Clean up stored data\n\n      cleanup();\n    }\n    /**\n     * Reverts target element(s) back to their original html content\n     * Deletes all stored data associated with the target elements\n     * Resets the properties on the splitType instance\n     *\n     * @public\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert() {\n      if (this.isSplit) {\n        // Reset instance properties if necessary\n        this.lines = null;\n        this.words = null;\n        this.chars = null;\n        this.isSplit = false;\n      }\n\n      SplitType.revert(this.elements);\n    }\n  }]);\n\n  return SplitType;\n}();\n\nexport { SplitType as default };\n","import React, { useEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport SplitType from 'split-type';\nimport { useGSAP } from \"@gsap/react\";\nimport '../styles/week-by-week.css';\n\n// Register the ScrollTrigger plugin\ngsap.registerPlugin(ScrollTrigger);\n\n// Define types for course weeks\ninterface CourseWeek {\n  id: string;\n  week: string;\n  title: string;\n  content: string;\n  icon?: string;\n  highlight?: string;\n  founderTip?: string;\n  bullets?: string[];\n  modules?: string[];\n}\n\n// Dropdown component for timeline items\nconst TimelineDropdown: React.FC<{\n  week: CourseWeek;\n  weekColor: string;\n  isOpen: boolean;\n  toggleOpen: () => void;\n}> = ({ week, weekColor, isOpen, toggleOpen }) => {\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const underlineRef = useRef<HTMLDivElement>(null);\n  const arrowRef = useRef<HTMLDivElement>(null);\n  \n  // Animation for dropdown content\n  useGSAP(() => {\n    if (!contentRef.current) return;\n    \n    // Get theme variables\n    const styles = getComputedStyle(document.documentElement);\n    const animDuration = parseFloat(styles.getPropertyValue('--theme-anim-duration') || '0.35');\n    \n    const ctx = gsap.context(() => {\n      // Set initial state\n      gsap.set(contentRef.current, { \n        height: 0,\n        opacity: 0,\n        overflow: 'hidden'\n      });\n      \n      // Toggle animation based on isOpen state\n      if (isOpen) {\n        gsap.to(contentRef.current, {\n          height: 'auto',\n          opacity: 1,\n          duration: animDuration * 1.2,\n          ease: 'power2.out'\n        });\n        \n        // Rotate arrow\n        if (arrowRef.current) {\n          gsap.to(arrowRef.current, {\n            rotation: 180,\n            duration: animDuration,\n            ease: 'back.out(1.7)'\n          });\n        }\n      } else {\n        gsap.to(contentRef.current, {\n          height: 0,\n          opacity: 0,\n          duration: animDuration,\n          ease: 'power2.in'\n        });\n        \n        // Rotate arrow back\n        if (arrowRef.current) {\n          gsap.to(arrowRef.current, {\n            rotation: 0,\n            duration: animDuration,\n            ease: 'back.in(1.7)'\n          });\n        }\n      }\n    }, dropdownRef);\n    \n    return () => ctx.revert();\n  }, [isOpen]);\n  \n  // Animation for dropdown underline\n  useGSAP(() => {\n    if (!underlineRef.current || !dropdownRef.current) return;\n    \n    const ctx = gsap.context(() => {\n      // Animate underline on hover\n      dropdownRef.current?.addEventListener('mouseenter', () => {\n        gsap.to(underlineRef.current, {\n          width: '100%',\n          opacity: 1,\n          duration: 0.3,\n          ease: 'power2.out'\n        });\n      });\n      \n      dropdownRef.current?.addEventListener('mouseleave', () => {\n        if (!isOpen) {\n          gsap.to(underlineRef.current, {\n            width: '30%',\n            opacity: 0.7,\n            duration: 0.3,\n            ease: 'power2.out'\n          });\n        }\n      });\n    }, dropdownRef);\n    \n    return () => ctx.revert();\n  }, [isOpen]);\n  \n  return (\n    <div ref={dropdownRef} className=\"timeline-dropdown mb-8\">\n      {/* Dropdown header with VS Bubbly hover effect */}\n      <div \n        onClick={toggleOpen}\n        className=\"timeline-dropdown-header flex items-center gap-3 cursor-pointer transition-all duration-300 hover-bubbly-sm\"\n      >\n        {/* Week icon - emojis removed */}\n        \n        {/* Only highlight text, no duplicate title */}\n        <div className=\"flex-1\">\n          {/* Highlight text (shortened) - increased size by 1.5x */}\n          {week.highlight && (\n            <p className=\"text-theme-secondary text-lg md:text-xl lg:text-2xl pr-10\">\n              {week.highlight.length > 120 ? `${week.highlight.substring(0, 120)}...` : week.highlight}\n            </p>\n          )}\n          \n          {/* Orange underline */}\n          <div \n            ref={underlineRef}\n            className=\"timeline-dropdown-underline bg-theme-primary h-[3px] mt-2 rounded-full opacity-70\"\n            style={{ \n              width: isOpen ? '100%' : '30%',\n              backgroundColor: weekColor \n            }}\n          ></div>\n        </div>\n        \n        {/* Dropdown arrow */}\n        <div \n          ref={arrowRef}\n          className=\"timeline-dropdown-arrow text-theme-primary text-2xl transform transition-transform\"\n        >\n          <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            width=\"24\" \n            height=\"24\" \n            viewBox=\"0 0 24 24\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            strokeWidth=\"2\" \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\"\n          >\n            <path d=\"m6 9 6 6 6-6\"/>\n          </svg>\n        </div>\n      </div>\n      \n      {/* Dropdown content - collapsed by default */}\n      <div \n        ref={contentRef}\n        className=\"timeline-dropdown-content overflow-hidden\"\n      >\n        <div className=\"pt-4 px-2\">\n          <div \n            className={`content timeline-card week-${week.id.replace('week', '')}-card rounded-lg p-6 md:p-8 relative overflow-hidden bg-theme-surface shadow-theme-md border-l-[6px]`}\n            style={{ borderColor: weekColor }}\n          >\n            {/* Decorative corner */}\n            <div className=\"timeline-corner-accent absolute top-0 right-0 w-24 h-24 bg-theme-bg-secondary\"></div>\n            \n            {/* Floating elements */}\n            <div className=\"timeline-float absolute -bottom-8 -left-8 w-16 h-16 rounded-[40%] rotate-12 bg-theme-float-secondary\"></div>\n            <div className=\"timeline-float absolute top-1/3 -right-6 w-10 h-10 rounded-[38%] -rotate-12 opacity-theme-float bg-theme-float-primary animate-float-medium\"></div>\n            \n            {/* Main content paragraph - increased size */}\n            <p className=\"text-theme-secondary relative z-10 text-xl md:text-2xl leading-relaxed\">\n              {week.content}\n            </p>\n            \n            {/* Bullet points for easy scanning */}\n            {week.bullets && week.bullets.length > 0 && (\n              <ul className=\"week-bullets mt-4\">\n                {week.bullets.map((bullet, idx) => (\n                  <li key={`${week.id}-bullet-${idx}`} className=\"text-theme-secondary text-lg md:text-xl leading-relaxed\">\n                    {bullet}\n                  </li>\n                ))}\n              </ul>\n            )}\n            \n            {/* Founder tips */}\n            {week.founderTip && (\n              <div className=\"founder-tip text-theme-secondary text-lg md:text-xl italic mt-4\">\n                {week.founderTip}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst CourseTimeline: React.FC = () => {\n  const timelineRef = useRef<HTMLDivElement>(null);\n  const sectionRefs = useRef<HTMLDivElement[]>([]);\n  const titleRef = useRef<HTMLHeadingElement>(null);\n  const introRef = useRef<HTMLParagraphElement>(null);\n  const progressBarRef = useRef<HTMLDivElement>(null);\n  \n  // Track open/closed state for dropdowns\n  const [openWeeks, setOpenWeeks] = useState<string[]>([]);\n  \n  // Toggle dropdown function\n  const toggleWeekOpen = (weekId: string) => {\n    setOpenWeeks(prev => \n      prev.includes(weekId)\n        ? prev.filter(id => id !== weekId)\n        : [...prev, weekId]\n    );\n  };\n  \n  // Define simple color themes for each week (not modules)\n  const getWeekColors = (weekId: string): string => {\n    const colorMap: Record<string, string> = {\n      'week0': 'var(--hud-teal)',\n      'week1': 'var(--primary-orange)',\n      'week2': 'var(--hud-coral)',\n      'week3': 'var(--accent-coral)',\n      'week4': 'var(--secondary-teal)',\n      'week5': 'var(--accent-pink)',\n      'week6': 'var(--accent-yellow)',\n      'week7': 'var(--hud-red)',\n      'week8': 'var(--secondary-teal-light)',\n      'week9-10': 'var(--primary-orange-light)',\n      'week10plus': 'var(--hud-orange)',\n    };\n    \n    return colorMap[weekId] || 'var(--primary-orange)';\n  };\n\n  const courseWeeks: CourseWeek[] = [\n    {\n      id: 'week0',\n      week: 'Week 0',\n      title: 'For the Nerds',\n      icon: '🧠',\n      highlight: 'Immediate access to the exclusive founder community and all upskiller sections for your team.',\n      content: 'Once your application has gone though you\\'ll have immediate access to our first week of content: that\\'s the basic theory plus all three upskiller sections for your team, AND immediate access to our exclusive founder community. We\\'d recommend you start watching the content as soon as you get access (or getting your team to watch it and summarise it), so you can feel smarter than everyone else in the first group call.',\n      bullets: [\n        'Get a head start with the basic theory content',\n        'Access upskiller sections for your team',\n        'Join the exclusive founder community'\n      ]\n    },\n    {\n      id: 'week1',\n      week: 'Week 1',\n      title: 'Theory',\n      icon: '💡',\n      highlight: 'Your brain will be 50% bigger with all the key theory, algorithms, and strategies.',\n      founderTip: 'Have your team watch the content and summarize the key points for you - this saves valuable founder time while ensuring your team is aligned with your vision.',\n      content: 'At the end of this week you\\'ll be exhausted, but your brain will probably be 50% bigger. You\\'ll have the basic theory down, the dos and don\\'ts of short form, how to actually \\'hack\\' the algorithm. Plus all the knowledge to write a good hook, a good script, feel good on camera, AND you\\'ll come away with a unique content strategy personalised to you ready to start posting immediately. We did say it\\'s a lot. PLUS. Your team will have access to everything they need in the upskillers to start mastering researching, scripting, filming and editing. At the end of this week we\\'ll have our first group call, with the other founders in the community. This week we\\'ll focus on introductions, getting to know each other, and help on refining your content strategy. Plus answering the many questions I\\'m sure you\\'ll have.',\n      bullets: [\n        'Master the algorithm and short form dos & don\\'ts',\n        'Learn compelling hook and script writing',\n        'Develop your personalized content strategy',\n        'Join our first community group call'\n      ]\n    },\n    {\n      id: 'week2',\n      week: 'Week 2',\n      title: 'Authority',\n      icon: '👑',\n      highlight: 'Learn how to position yourself as the go-to expert in your field through short-form content.',\n      content: 'It\\'s all well and good making good short form content. But you want more than that - you want to be an authority. At the end of this week you\\'ll know all there is to know about building authority on short form, at all levels, specifically as a founder. You\\'ll learn how to build authority into your strategy, embed it into your content, and engage with your audience. The group coaching call at the end of this week will focus on how to tailor this authority to your specific niche, business, and personality.',\n      bullets: [\n        'Build authority-focused content strategy',\n        'Learn to embed authority signals in your videos',\n        'Master audience engagement techniques',\n        'Personalize authority tactics to your niche'\n      ]\n    },\n    {\n      id: 'week3',\n      week: 'Week 3',\n      title: 'Advanced Theory',\n      icon: '🚀',\n      highlight: 'Take it up a notch with advanced hooking, engagement and storytelling techniques.',\n      founderTip: 'The founder paradox is real - your audience wants authenticity but also expertise. This week helps you balance both effectively.',\n      content: 'Time to take it up a notch. All that theory you\\'ve spent weeks learning? There\\'s even more. At the end of this week you\\'ll know all the advanced techniques we use for hooking, engagement, storytelling and iteration, to build the best content possible. Plus we\\'ll finally address the founder paradox you\\'ll definitely be running into… The call at the end of this week will focus on putting all of this theory into practice with a group workshop.',\n      bullets: [\n        'Master advanced hooking techniques',\n        'Learn sophisticated engagement strategies',\n        'Understand the founder paradox and how to overcome it',\n        'Apply advanced theory in practical workshop'\n      ]\n    },\n    {\n      id: 'week4',\n      week: 'Week 4',\n      title: 'Reading week',\n      icon: '📚',\n      highlight: 'Take a breather, practice what you\\'ve learned, or catch up on missed content.',\n      content: 'The first few weeks may be heavy, and we know you\\'re busy, so take this week as a breather. You can use it to catch up on theory you may have missed, start practicing everything you\\'ve learnt so far with your team, or just go on holiday. But if you do go on holiday, make sure to log on for the group call at the end of the week (no rest for us). This one will be an open Q&A and we promise no question is off the table (no matter how stupid) so everyone feels up to date and confident in the content so far.',\n      bullets: [\n        'Catch up on any missed content',\n        'Begin practicing with your team',\n        'Join the week\\'s open Q&A session',\n        'Ask ANY question (nothing is off limits!)'\n      ]\n    },\n    {\n      id: 'week5',\n      week: 'Week 5',\n      title: 'Delegation',\n      icon: '👥',\n      highlight: 'Transform your team into an efficient in-house content machine with minimal founder input.',\n      founderTip: 'This is where your time investment starts to decrease dramatically. Set up systems this week that will save you hundreds of hours later.',\n      content: 'Maybe your team had a nice break last week. Maybe not. Either way it\\'s now time to give them more work. At the end of week 5 you\\'ll know exactly how to manage your creative team, and turn them into the efficient in-house content machine you\\'ve always dreamed of. The week 5 group call will focus on how to efficiently get your team to execute your vision, and create content that represents you, with minimal founder time and input.',\n      bullets: [\n        'Learn effective creative team management',\n        'Build systems for consistent content creation',\n        'Create workflows that minimize founder input',\n        'Maintain quality while scaling production'\n      ]\n    },\n    {\n      id: 'week6',\n      week: 'Week 6',\n      title: 'Monetisation',\n      icon: '💰',\n      highlight: 'Everyone\\'s favorite part — turn those views into actual revenue.',\n      content: 'Views are great. But we all know why you\\'re really doing this course. At the end of this week you\\'ll know everything we know (so everything there is to know) on lead mags, CTAs, the creator fund, speaking engagements and sponsorship deals. The call at the end of this week will be focussed on which monetisation option is best for you.',\n      bullets: [\n        'Master lead magnets and effective CTAs',\n        'Learn to leverage the creator fund',\n        'Secure speaking engagements',\n        'Negotiate profitable sponsorship deals',\n        'Identify your optimal monetization path'\n      ]\n    },\n    {\n      id: 'week7',\n      week: 'Week 7',\n      title: 'Conversion',\n      icon: '🎯',\n      highlight: 'Turn views into paying customers with short-form funnels and expert conversion tactics.',\n      content: 'By week 7, the views will be coming in, and now it\\'s time to convert them into paying customers or leads. After watching this week\\'s modules you\\'ll learn about every type of short-form funnel, whether its direct to your website, your lead magnet, or another platform. And how to make people actually click on it. This group call will be our last one on course content (congrats you\\'ve made it this far) and will centre around the best conversion strategy for your business.',\n      bullets: [\n        'Master short-form conversion funnels',\n        'Drive traffic to websites, lead magnets, and platforms',\n        'Increase click-through rates with proven tactics',\n        'Develop a tailored conversion strategy for your business'\n      ]\n    },\n    {\n      id: 'week8',\n      week: 'Week 8',\n      title: 'Dark Arts',\n      icon: '✨',\n      highlight: 'Implement everything you\\'ve learned and get hands-on troubleshooting for your content.',\n      founderTip: 'This is when most founders see their first viral hit—because you now have all the knowledge but haven\\'t overthought implementation yet.',\n      content: 'We\\'ve taught you everything we know. Now it\\'s time to put it all into practice. Be brave and try it out yourself this week, no hand holding… …Well a bit of hand holding. This week\\'s call will be an open Q&A where we\\'ll troubleshoot, advice and analyse everything you\\'ve been through in your first week out in the wild.',\n      bullets: [\n        'Put everything into practice',\n        'Create and publish your first content pieces',\n        'Get real-time feedback and analysis',\n        'Troubleshoot and optimize on the fly'\n      ]\n    },\n    {\n      id: 'week9-10',\n      week: 'Week 9-10',\n      title: 'Expert Support',\n      icon: '🤝',\n      highlight: 'Book a personalized 45-minute call with any of our experts for dedicated help.',\n      content: 'Yes. But we assume you\\'ll still want some help. So in this two week period you and/or your team can book in a personalised 45 minute call with any one of our experts you desire. We\\'ll help in any way we can to get your content up and running smoothly.',\n      bullets: [\n        'Schedule a personalized expert call',\n        'Address specific challenges in your content',\n        'Get tailored advice for your business',\n        'Fine-tune your content creation machine'\n      ]\n    },\n    {\n      id: 'week10plus',\n      week: 'Week 10+',\n      title: 'Alumni Status',\n      icon: '🎓',\n      highlight: 'Lifetime access to all resources, videos, and our founder community.',\n      content: 'But don\\'t forgot you\\'ll continue to have lifetime access to all the course resources and videos. Plus whether you\\'re looking for advice (or just wanting a chat) you\\'ll still have direct communication with the founder community and our team of experts. We\\'re not going anywhere. Also i\\'m in love with you.',\n      bullets: [\n        'Ongoing access to all course content',\n        'Continued founder community participation',\n        'Direct access to our team of experts',\n        'Stay up-to-date with short-form best practices'\n      ]\n    }\n  ];\n\n  useGSAP(() => {\n    // Get theme variables for animations\n    const styles = getComputedStyle(document.documentElement);\n    const animDistance = styles.getPropertyValue('--theme-anim-distance') || '-4px';\n    const animDuration = parseFloat(styles.getPropertyValue('--theme-anim-duration') || '0.35');\n\n    // Split text into spans for animations\n    const splitText = (): void => {\n      const elements = document.querySelectorAll('[data-text-split]');\n      elements.forEach(element => {\n        new SplitType(element as HTMLElement, {\n          types: 'words, chars',\n          reduceWhiteSpace: false,\n          tagName: 'span',\n        });\n      });\n    };\n    \n    // Create header animations\n    const createHeaderAnimations = (): void => {\n      if (titleRef.current) {\n        // For non-gradient title, animate the whole element\n        gsap.fromTo(\n          titleRef.current,\n          {\n            opacity: 0,\n            y: 30\n          },\n          {\n            opacity: 1,\n            y: 0,\n            duration: animDuration * 2, // Slightly longer for title\n            ease: 'power3.out',\n            scrollTrigger: {\n              trigger: titleRef.current,\n              start: 'top 80%',\n            }\n          }\n        );\n      }\n      \n      if (introRef.current) {\n        gsap.fromTo(\n          introRef.current,\n          {\n            opacity: 0,\n            y: 20\n          },\n          {\n            opacity: 1,\n            y: 0,\n            duration: animDuration * 1.5,\n            delay: 0.3,\n            ease: 'power2.out',\n            scrollTrigger: {\n              trigger: introRef.current,\n              start: 'top 80%',\n            }\n          }\n        );\n      }\n    };\n    \n    // Create timeline line animation with enhanced scrub effect\n    const createLineAnimation = (): void => {\n      if (progressBarRef.current && timelineRef.current) {\n        gsap.fromTo(\n          progressBarRef.current,\n          { height: '0%' },\n          {\n            height: '100%',\n            ease: 'none',\n            scrollTrigger: {\n              trigger: timelineRef.current,\n              start: 'top 20%', // Start earlier to make progress more visible\n              end: 'bottom 80%',\n              scrub: 0.6, // Smoother scrub effect\n              markers: false, // Set to true for debugging scroll positions\n              pinSpacing: false // Don't add extra space\n            }\n          }\n        );\n      }\n    };\n    \n    // Animate week sections (left side)\n    const animateWeekHeaders = (): void => {\n      sectionRefs.current.forEach((section) => {\n        if (!section) return;\n        \n        // Animate week title text (primary now)\n        const weekTitle = section.querySelector('.week-title');\n        if (weekTitle) {\n          gsap.fromTo(\n            weekTitle,\n            {\n              opacity: 0.3,\n              x: -20\n            },\n            {\n              opacity: 1,\n              x: 0,\n              duration: animDuration * 1.2,\n              ease: 'power2.out',\n              scrollTrigger: {\n                trigger: section,\n                start: 'top 85%',\n                toggleActions: 'play none none none'\n              }\n            }\n          );\n        }\n        \n        // Animate week number (big thin number above title)\n        const weekNumber = section.querySelector('.week-number');\n        if (weekNumber) {\n          gsap.fromTo(\n            weekNumber,\n            {\n              opacity: 0.2,\n              y: -10,\n              scale: 0.95\n            },\n            {\n              opacity: 1,\n              y: 0,\n              scale: 1,\n              duration: animDuration * 1.2,\n              ease: 'power2.out',\n              delay: 0.05,\n              scrollTrigger: {\n                trigger: section,\n                start: 'top 85%',\n                toggleActions: 'play none none none'\n              }\n            }\n          );\n        }\n        \n        // Animate timeline circle\n        const circle = section.querySelector('.timeline-circle');\n        if (circle) {\n          gsap.fromTo(\n            circle,\n            {\n              scale: 0.5,\n              opacity: 0\n            },\n            {\n              scale: 1,\n              opacity: 1,\n              duration: animDuration,\n              ease: 'back.out(1.7)',\n              scrollTrigger: {\n                trigger: section,\n                start: 'top 85%',\n                toggleActions: 'play none none none'\n              }\n            }\n          );\n        }\n      });\n    };\n    \n    // Initialize animations\n    splitText();\n    \n    // Need a small delay to ensure DOM is fully updated after splitting text\n    setTimeout(() => {\n      createHeaderAnimations();\n      createLineAnimation();\n      animateWeekHeaders();\n    }, 100);\n    \n  }, []);\n\n  // Save section refs\n  const addToRefs = (el: HTMLDivElement | null): void => {\n    if (el && !sectionRefs.current.includes(el)) {\n      sectionRefs.current.push(el);\n    }\n  };\n\n  return (\n    <section className=\"py-12 md:py-20 timeline-groovy-bg relative overflow-visible\">\n      {/* Theme-aware floating elements for visual interest */}\n      <div className=\"absolute top-20 left-10 w-24 h-24 rounded-[40%] rotate-12 \n                 opacity-theme-float\n                 bg-theme-float-primary\n                 animate-float-slow\"></div>\n      <div className=\"absolute bottom-40 right-10 w-28 h-28 rounded-[35%] -rotate-12 \n                 opacity-theme-float-secondary\n                 bg-theme-float-secondary\n                 animate-float-medium\"></div>\n      <div className=\"absolute top-1/4 right-1/4 w-32 h-32 rounded-[45%] rotate-45\n                 opacity-[0.08] md:opacity-[0.1]\n                 bg-theme-primary\n                 animate-float-medium\"></div>\n      \n      <div className=\"container mx-auto px-4 md:px-6 max-w-5xl relative z-10 overflow-visible\">\n        <div className=\"max-w-4xl mx-auto text-center mb-12 md:mb-16\">\n          <h2 \n            ref={titleRef}\n            data-text-split=\"true\"\n            className=\"text-4xl md:text-5xl lg:text-6xl font-black mb-6 text-theme-primary\"\n          >\n            Week by week structure\n          </h2>\n          <p \n            ref={introRef}\n            className=\"text-2xl md:text-3xl lg:text-4xl text-theme-secondary max-w-3xl mx-auto\"\n          >\n            We know it's a lot. That's why we've broken it down into 8 weeks of structured learning to take you from short form newbie, to millions of views, in just 8 weeks.\n          </p>\n        </div>\n        \n        <div \n          ref={timelineRef}\n          className=\"timeline-container relative mt-6 md:mt-10\"\n        >\n          {/* Timeline progress bar - positioned with absolute placement */}\n          <div className=\"absolute left-8 md:left-14 top-6 bottom-0 w-[2px] md:w-[3px] bg-theme-bg-secondary opacity-30\">\n            <div \n              ref={progressBarRef}\n              className=\"timeline-progress-bar absolute top-0 left-0 w-full origin-top h-0\" \n            ></div>\n          </div>\n          \n          {/* Timeline items */}\n          <div className=\"relative z-10 space-y-6 md:space-y-10\">\n            {courseWeeks.map((week) => (\n              <div \n                key={week.id}\n                id={week.id}\n                ref={addToRefs}\n                className=\"timeline-week relative pl-16 md:pl-24\"\n              >\n                {/* Circle marker on timeline */}\n                <div \n                  className={`timeline-circle week-${week.id.replace('week', '')}-circle absolute left-8 md:left-14 top-6 w-6 h-6 md:w-8 md:h-8 rounded-full border-2 shadow-theme-sm z-10 border-theme-surface`}\n                  style={{ \n                    transform: 'translate(-50%, -50%)',\n                    backgroundColor: getWeekColors(week.id)\n                  }}\n                ></div>\n                \n                {/* Left side information (now title is primary, week number as badge above) */}\n                <div className=\"flex flex-col items-start mb-4\">\n                  {/* Week number as big, thin font */}\n                  <span className=\"week-number text-theme-primary text-4xl md:text-6xl font-extralight tracking-wider mb-1 opacity-90\" style={{ opacity: 1, letterSpacing: '0.05em' }}>\n                    {week.id === 'week9-10' \n                      ? '09' \n                      : week.id === 'week10plus' \n                        ? '10+' \n                        : week.week.replace('Week ', '').padStart(2, '0')}\n                  </span>\n                  \n                  {/* Week title (PRIMARY) - smaller size and lighter weight */}\n                  <h3 className=\"week-title vs-text-gradient-orange text-xl md:text-2xl font-semibold\" style={{ opacity: 1 }}>\n                    {week.title}\n                  </h3>\n                </div>\n                \n                {/* Expandable content section */}\n                <TimelineDropdown\n                  week={week}\n                  weekColor={getWeekColors(week.id)}\n                  isOpen={openWeeks.includes(week.id)}\n                  toggleOpen={() => toggleWeekOpen(week.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CourseTimeline;"],"names":["append","length","i","node","replaceChildren","replaceWith","parent","_len","nodes","_key","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_defineProperty","obj","key","value","ownKeys","object","enumerableOnly","keys","symbols","sym","_objectSpread2","source","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","iter","_arr","_n","_d","_e","_i","_s","err","o","minLen","n","len","arr2","extend","extended","currentValue","newValue","isString","isArray","parseSettings","settings","types","type","parseTypes","isObject","isNode","input","isLength","isArrayLike","toArray","getTargetElements","elements","result","element","entries","expando","cache","uid","set","owner","id","data","get","remove","clear","cleanup","_ref","_ref2","_ref2$","isRoot","isSplit","toWords","separator","string","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsVarRange","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsZWJ","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsSymbol","reUnicode","unicodeRange","reHasUnicode","asciiToArray","hasUnicode","unicodeToArray","stringToArray","toString","toChars","createElement","name","attributes","attribute","rawValue","defaults","splitWordsAndChars","textNode","TAG_NAME","VALUE","splitText","words","chars","WORD","idx","wordElement","characterElementsForCurrentWord","CHAR","characterElement","split","wordsAndChars","childNodes","nextSibling","prevSibling","text","textAfter","textBefore","child","_split","getPosition","isWord","scrollPos","_scrollPos","scrollX","scrollY","parentX","parentY","parentRect","_node$getBoundingClie","width","height","x","y","top","left","unSplitWords","createFragment","repositionAfterSplit","wordsInEachLine","wordsInCurrentLine","lineOffsetY","elementHeight","elementWidth","contentBox","lines","cs","align","fontSize","lineThreshold","isWordLike","_getPosition","wordsInThisLine","lineElement","lineDimensions","wordOrElement","_data$get","isWordEnd","next","_data$get2","isLine","parentData","isChildOfLineNode","_defaults","SplitType","options","html","cssWidth","cssHeight","_this","_split2","gsap","ScrollTrigger","TimelineDropdown","week","weekColor","isOpen","toggleOpen","dropdownRef","useRef","contentRef","underlineRef","arrowRef","useGSAP","styles","animDuration","ctx","_a","_b","jsxs","jsx","bullet","CourseTimeline","timelineRef","sectionRefs","titleRef","introRef","progressBarRef","openWeeks","setOpenWeeks","useState","toggleWeekOpen","weekId","prev","getWeekColors","courseWeeks","createHeaderAnimations","createLineAnimation","animateWeekHeaders","section","weekTitle","weekNumber","circle","addToRefs","el"],"mappings":"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","x_google_ignoreList":[0]}